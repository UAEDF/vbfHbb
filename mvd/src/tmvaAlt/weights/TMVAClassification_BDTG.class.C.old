// Class: ReadBDTG
// Automatically generated by MethodBase::MakeClass
//

/* configuration options =====================================================

#GEN -*-*-*-*-*-*-*-*-*-*-*- general info -*-*-*-*-*-*-*-*-*-*-*-

Method         : BDT::BDTG
TMVA Release   : 4.2.1         [262657]
ROOT Release   : 6.04/02       [394242]
Creator        : salderwe
Date           : Thu Dec  3 16:28:49 2015
Host           : Linux heisenberg 4.1.6-1-ARCH #1 SMP PREEMPT Mon Aug 17 08:52:28 CEST 2015 x86_64 GNU/Linux
Dir            : /data/AA_UA/Workdir/git/vbfHbb/mvd/src/tmvaAlt
Training events: 320000
Analysis type  : [Classification]


#OPT -*-*-*-*-*-*-*-*-*-*-*-*- options -*-*-*-*-*-*-*-*-*-*-*-*-

# Set by User:
V: "False" [Verbose output (short form of "VerbosityLevel" below - overrides the latter one)]
H: "False" [Print method-specific help message]
NTrees: "600" [Number of trees in the forest]
nCuts: "25" [Number of grid points in variable range used in finding optimal cut in node splitting]
BoostType: "Grad" [Boosting type for the trees in the forest (note: AdaCost is still experimental)]
Shrinkage: "2.000000e-01" [Learning rate for GradBoost algorithm]
# Default:
VerbosityLevel: "Default" [Verbosity level]
VarTransform: "None" [List of variable transformations performed before training, e.g., "D_Background,P_Signal,G,N_AllClasses" for: "Decorrelation, PCA-transformation, Gaussianisation, Normalisation, each for the given class of events ('AllClasses' denotes all events of all classes, if no class indication is given, 'All' is assumed)"]
CreateMVAPdfs: "False" [Create PDFs for classifier outputs (signal and background)]
IgnoreNegWeightsInTraining: "False" [Events with negative weights are ignored in the training (but are included for testing and performance evaluation)]
MaxDepth: "3" [Max depth of the decision tree allowed]
MinNodeSize: "5%" [Minimum percentage of training events required in a leaf node (default: Classification: 5%, Regression: 0.2%)]
AdaBoostR2Loss: "quadratic" [Type of Loss function in AdaBoostR2]
UseBaggedBoost: "False" [Use only a random subsample of all events for growing the trees in each boost iteration.]
AdaBoostBeta: "5.000000e-01" [Learning rate  for AdaBoost algorithm]
UseRandomisedTrees: "False" [Determine at each node splitting the cut variable only as the best out of a random subset of variables (like in RandomForests)]
UseNvars: "2" [Size of the subset of variables used with RandomisedTree option]
UsePoissonNvars: "True" [Interpret "UseNvars" not as fixed number but as mean of a Possion distribution in each split with RandomisedTree option]
BaggedSampleFraction: "6.000000e-01" [Relative size of bagged event sample to original size of the data sample (used whenever bagging is used (i.e. UseBaggedBoost, Bagging,)]
UseYesNoLeaf: "True" [Use Sig or Bkg categories, or the purity=S/(S+B) as classification of the leaf node -> Real-AdaBoost]
NegWeightTreatment: "ignorenegweightsintraining" [How to treat events with negative weights in the BDT training (particular the boosting) : IgnoreInTraining;  Boost With inverse boostweight; Pair events with negative and positive weights in traning sample and *annihilate* them (experimental!)]
Css: "1.000000e+00" [AdaCost: cost of true signal selected signal]
Cts_sb: "1.000000e+00" [AdaCost: cost of true signal selected bkg]
Ctb_ss: "1.000000e+00" [AdaCost: cost of true bkg    selected signal]
Cbb: "1.000000e+00" [AdaCost: cost of true bkg    selected bkg ]
NodePurityLimit: "5.000000e-01" [In boosting/pruning, nodes with purity > NodePurityLimit are signal; background otherwise.]
SeparationType: "giniindex" [Separation criterion for node splitting]
DoBoostMonitor: "False" [Create control plot with ROC integral vs tree number]
UseFisherCuts: "False" [Use multivariate splits using the Fisher criterion]
MinLinCorrForFisher: "8.000000e-01" [The minimum linear correlation between two variables demanded for use in Fisher criterion in node splitting]
UseExclusiveVars: "False" [Variables already used in fisher criterion are not anymore analysed individually for node splitting]
DoPreselection: "False" [and and apply automatic pre-selection for 100% efficient signal (bkg) cuts prior to training]
SigToBkgFraction: "1.000000e+00" [Sig to Bkg ratio used in Training (similar to NodePurityLimit, which cannot be used in real adaboost]
PruneMethod: "nopruning" [Note: for BDTs use small trees (e.g.MaxDepth=3) and NoPruning:  Pruning: Method used for pruning (removal) of statistically insignificant branches ]
PruneStrength: "0.000000e+00" [Pruning strength]
PruningValFraction: "5.000000e-01" [Fraction of events to use for optimizing automatic pruning.]
nEventsMin: "0" [deprecated: Use MinNodeSize (in % of training events) instead]
UseBaggedGrad: "False" [deprecated: Use *UseBaggedBoost* instead:  Use only a random subsample of all events for growing the trees in each iteration.]
GradBaggingFraction: "6.000000e-01" [deprecated: Use *BaggedSampleFraction* instead: Defines the fraction of events to be used in each iteration, e.g. when UseBaggedGrad=kTRUE. ]
UseNTrainEvents: "0" [deprecated: Use *BaggedSampleFraction* instead: Number of randomly picked training events used in randomised (and bagged) trees]
NNodesMax: "0" [deprecated: Use MaxDepth instead to limit the tree size]
##


#VAR -*-*-*-*-*-*-*-*-*-*-*-* variables *-*-*-*-*-*-*-*-*-*-*-*-

NVar 4
eta                           eta                           eta                           eta                                                             'F'    [-4.99277973175,4.99174642563]
etaIdx                        etaIdx                        etaIdx                        etaIdx                                                          'I'    [0,3]
btag                          btag                          btag                          btag                                                            'F'    [-10,1]
btagIdx                       btagIdx                       btagIdx                       btagIdx                                                         'I'    [0,3]
NSpec 0


============================================================================ */

#include <vector>
#include <cmath>
#include <string>
#include <iostream>

#define NN new BDTGNode
   
#ifndef BDTGNode__def
#define BDTGNode__def
   
class BDTGNode {
   
public:
   
   // constructor of an essentially "empty" node floating in space
   BDTGNode ( BDTGNode* left,BDTGNode* right,
                          int selector, double cutValue, bool cutType, 
                          int nodeType, double purity, double response ) :
   fLeft         ( left         ),
   fRight        ( right        ),
   fSelector     ( selector     ),
   fCutValue     ( cutValue     ),
   fCutType      ( cutType      ),
   fNodeType     ( nodeType     ),
   fPurity       ( purity       ),
   fResponse     ( response     ){
   }

   virtual ~BDTGNode();

   // test event if it decends the tree at this node to the right
   virtual bool GoesRight( const std::vector<double>& inputValues ) const;
   BDTGNode* GetRight( void )  {return fRight; };

   // test event if it decends the tree at this node to the left 
   virtual bool GoesLeft ( const std::vector<double>& inputValues ) const;
   BDTGNode* GetLeft( void ) { return fLeft; };   

   // return  S/(S+B) (purity) at this node (from  training)

   double GetPurity( void ) const { return fPurity; } 
   // return the node type
   int    GetNodeType( void ) const { return fNodeType; }
   double GetResponse(void) const {return fResponse;}

private:

   BDTGNode*   fLeft;     // pointer to the left daughter node
   BDTGNode*   fRight;    // pointer to the right daughter node
   int                     fSelector; // index of variable used in node selection (decision tree)   
   double                  fCutValue; // cut value appplied on this node to discriminate bkg against sig
   bool                    fCutType;  // true: if event variable > cutValue ==> signal , false otherwise
   int                     fNodeType; // Type of node: -1 == Bkg-leaf, 1 == Signal-leaf, 0 = internal 
   double                  fPurity;   // Purity of node from training
   double                  fResponse; // Regression response value of node
}; 
   
//_______________________________________________________________________
   BDTGNode::~BDTGNode()
{
   if (fLeft  != NULL) delete fLeft;
   if (fRight != NULL) delete fRight;
}; 
   
//_______________________________________________________________________
bool BDTGNode::GoesRight( const std::vector<double>& inputValues ) const
{
   // test event if it decends the tree at this node to the right
   bool result;
     result = (inputValues[fSelector] > fCutValue );
   if (fCutType == true) return result; //the cuts are selecting Signal ;
   else return !result;
}
   
//_______________________________________________________________________
bool BDTGNode::GoesLeft( const std::vector<double>& inputValues ) const
{
   // test event if it decends the tree at this node to the left
   if (!this->GoesRight(inputValues)) return true;
   else return false;
}
   
#endif
   
#ifndef IClassifierReader__def
#define IClassifierReader__def

class IClassifierReader {

 public:

   // constructor
   IClassifierReader() : fStatusIsClean( true ) {}
   virtual ~IClassifierReader() {}

   // return classifier response
   virtual double GetMvaValue( const std::vector<double>& inputValues ) const = 0;

   // returns classifier status
   bool IsStatusClean() const { return fStatusIsClean; }

 protected:

   bool fStatusIsClean;
};

#endif

class ReadBDTG : public IClassifierReader {

 public:

   // constructor
   ReadBDTG( std::vector<std::string>& theInputVars ) 
      : IClassifierReader(),
        fClassName( "ReadBDTG" ),
        fNvars( 4 ),
        fIsNormalised( false )
   {      
      // the training input variables
      const char* inputVars[] = { "eta", "etaIdx", "btag", "btagIdx" };

      // sanity checks
      if (theInputVars.size() <= 0) {
         std::cout << "Problem in class \"" << fClassName << "\": empty input vector" << std::endl;
         fStatusIsClean = false;
      }

      if (theInputVars.size() != fNvars) {
         std::cout << "Problem in class \"" << fClassName << "\": mismatch in number of input values: "
                   << theInputVars.size() << " != " << fNvars << std::endl;
         fStatusIsClean = false;
      }

      // validate input variables
      for (size_t ivar = 0; ivar < theInputVars.size(); ivar++) {
         if (theInputVars[ivar] != inputVars[ivar]) {
            std::cout << "Problem in class \"" << fClassName << "\": mismatch in input variable names" << std::endl
                      << " for variable [" << ivar << "]: " << theInputVars[ivar].c_str() << " != " << inputVars[ivar] << std::endl;
            fStatusIsClean = false;
         }
      }

      // initialize min and max vectors (for normalisation)
      fVmin[0] = 0;
      fVmax[0] = 0;
      fVmin[1] = 0;
      fVmax[1] = 0;
      fVmin[2] = 0;
      fVmax[2] = 0;
      fVmin[3] = 0;
      fVmax[3] = 0;

      // initialize input variable types
      fType[0] = 'F';
      fType[1] = 'I';
      fType[2] = 'F';
      fType[3] = 'I';

      // initialize constants
      Initialize();

   }

   // destructor
   virtual ~ReadBDTG() {
      Clear(); // method-specific
   }

   // the classifier response
   // "inputValues" is a vector of input values in the same order as the 
   // variables given to the constructor
   double GetMvaValue( const std::vector<double>& inputValues ) const;

 private:

   // method-specific destructor
   void Clear();

   // common member variables
   const char* fClassName;

   const size_t fNvars;
   size_t GetNvar()           const { return fNvars; }
   char   GetType( int ivar ) const { return fType[ivar]; }

   // normalisation of input variables
   const bool fIsNormalised;
   bool IsNormalised() const { return fIsNormalised; }
   double fVmin[4];
   double fVmax[4];
   double NormVariable( double x, double xmin, double xmax ) const {
      // normalise to output range: [-1, 1]
      return 2*(x - xmin)/(xmax - xmin) - 1.0;
   }

   // type of input variable: 'F' or 'I'
   char   fType[4];

   // initialize internal variables
   void Initialize();
   double GetMvaValue__( const std::vector<double>& inputValues ) const;

   // private members (method specific)
   std::vector<BDTGNode*> fForest;       // i.e. root nodes of decision trees
   std::vector<double>                fBoostWeights; // the weights applied in the individual boosts
};

double ReadBDTG::GetMvaValue__( const std::vector<double>& inputValues ) const
{
   double myMVA = 0;
   for (unsigned int itree=0; itree<fForest.size(); itree++){
      BDTGNode *current = fForest[itree];
      while (current->GetNodeType() == 0) { //intermediate node
         if (current->GoesRight(inputValues)) current=(BDTGNode*)current->GetRight();
         else current=(BDTGNode*)current->GetLeft();
      }
      myMVA += current->GetResponse();
   }
   return 2.0/(1.0+exp(-2.0*myMVA))-1.0;
};

void ReadBDTG::Initialize()
{
  // itree = 0
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,0.0155908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.0107067) , 
0, 0.0166736, 1, 0, 0.532911,0.0329113) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91502,0.166008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992175,0.19687) , 
2, 0.869832, 1, 0, 0.980415,0.480415) , 
2, 0.576923, 1, 0, 0.883685,0.383685) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172226,-0.193111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.00626647) , 
1, 1, 1, 0, 0.127787,-0.000271469) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00415709,-0.198337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0204795,-0.191808) , 
0, -3.01497, 1, 0, 0.015964,-0.484036) , 
1, 3, 1, 0, 0.0793766,-0.029089) , 
3, 2, 1, 0, 0.5,-0.0139031)    );
  // itree = 1
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,0.0124759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.00856645) , 
0, 0.0166736, 1, 0, 0.532911,0.0263294) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907771,0.13383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990893,0.163799) , 
2, 0.853561, 1, 0, 0.980415,0.385509) , 
2, 0.576923, 1, 0, 0.883685,0.307871) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172226,-0.160813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.00501339) , 
1, 1, 1, 0, 0.127787,-0.000268972) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00415709,-0.165526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0204795,-0.159642) , 
0, -3.01497, 1, 0, 0.015964,-0.388421) , 
1, 3, 1, 0, 0.0793766,-0.0233759) , 
3, 2, 1, 0, 0.5,-0.0111781)    );
  // itree = 2
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,0.00998682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.00685512) , 
0, 0.0166736, 1, 0, 0.532911,0.0210646) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.924355,0.119962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993254,0.145545) , 
2, 0.886103, 1, 0, 0.980415,0.311319) , 
2, 0.576923, 1, 0, 0.883685,0.248579) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172226,-0.141482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.00401111) , 
1, 1, 1, 0, 0.127787,-0.000266974) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00415709,-0.146408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0204795,-0.140269) , 
0, -3.01497, 1, 0, 0.015964,-0.313691) , 
1, 3, 1, 0, 0.0793766,-0.0189158) , 
3, 2, 1, 0, 0.5,-0.00905086)    );
  // itree = 3
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,0.00799535) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.005486) , 
0, 0.0166736, 1, 0, 0.532911,0.0168527) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907771,0.0994044) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990893,0.131899) , 
2, 0.853561, 1, 0, 0.980415,0.252287) , 
2, 0.576923, 1, 0, 0.883685,0.201397) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172226,-0.128405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.00320926) , 
1, 1, 1, 0, 0.127787,-0.000265376) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0125447,-0.13051) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0247093,-0.12493) , 
0, -1.77883, 1, 0, 0.015964,-0.25423) , 
1, 3, 1, 0, 0.0793766,-0.0153689) , 
3, 2, 1, 0, 0.5,-0.00735913)    );
  // itree = 4
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,0.0064011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.00439036) , 
0, 0.0166736, 1, 0, 0.532911,0.013483) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91502,0.0902439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992175,0.123387) , 
2, 0.869832, 1, 0, 0.980415,0.204886) , 
2, 0.576923, 1, 0, 0.883685,0.163514) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172226,-0.118783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.00256772) , 
1, 1, 1, 0, 0.127787,-0.000264097) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00415709,-0.125316) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0204795,-0.11717) , 
0, -3.01497, 1, 0, 0.015964,-0.206479) , 
1, 3, 1, 0, 0.0793766,-0.0125886) , 
3, 2, 1, 0, 0.5,-0.00603303)    );
  // itree = 5
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,0.0051245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.00351346) , 
0, 0.0166736, 1, 0, 0.532911,0.0107871) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.121966,-0.0769163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0145632,-0.112833) , 
1, 3, 1, 0, 0.0753328,-0.0104417) , 
3, 2, 1, 0, 0.164125,-0.00846351) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846637,0.0699407) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965352,0.105418) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995568,0.119205) , 
2, 0.938048, 1, 0, 0.988057,0.171161) , 
2, 0.853561, 1, 0, 0.968695,0.164601) , 
2, 0.576923, 1, 0, 0.5,-5.8768e-05)    );
  // itree = 6
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,0.0041022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.0028116) , 
0, 0.0166736, 1, 0, 0.532911,0.00863013) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99369,0.11283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956412,0.088654) , 
3, 1, 1, 0, 0.980415,0.000137971) , 
2, 0.576923, 1, 0, 0.883685,0.108415) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0215799,-0.10378) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00572656,-0.115211) , 
0, 3.02477, 1, 0, 0.0172226,-0.145974) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,0.0122559) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.015964,-0.10582) , 
1, 3, 1, 0, 0.126813,-0.00435602) , 
1, 1, 1, 0, 0.0793766,-0.00848701) , 
3, 2, 1, 0, 0.5,-0.00407671)    );
  // itree = 7
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.037404,-0.12205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136876,-0.103899) , 
3, 3, 1, 0, 0.0255735,-0.000178754) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,0.0627757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0237983,-0.114733) , 
1, 3, 1, 0, 0.2523,-0.00276817) , 
1, 1, 1, 0, 0.164125,-0.0058223) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875307,0.058757) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97565,0.0980202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995632,0.110303) , 
2, 0.938672, 1, 0, 0.991749,0.11629) , 
2, 0.886103, 1, 0, 0.968695,0.109497) , 
2, 0.576923, 1, 0, 0.5,9.12606e-05)    );
  // itree = 8
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,-0.0114535) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,0.0912466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,-0.0284719) , 
0, 1.47527, 1, 0, 0.91048,0.0892382) , 
0, -1.27985, 1, 0, 0.883685,0.0733569) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0343899,-0.0902885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220952,-0.0225168) , 
0, -1.22643, 1, 0, 0.108125,-0.0698472) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0369338,-0.0899964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00667492,-0.106534) , 
0, 2.9978, 1, 0, 0.0264754,-0.100596) , 
0, 1.53556, 1, 0, 0.0793766,-0.0806737) , 
3, 2, 1, 0, 0.5,-0.00276095)    );
  // itree = 9
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.037404,-0.111361) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136876,-0.094794) , 
3, 3, 1, 0, 0.0255735,-0.00012786) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,0.0488601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0237983,-0.106191) , 
1, 3, 1, 0, 0.2523,-0.00191429) , 
1, 1, 1, 0, 0.164125,-0.00401456) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846637,0.0366049) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.957027,0.0777565) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994085,0.103642) , 
2, 0.91552, 1, 0, 0.988057,0.0822333) , 
2, 0.853561, 1, 0, 0.968695,0.0773759) , 
2, 0.576923, 1, 0, 0.5,-0.000107135)    );
  // itree = 10
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0146013,-0.089406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0187272,-0.104362) , 
2, -0.627234, 1, 0, 0.016365,-0.0782363) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509043,-0.00719975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0151935,-0.0969394) , 
1, 3, 1, 0, 0.152763,-0.00229592) , 
1, 1, 1, 0, 0.0954895,-0.0045621) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.220806,-0.0963531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966302,0.0980369) , 
1, 1, 1, 0, 0.868845,0.000816216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.219901,-0.103132) , 
1, 3, 1, 0, 0.793166,-0.00689792) , 
2, 0.153846, 1, 0, 0.5,-0.000213096)    );
  // itree = 11
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0481048,-0.0775005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.293855,-0.0107047) , 
0, -0.975346, 1, 0, 0.129801,-0.0465685) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0220932,-0.0803095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0739525,-0.0826908) , 
2, -0.627234, 1, 0, 0.041456,-0.0655103) , 
0, 1.15154, 1, 0, 0.0954895,-0.0539251) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.220806,-0.0817291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966302,0.089646) , 
1, 1, 1, 0, 0.868845,0.000398399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.219901,-0.0872303) , 
1, 3, 1, 0, 0.793166,-0.00609877) , 
2, 0.153846, 1, 0, 0.5,-0.000129152)    );
  // itree = 12
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0146013,-0.0801299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0187272,-0.0944233) , 
2, -0.627234, 1, 0, 0.016365,-0.0545928) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509043,0.00180783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0151935,-0.0878288) , 
1, 3, 1, 0, 0.152763,-0.00164895) , 
1, 1, 1, 0, 0.0954895,-0.00325724) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.220806,-0.0687029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.966302,0.0815592) , 
1, 1, 1, 0, 0.868845,4.56855e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.219901,-0.0731262) , 
1, 3, 1, 0, 0.793166,-0.00549471) , 
2, 0.153846, 1, 0, 0.5,3.17496e-05)    );
  // itree = 13
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.037404,-0.0779618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136876,-0.0765973) , 
3, 3, 1, 0, 0.0255735,8.0152e-07) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,0.0216537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0237983,-0.079174) , 
1, 3, 1, 0, 0.2523,-0.000953166) , 
1, 1, 1, 0, 0.164125,-0.00197646) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.859565,0.0114765) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974895,0.0712489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996333,0.098494) , 
2, 0.949936, 1, 0, 0.990072,0.0426206) , 
2, 0.869832, 1, 0, 0.968695,0.0373125) , 
2, 0.576923, 1, 0, 0.5,3.99243e-05)    );
  // itree = 14
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00975338,-0.0834109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.075697,-0.000492212) , 
2, -9.65385, 1, 0, 0.0276082,-0.0242674) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.197967,-0.0239925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0770066,-0.0641241) , 
0, 1.10144, 1, 0, 0.161912,-0.0370762) , 
2, -0.627234, 1, 0, 0.0954895,-0.0307413) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.203041,-0.0532313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.262328,-0.0229995) , 
2, 0.216437, 1, 0, 0.231929,-0.0446103) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.560974,0.0588551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96883,0.0630245) , 
2, 0.579435, 1, 0, 0.921375,0.0376064) , 
2, 0.316573, 1, 0, 0.793166,0.0223174) , 
2, 0.153846, 1, 0, 0.5,2.19729e-05)    );
  // itree = 15
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,-0.0188133) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,0.0588611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,-0.0270432) , 
0, 1.47527, 1, 0, 0.91048,0.028344) , 
0, -1.27985, 1, 0, 0.883685,0.0210732) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0494375,-0.0502561) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.291686,0.00713608) , 
0, -0.783373, 1, 0, 0.102931,-0.0185533) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0226214,-0.0547113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0743421,-0.0508094) , 
2, -0.69872, 1, 0, 0.0490637,-0.0286936) , 
0, 0.767524, 1, 0, 0.0793766,-0.0229873) , 
3, 2, 1, 0, 0.5,-0.000829228)    );
  // itree = 16
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123601,-0.065679) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0137948,-0.0627205) , 
3, 3, 1, 0, 0.0726043,6.95635e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965883,0.0678646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.00550972) , 
3, 2, 1, 0, 0.905792,-0.00017626) , 
1, 1, 1, 0, 0.637728,-7.32995e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0575119,-0.0894546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169291,-0.058153) , 
0, -2.02048, 1, 0, 0.123163,-0.0503395) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0060995,-0.080815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0200372,-0.0434439) , 
0, -2.88855, 1, 0, 0.0127523,-0.0185526) , 
3, 3, 1, 0, 0.0720437,-0.000887336) , 
1, 3, 1, 0, 0.5,-0.000747715)    );
  // itree = 17
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979999,0.0742916) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994424,0.088452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977852,0.070923) , 
0, 0.811956, 1, 0, 0.989296,0.0264986) , 
0, -0.763562, 1, 0, 0.986971,0.0274461) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0456773,-0.0627209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.818368,0.0219475) , 
1, 1, 1, 0, 0.450539,-0.000112328) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0718829,-0.0708927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0127523,-0.0557616) , 
3, 3, 1, 0, 0.0435262,-0.000322213) , 
1, 3, 1, 0, 0.319382,-0.000865406) , 
3, 1, 1, 0, 0.5,-0.000631268)    );
  // itree = 18
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00975338,-0.0678922) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.075697,0.0240671) , 
2, -9.65385, 1, 0, 0.0276082,-0.00933076) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0842863,-0.0496088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.197221,-0.0171918) , 
0, -1.02171, 1, 0, 0.161912,-0.0249295) , 
2, -0.627234, 1, 0, 0.0954895,-0.0172149) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.222855,-0.0334748) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.508329,0.0386199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9694,0.0480965) , 
2, 0.586941, 1, 0, 0.902548,0.021459) , 
2, 0.284029, 1, 0, 0.793166,0.0125755) , 
2, 0.153846, 1, 0, 0.5,5.7487e-05)    );
  // itree = 19
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123601,-0.0517816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0137948,-0.047063) , 
3, 3, 1, 0, 0.0726043,0.000103293) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965883,0.053942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.00528684) , 
3, 2, 1, 0, 0.905792,-0.000163931) , 
1, 1, 1, 0, 0.637728,-6.68044e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0708832,-0.0709745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17971,-0.0398515) , 
0, -1.77547, 1, 0, 0.123163,-0.0332341) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0060995,-0.0694195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0200372,-0.0275163) , 
0, -2.88855, 1, 0, 0.0127523,-0.010292) , 
3, 3, 1, 0, 0.0720437,-0.000585259) , 
1, 3, 1, 0, 0.5,-0.000483539)    );
  // itree = 20
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979999,0.0630406) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994293,0.0797045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982759,0.064277) , 
0, 0.525503, 1, 0, 0.989296,0.01743) , 
0, -0.763562, 1, 0, 0.986971,0.0180975) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0176983,-0.0367759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.193634,-0.049859) , 
2, -0.69231, 1, 0, 0.105339,-0.0216706) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.607483,0.0152869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.147527,-0.0366897) , 
0, 1.22542, 1, 0, 0.401921,-0.000820174) , 
0, -1.5366, 1, 0, 0.319382,-0.00662287) , 
3, 1, 1, 0, 0.5,-0.000415787)    );
  // itree = 21
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00975338,-0.0544355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.075697,0.0309422) , 
2, -9.65385, 1, 0, 0.0276082,-0.00382886) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.145162,-0.0289729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172796,-0.0138623) , 
2, 0.0592269, 1, 0, 0.161912,-0.0188089) , 
2, -0.627234, 1, 0, 0.0954895,-0.0114003) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.215655,-0.0304597) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.448704,0.0275123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967871,0.035906) , 
2, 0.568165, 1, 0, 0.880043,0.0139657) , 
2, 0.251485, 1, 0, 0.793166,0.0084116) , 
2, 0.153846, 1, 0, 0.5,8.65871e-05)    );
  // itree = 22
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123601,-0.0441052) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0137948,-0.0340776) , 
3, 3, 1, 0, 0.0726043,0.000109994) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965883,0.0436575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.00135244) , 
3, 2, 1, 0, 0.905792,-0.000130433) , 
1, 1, 1, 0, 0.637728,-5.42271e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0132538,-0.0284451) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0700413,-0.0615465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.146973,-0.0383915) , 
0, -1.84786, 1, 0, 0.114161,-0.0251692) , 
2, -0.692308, 1, 0, 0.0720437,-0.0167789) , 
1, 3, 1, 0, 0.5,-0.000338016)    );
  // itree = 23
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.141214,-0.0253305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911265,0.0237329) , 
1, 1, 1, 0, 0.793762,-2.58555e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0132538,-0.0241774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114161,-0.0402246) , 
2, -0.692308, 1, 0, 0.0720437,-0.0135022) , 
1, 3, 1, 0, 0.581892,-0.00013439) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0291695,-0.00711205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00548765,-0.0694965) , 
0, 3.10149, 1, 0, 0.0173694,-0.0065033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.223382,-0.0543614) , 
2, -0.692308, 1, 0, 0.101956,-0.0174445) , 
0, 1.91958, 1, 0, 0.5,7.0332e-05)    );
  // itree = 24
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00975338,-0.0417943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.075697,0.0291636) , 
2, -9.65385, 1, 0, 0.0276082,-0.00127308) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.150323,-0.0230402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179417,-0.0091928) , 
2, 0.0887902, 1, 0, 0.161912,-0.015868) , 
2, -0.627234, 1, 0, 0.0954895,-0.00864983) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.295234,-0.00800382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176657,-0.0355904) , 
0, 0.681032, 1, 0, 0.244407,-0.0167167) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621753,0.040271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971816,0.0330079) , 
2, 0.624497, 1, 0, 0.932818,0.0122098) , 
2, 0.349117, 1, 0, 0.793166,0.00634174) , 
2, 0.153846, 1, 0, 0.5,4.22344e-05)    );
  // itree = 25
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0161649,-0.0265824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226611,-0.0515228) , 
2, -0.692308, 1, 0, 0.102678,-0.0148255) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805713,0.0187091) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.142374,-0.023826) , 
1, 3, 1, 0, 0.714295,2.25595e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0178544,-0.0233838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.250306,-0.0401288) , 
2, -0.692308, 1, 0, 0.123657,-0.013091) , 
0, 1.80144, 1, 0, 0.582353,0.00312458) , 
0, -1.92062, 1, 0, 0.5,4.28252e-05)    );
  // itree = 26
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979999,0.0505715) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994293,0.0670617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982759,0.0508614) , 
0, 0.525503, 1, 0, 0.989296,0.0102032) , 
0, -0.763562, 1, 0, 0.986971,0.010772) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0176983,-0.0178833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.193634,-0.0350127) , 
2, -0.69231, 1, 0, 0.105339,-0.012244) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.620011,0.0104094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.221593,-0.0166669) , 
0, 0.723243, 1, 0, 0.401921,-0.000762205) , 
0, -1.5366, 1, 0, 0.319382,-0.00395759) , 
3, 1, 1, 0, 0.5,-0.000255016)    );
  // itree = 27
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00975338,-0.030566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.075697,0.0285653) , 
2, -9.65385, 1, 0, 0.0276082,0.000314928) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.145162,-0.0231851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172796,-0.0103903) , 
2, 0.0592269, 1, 0, 0.161912,-0.0137139) , 
2, -0.627234, 1, 0, 0.0954895,-0.00677571) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202864,-0.0272119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.418833,0.0211639) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96883,0.0208116) , 
2, 0.579431, 1, 0, 0.857733,0.00800604) , 
2, 0.218941, 1, 0, 0.793166,0.00498731) , 
2, 0.153846, 1, 0, 0.5,4.44497e-05)    );
  // itree = 28
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0208764,-0.0431336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.235477,-0.0258977) , 
2, 0.153846, 1, 0, 0.123601,-0.0155159) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,-0.00641155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,-0.0256455) , 
0, 2.86859, 1, 0, 0.0137948,-0.00220207) , 
3, 3, 1, 0, 0.0726043,0.000115923) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965883,0.0294672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.00262092) , 
3, 2, 1, 0, 0.905792,-0.000102131) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123163,-0.0299519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0127523,-0.0127495) , 
3, 3, 1, 0, 0.0720437,-0.0002931) , 
1, 3, 1, 0, 0.637494,-9.83051e-05) , 
1, 1, 1, 0, 0.5,-0.000226337)    );
  // itree = 29
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979999,0.0413607) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984908,0.0396962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99498,0.0653207) , 
1, 2, 1, 0, 0.989296,0.00165787) , 
0, -0.763562, 1, 0, 0.986971,0.00767143) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0161071,-0.0167611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.140397,-0.0427591) , 
2, -0.692322, 1, 0, 0.0637312,-0.0104596) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.567119,0.00589476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.141324,-0.0193093) , 
0, 1.26972, 1, 0, 0.393455,-0.000579472) , 
0, -1.92062, 1, 0, 0.319382,-0.00279907) , 
3, 1, 1, 0, 0.5,-0.000218644)    );
  // itree = 30
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00975338,-0.0205203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.075697,0.0274189) , 
2, -9.65385, 1, 0, 0.0276082,0.00132164) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.151317,-0.0163825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180918,-0.00487796) , 
2, 0.0947029, 1, 0, 0.161912,-0.0106217) , 
2, -0.627234, 1, 0, 0.0954895,-0.0047149) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202864,-0.0219548) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.418833,0.0182279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96883,0.0140734) , 
2, 0.579431, 1, 0, 0.857733,0.00579605) , 
2, 0.218941, 1, 0, 0.793166,0.00348237) , 
2, 0.153846, 1, 0, 0.5,3.78498e-05)    );
  // itree = 31
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0146013,-0.00248722) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.14536,-0.0210938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0691917,-0.0372125) , 
0, 1.86223, 1, 0, 0.113757,-0.0120385) , 
2, -0.692308, 1, 0, 0.0726043,-0.00719277) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.654457,-0.0253572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0250136,-0.0146255) , 
3, 2, 1, 0, 0.173889,-4.26515e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.913683,0.0149069) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.161145,-0.0197071) , 
1, 3, 1, 0, 0.826283,0.000400436) , 
0, -1.562, 1, 0, 0.637494,0.00235271) , 
1, 1, 1, 0, 0.5,-0.000198868)    );
  // itree = 32
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.172461,-0.0379765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0129061,-0.0068678) , 
3, 3, 1, 0, 0.0767151,-3.65078e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.745399,0.0107613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114025,-0.0192157) , 
3, 3, 1, 0, 0.69684,-2.10449e-05) , 
0, -2.06833, 1, 0, 0.581892,0.00173125) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.213101,-0.0335937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.014802,-0.00665439) , 
3, 3, 1, 0, 0.101956,-0.00458307) , 
0, 1.91958, 1, 0, 0.5,2.13449e-05)    );
  // itree = 33
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00975338,-0.0138574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.075697,0.0248492) , 
2, -9.65385, 1, 0, 0.0276082,0.00167363) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.117841,-0.0208277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.190888,-0.00681852) , 
0, -0.597082, 1, 0, 0.161912,-0.00981958) , 
2, -0.627234, 1, 0, 0.0954895,-0.00413541) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.345293,0.00482936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892993,-0.0421379) , 
2, 0.585681, 1, 0, 0.551276,-0.00414355) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996146,0.0685424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983698,0.0567726) , 
3, 1, 1, 0, 0.993012,0.000955649) , 
2, 0.902368, 1, 0, 0.793166,0.00302081) , 
2, 0.153846, 1, 0, 0.5,1.37452e-05)    );
  // itree = 34
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.189246,-0.0214998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0798546,-0.0209954) , 
0, 1.56596, 1, 0, 0.123601,-0.00958269) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,0.000225058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,-0.0118791) , 
0, 2.86859, 1, 0, 0.0137948,-0.000606024) , 
3, 3, 1, 0, 0.0726043,0.000123024) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965883,0.0196277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.00188524) , 
3, 2, 1, 0, 0.905792,-7.03925e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123163,-0.0206384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0127523,-0.0020864) , 
3, 3, 1, 0, 0.0720437,-0.000241876) , 
1, 3, 1, 0, 0.637494,-8.11974e-05) , 
1, 1, 1, 0, 0.5,-0.000179783)    );
  // itree = 35
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0165967,-0.00820724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.25403,-0.0202112) , 
2, -0.692308, 1, 0, 0.124862,-0.00527585) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.141214,-0.0138689) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.806719,0.00924596) , 
1, 1, 1, 0, 0.71421,0.000212852) , 
0, -1.80247, 1, 0, 0.581892,0.00136407) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.213101,-0.027039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.014802,-0.00457035) , 
3, 3, 1, 0, 0.101956,-0.00343704) , 
0, 1.91958, 1, 0, 0.5,4.14634e-05)    );
  // itree = 36
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00975338,-0.00873584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.075697,0.0215598) , 
2, -9.65385, 1, 0, 0.0276082,0.00175394) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.150323,-0.0141478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179417,-0.00406176) , 
2, 0.0887902, 1, 0, 0.161912,-0.00851141) , 
2, -0.627234, 1, 0, 0.0954895,-0.0034345) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.215655,-0.0172726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.448704,0.0211972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967871,0.010954) , 
2, 0.568165, 1, 0, 0.880043,0.00493765) , 
2, 0.251485, 1, 0, 0.793166,0.00254419) , 
2, 0.153846, 1, 0, 0.5,3.19273e-05)    );
  // itree = 37
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979999,0.0286883) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.984908,0.0253816) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99498,0.0497608) , 
1, 2, 1, 0, 0.989296,0.000825883) , 
0, -0.763562, 1, 0, 0.986971,0.0041999) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.701846,-0.0163936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808213,-0.00388535) , 
0, -0.631589, 1, 0, 0.772975,-0.00635095) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123678,0.00744152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0355686,-0.00946671) , 
3, 3, 1, 0, 0.0793766,-5.25478e-05) , 
3, 2, 1, 0, 0.319382,-0.000104004) , 
3, 1, 1, 0, 0.5,-0.000170291)    );
  // itree = 38
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.141214,-0.0119924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.911265,0.00859658) , 
1, 1, 1, 0, 0.793762,-1.6691e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123163,-0.0167739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0127523,0.00118003) , 
3, 3, 1, 0, 0.0720437,-0.000227023) , 
1, 3, 1, 0, 0.581892,-7.61878e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.213101,-0.0236782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.014802,-0.00222959) , 
3, 3, 1, 0, 0.101956,-0.00280094) , 
0, 1.91958, 1, 0, 0.5,2.69898e-05)    );
  // itree = 39
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00427927,-0.0525532) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0356572,0.017306) , 
0, -3.07268, 1, 0, 0.0276082,0.00165962) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.144466,-0.0164505) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168127,-0.00615655) , 
2, 0.041489, 1, 0, 0.161912,-0.00743247) , 
2, -0.627234, 1, 0, 0.0954895,-0.00293582) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.295234,-0.00477567) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.176657,-0.0205843) , 
0, 0.681032, 1, 0, 0.244407,-0.00840853) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621753,0.0293348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971816,0.0117959) , 
2, 0.624497, 1, 0, 0.932818,0.00485306) , 
2, 0.349117, 1, 0, 0.793166,0.00216279) , 
2, 0.153846, 1, 0, 0.5,2.0338e-05)    );
  // itree = 40
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.938385,0.0527709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.341442,-0.0151573) , 
1, 2, 1, 0, 0.423532,-4.11011e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.659903,-0.00311319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.87905,0.0311348) , 
1, 2, 1, 0, 0.735981,0.0013376) , 
0, -0.473169, 1, 0, 0.581892,0.00096136) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.213101,-0.0195542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.014802,-0.00430844) , 
3, 3, 1, 0, 0.101956,-0.00209002) , 
0, 1.91958, 1, 0, 0.5,1.53735e-05)    );
  // itree = 41
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0352512,0.0166019) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00560028,-0.0419337) , 
0, 3.07165, 1, 0, 0.0276082,0.00162584) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.1537,-0.0104185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187848,-5.38099e-05) , 
2, 0.112441, 1, 0, 0.161912,-0.00653643) , 
2, -0.627234, 1, 0, 0.0954895,-0.00249964) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.338294,0.00425326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85651,-0.0415092) , 
2, 0.566911, 1, 0, 0.495225,-0.00410809) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.971595,0.00933681) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995682,0.067451) , 
2, 0.939919, 1, 0, 0.990072,0.00578143) , 
2, 0.869824, 1, 0, 0.793166,0.00184625) , 
2, 0.153846, 1, 0, 0.5,2.00936e-05)    );
  // itree = 42
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.215223,-0.0177015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0133838,-0.00251885) , 
3, 3, 1, 0, 0.102678,-3.05265e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.745393,0.00610141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.114676,-0.00999787) , 
3, 3, 1, 0, 0.697085,0.000191152) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.170283,-0.0238448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0142722,-0.00207495) , 
3, 3, 1, 0, 0.0760858,-0.00335371) , 
0, 2.0673, 1, 0, 0.582353,0.000858895) , 
0, -1.92062, 1, 0, 0.5,4.12409e-05)    );
  // itree = 43
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00427927,-0.0466059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0356572,0.0148913) , 
0, -3.07268, 1, 0, 0.0276082,0.00150894) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.145162,-0.0112905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172796,-0.00372471) , 
2, 0.0592269, 1, 0, 0.161912,-0.00552518) , 
2, -0.627234, 1, 0, 0.0954895,-0.00204634) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202864,-0.0157096) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.418833,0.0142818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96883,0.00434694) , 
2, 0.579431, 1, 0, 0.857733,0.00299549) , 
2, 0.218941, 1, 0, 0.793166,0.00153816) , 
2, 0.153846, 1, 0, 0.5,3.19462e-05)    );
  // itree = 44
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875681,0.0271209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.893629,-0.00461953) , 
1, 2, 1, 0, 0.886,-2.19118e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.338389,-0.0129859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952713,0.0517263) , 
1, 2, 1, 0, 0.419637,0.000209054) , 
0, 0.489183, 1, 0, 0.637728,0.000884967) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0708832,-0.0107317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17971,-0.01519) , 
0, -1.77547, 1, 0, 0.123163,-0.00548374) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0060995,-0.0139803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0200372,0.0138563) , 
0, -2.88855, 1, 0, 0.0127523,0.000628018) , 
3, 3, 1, 0, 0.0720437,-0.000181146) , 
1, 3, 1, 0, 0.5,-0.000125112)    );
  // itree = 45
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0352512,0.0136943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00560028,-0.0363049) , 
0, 3.07165, 1, 0, 0.0276082,0.00138874) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.1537,-0.00796022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187848,-3.05472e-05) , 
2, 0.112441, 1, 0, 0.161912,-0.00493666) , 
2, -0.627234, 1, 0, 0.0954895,-0.00180833) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.483281,-0.0109719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.101041,-0.00482879) , 
3, 2, 1, 0, 0.258182,-0.00407975) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679665,0.0189392) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975462,0.0121691) , 
2, 0.690832, 1, 0, 0.941618,0.00355742) , 
2, 0.381662, 1, 0, 0.793166,0.00135291) , 
2, 0.153846, 1, 0, 0.5,2.45504e-05)    );
  // itree = 46
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979999,0.0174352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989296,0.0185893) , 
0, -0.763562, 1, 0, 0.986971,0.00202228) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.701846,-0.0120385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808213,-0.00420748) , 
0, -0.631589, 1, 0, 0.772975,-0.00510333) , 
3, 1, 1, 0, 0.883685,-5.89112e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.047256,0.00396721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.155738,0.0079573) , 
0, -1.42522, 1, 0, 0.123678,0.0044465) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0179937,0.0102296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0805397,-0.0147137) , 
2, -0.761284, 1, 0, 0.0355686,-0.00122471) , 
3, 3, 1, 0, 0.0793766,-4.22969e-05) , 
3, 2, 1, 0, 0.5,-0.000125217)    );
  // itree = 47
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.215223,-0.0136047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0133838,-0.00477605) , 
3, 3, 1, 0, 0.102678,-2.8216e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.877086,0.0227117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.661963,-0.0023095) , 
1, 2, 1, 0, 0.73706,5.32044e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.340517,-0.0109121) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937637,0.0402402) , 
1, 2, 1, 0, 0.422313,-0.000219662) , 
0, 0.472148, 1, 0, 0.582353,0.000676375) , 
0, -1.92062, 1, 0, 0.5,1.67097e-05)    );
  // itree = 48
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00427927,-0.0416104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0356572,0.0110232) , 
0, -3.07268, 1, 0, 0.0276082,0.00106556) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.144466,-0.0104973) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168127,-0.00347009) , 
2, 0.041489, 1, 0, 0.161912,-0.00435309) , 
2, -0.627234, 1, 0, 0.0954895,-0.00167321) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.345293,0.00451277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892993,-0.0309891) , 
2, 0.585681, 1, 0, 0.551276,-0.0027952) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996146,0.0486649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983698,0.0433976) , 
3, 1, 1, 0, 0.993012,0.000749991) , 
2, 0.902368, 1, 0, 0.793166,0.00124276) , 
2, 0.153846, 1, 0, 0.5,1.74649e-05)    );
  // itree = 49
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989849,0.0156253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976525,0.00153863) , 
0, 0.865652, 1, 0, 0.986971,0.00114739) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.701846,-0.00865105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.808213,-0.00324243) , 
0, -0.631589, 1, 0, 0.772975,-0.00376402) , 
3, 1, 1, 0, 0.883685,-5.26409e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.047256,0.00464618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.155738,0.0063141) , 
0, -1.42522, 1, 0, 0.123678,0.00364901) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0179937,0.0086029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0805397,-0.0112777) , 
2, -0.761284, 1, 0, 0.0355686,-0.000824856) , 
3, 3, 1, 0, 0.0793766,-3.93214e-05) , 
3, 2, 1, 0, 0.5,-0.000111732)    );
  // itree = 50
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00843303,-0.00487504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115247,-0.0170282) , 
2, -9.57692, 1, 0, 0.0577663,-0.00339623) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123841,-0.00759931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.77018,0.00422494) , 
1, 1, 1, 0, 0.662342,0.000118657) , 
0, -2.18648, 1, 0, 0.565771,0.000516761) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0778783,-0.0207866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0105866,-0.00226266) , 
0, 2.82061, 1, 0, 0.039065,-0.00344056) , 
0, 2.3036, 1, 0, 0.5,2.26025e-05)    );
  // itree = 51
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0352512,0.0100411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00560028,-0.0335413) , 
0, 3.07165, 1, 0, 0.0276082,0.000915689) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.151317,-0.00693745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180918,-0.00095659) , 
2, 0.0947029, 1, 0, 0.161912,-0.00388269) , 
2, -0.627234, 1, 0, 0.0954895,-0.00150957) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.17291,-0.0157568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.316321,-0.00207286) , 
0, -0.885064, 1, 0, 0.258182,-0.00508378) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679665,0.0178213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975462,0.00855862) , 
2, 0.690832, 1, 0, 0.941618,0.0028448) , 
2, 0.381662, 1, 0, 0.793166,0.00112259) , 
2, 0.153846, 1, 0, 0.5,1.65515e-05)    );
  // itree = 52
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989849,0.0113427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976525,0.0002843) , 
0, 0.865652, 1, 0, 0.986971,0.000772069) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.81761,-0.00301927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.63495,-0.00804069) , 
0, 0.989067, 1, 0, 0.772975,-0.00323332) , 
3, 1, 1, 0, 0.883685,-5.23325e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0213691,0.03257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19019,0.00194959) , 
1, 1, 1, 0, 0.123678,-6.57917e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0179937,0.00803476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0805397,-0.00850643) , 
2, -0.761284, 1, 0, 0.0355686,-0.000447644) , 
3, 3, 1, 0, 0.0793766,-4.04013e-05) , 
3, 2, 1, 0, 0.5,-0.000116315)    );
  // itree = 53
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00843303,-0.00714085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115247,-0.0143268) , 
2, -9.57692, 1, 0, 0.0577663,-0.00296989) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.757008,0.00375647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129591,-0.00842668) , 
1, 3, 1, 0, 0.662342,9.34572e-05) , 
0, -2.18648, 1, 0, 0.565771,0.00043367) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0778783,-0.0186151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0105866,-0.000575129) , 
0, 2.82061, 1, 0, 0.039065,-0.00297942) , 
0, 2.3036, 1, 0, 0.5,7.47066e-06)    );
  // itree = 54
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0161649,-0.00838262) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0384503,0.0121716) , 
0, -1.92062, 1, 0, 0.0276082,0.000748159) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.180522,-0.00147415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.139908,-0.00794415) , 
0, 0.252178, 1, 0, 0.161912,-0.00339405) , 
2, -0.627234, 1, 0, 0.0954895,-0.00134545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202864,-0.0104084) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.418833,0.012902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96883,-0.000914205) , 
2, 0.579431, 1, 0, 0.857733,0.00192916) , 
2, 0.218941, 1, 0, 0.793166,0.00098323) , 
2, 0.153846, 1, 0, 0.5,4.71233e-06)    );
  // itree = 55
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.169263,-0.0166208) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0618391,0.00105168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00524586,-0.0309553) , 
0, 3.06373, 1, 0, 0.0457305,-0.000440245) , 
0, 1.4111, 1, 0, 0.0726043,-0.00199042) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950943,0.0384492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.332685,-0.00845743) , 
1, 2, 1, 0, 0.411822,-1.46625e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894543,-0.00341733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873498,0.0187938) , 
1, 2, 1, 0, 0.88551,0.0011041) , 
0, -0.532769, 1, 0, 0.637494,0.00064483) , 
1, 1, 1, 0, 0.5,-0.000113472)    );
  // itree = 56
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989849,0.00927926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976525,-0.00010373) , 
0, 0.865652, 1, 0, 0.986971,0.000607087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.521417,-0.000104168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956412,-0.0147824) , 
2, 0.576923, 1, 0, 0.772975,-0.00270257) , 
3, 1, 1, 0, 0.883685,-4.9996e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172226,0.0157035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.00359162) , 
1, 1, 1, 0, 0.127787,-2.45429e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00415709,-0.0314981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0204795,0.0294736) , 
0, -3.01497, 1, 0, 0.015964,0.00277884) , 
1, 3, 1, 0, 0.0793766,-0.000225521) , 
3, 2, 1, 0, 0.5,-0.000110564)    );
  // itree = 57
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0372097,0.0118274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0173694,-0.00942436) , 
0, 1.91958, 1, 0, 0.0276082,0.00048948) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.145162,-0.00707023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172796,-0.00167938) , 
2, 0.0592269, 1, 0, 0.161912,-0.00307277) , 
2, -0.627234, 1, 0, 0.0954895,-0.001311) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.338294,0.0033428) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.85651,-0.0270906) , 
2, 0.566911, 1, 0, 0.495225,-0.00265923) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995598,0.0339695) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97629,0.0302367) , 
3, 1, 1, 0, 0.990072,0.000650372) , 
2, 0.869824, 1, 0, 0.793166,0.000949398) , 
2, 0.153846, 1, 0, 0.5,-4.27504e-07)    );
  // itree = 58
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.169263,-0.0141246) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00961221,0.0121283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0695837,-0.00451971) , 
2, -9.57692, 1, 0, 0.0457305,-0.000489551) , 
0, 1.4111, 1, 0, 0.0726043,-0.00177432) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949482,0.0297775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379113,-0.00795798) , 
1, 2, 1, 0, 0.474491,-1.45156e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886814,-0.00480365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903039,0.0262101) , 
1, 2, 1, 0, 0.893169,0.00258968) , 
0, -0.189692, 1, 0, 0.637494,0.00058103) , 
1, 1, 1, 0, 0.5,-0.000104449)    );
  // itree = 59
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0372097,0.0104588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0173694,-0.00806275) , 
0, 1.91958, 1, 0, 0.0276082,0.000462716) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.1537,-0.00488043) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187848,0.000893221) , 
2, 0.112441, 1, 0, 0.161912,-0.00279165) , 
2, -0.627234, 1, 0, 0.0954895,-0.00118215) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.31961,-0.00262537) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.165693,-0.0130801) , 
0, 0.90476, 1, 0, 0.258182,-0.00462863) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679665,0.0150475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975462,0.00750609) , 
2, 0.690832, 1, 0, 0.941618,0.00240027) , 
2, 0.381662, 1, 0, 0.793166,0.000873491) , 
2, 0.153846, 1, 0, 0.5,9.70598e-06)    );
  // itree = 60
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989849,0.00298401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976525,-0.00371557) , 
0, 0.865652, 1, 0, 0.986971,6.79069e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.521417,7.55227e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956412,-0.0121257) , 
2, 0.576923, 1, 0, 0.772975,-0.00214992) , 
3, 1, 1, 0, 0.883685,-5.12153e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.11777,0.00559511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.135199,0.000252034) , 
2, 0.15379, 1, 0, 0.123678,0.00241736) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0234526,-0.0113246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0467023,0.00585883) , 
0, -0.768557, 1, 0, 0.0355686,-0.000171004) , 
3, 3, 1, 0, 0.0793766,-3.7811e-05) , 
3, 2, 1, 0, 0.5,-0.000105273)    );
  // itree = 61
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202604,-0.00470278) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112265,-0.000877047) , 
0, 0.768366, 1, 0, 0.169291,-0.00293063) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0441967,0.00747611) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0230638,-0.00895315) , 
0, 0.767524, 1, 0, 0.0340443,0.000239018) , 
3, 3, 1, 0, 0.0954895,-0.000242922) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.211521,-0.00877146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.317465,-0.000378843) , 
2, 0.241464, 1, 0, 0.258182,-0.0037192) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679665,0.0125593) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975462,0.00746168) , 
2, 0.690832, 1, 0, 0.941618,0.0021588) , 
2, 0.381662, 1, 0, 0.793166,0.000882013) , 
2, 0.153846, 1, 0, 0.5,6.71834e-06)    );
  // itree = 62
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.958603,0.00706782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.875488,-0.00511823) , 
1, 2, 1, 0, 0.910179,-1.07806e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904751,-0.00771688) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67473,-0.00372382) , 
0, 1.48774, 1, 0, 0.785316,-0.00284705) , 
0, 0.989067, 1, 0, 0.883685,-0.000951861) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.191609,0.00106968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0198241,0.0288533) , 
1, 3, 1, 0, 0.123678,-5.99018e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0179937,0.00692846) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0805397,-0.00596878) , 
2, -0.761284, 1, 0, 0.0355686,-0.000166221) , 
3, 3, 1, 0, 0.0793766,-3.75351e-05) , 
3, 2, 1, 0, 0.5,-0.000104127)    );
  // itree = 63
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.127653,-0.00557048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909108,0.00410852) , 
1, 1, 1, 0, 0.764615,-1.68617e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.010976,0.00696367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103585,-0.0187568) , 
2, -9.57692, 1, 0, 0.0510581,-0.00296453) , 
0, 2.22094, 1, 0, 0.637728,0.000576929) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00388383,-0.0335426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0615662,0.00188635) , 
0, -3.06545, 1, 0, 0.0452775,-0.000158388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169253,-0.0172047) , 
0, -1.41338, 1, 0, 0.0720437,-0.0017822) , 
1, 3, 1, 0, 0.5,-0.000106746)    );
  // itree = 64
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202604,-0.00464075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112265,-0.000486063) , 
0, 0.768366, 1, 0, 0.169291,-0.0028071) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0222374,-0.00943995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0449109,0.00739541) , 
0, -0.768557, 1, 0, 0.0340443,0.000250247) , 
3, 3, 1, 0, 0.0954895,-0.000229385) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.340865,0.00412523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.916416,-0.0182804) , 
2, 0.574423, 1, 0, 0.609938,-0.00145987) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996824,0.042261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989567,0.0517164) , 
3, 1, 1, 0, 0.995318,0.000389992) , 
2, 0.934912, 1, 0, 0.793166,0.000825486) , 
2, 0.153846, 1, 0, 0.5,1.01656e-07)    );
  // itree = 65
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98087,0.0287185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819633,-0.00952396) , 
1, 2, 1, 0, 0.866631,-5.89813e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852709,-0.00651517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973081,0.0226821) , 
1, 2, 1, 0, 0.895507,0.000868878) , 
0, -0.307458, 1, 0, 0.883685,-0.000790784) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0215799,0.0221936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00572656,-0.025474) , 
0, 3.02477, 1, 0, 0.0172226,0.0022398) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.1099,0.00335106) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19551,-0.012572) , 
2, 0.15379, 1, 0, 0.126813,-0.000148026) , 
1, 1, 1, 0, 0.0793766,-0.000190229) , 
3, 2, 1, 0, 0.5,-9.36108e-05)    );
  // itree = 66
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0372097,0.00831614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0173694,-0.00810853) , 
0, 1.91958, 1, 0, 0.0276082,0.00023562) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.145162,-0.00641687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172796,-0.00144303) , 
2, 0.0592269, 1, 0, 0.161912,-0.00273121) , 
2, -0.627234, 1, 0, 0.0954895,-0.00126391) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.161494,-0.0107954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.340328,-0.000447803) , 
0, -1.10879, 1, 0, 0.273262,-0.00269423) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863182,0.0201175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9609,0.00554452) , 
0, -1.30245, 1, 0, 0.948584,0.00201209) , 
2, 0.414206, 1, 0, 0.793166,0.00092898) , 
2, 0.153846, 1, 0, 0.5,7.51878e-06)    );
  // itree = 67
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0161649,-0.0102193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0384503,0.00837517) , 
0, -1.92062, 1, 0, 0.0276082,0.000186861) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.180522,-0.000485476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.139908,-0.00582823) , 
0, 0.252178, 1, 0, 0.161912,-0.00218549) , 
2, -0.627234, 1, 0, 0.0954895,-0.0010122) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.347743,0.00360488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.945914,-0.011308) , 
2, 0.591946, 1, 0, 0.691788,-0.00054268) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.997559,0.0556382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996953,0.0659955) , 
0, 0.580221, 1, 0, 0.997384,0.00333815) , 
2, 0.967456, 1, 0, 0.793166,0.00074474) , 
2, 0.153846, 1, 0, 0.5,6.46761e-06)    );
  // itree = 68
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98087,0.0235491) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819633,-0.00853516) , 
1, 2, 1, 0, 0.866631,-5.76965e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852709,-0.0056779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973081,0.0184419) , 
1, 2, 1, 0, 0.895507,0.000702497) , 
0, -0.307458, 1, 0, 0.883685,-0.000864505) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0394735,0.000127494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279332,0.00779765) , 
0, -1.06404, 1, 0, 0.0939055,0.00216659) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.100262,0.00245248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0294336,-0.00802482) , 
3, 3, 1, 0, 0.062963,-0.000380577) , 
0, 0.383504, 1, 0, 0.0793766,0.000973751) , 
3, 2, 1, 0, 0.5,-9.39937e-05)    );
  // itree = 69
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202604,-0.00412362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112265,0.000158504) , 
0, 0.768366, 1, 0, 0.169291,-0.00235647) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0222374,-0.00812034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0449109,0.00631167) , 
0, -0.768557, 1, 0, 0.0340443,0.000220454) , 
3, 3, 1, 0, 0.0954895,-0.000223681) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.326916,-0.000404956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.199822,-0.008289) , 
0, 0.681032, 1, 0, 0.273262,-0.00256147) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.863182,0.0178972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.9609,0.00440951) , 
0, -1.30245, 1, 0, 0.948584,0.001687) , 
2, 0.414206, 1, 0, 0.793166,0.000709257) , 
2, 0.153846, 1, 0, 0.5,1.19097e-05)    );
  // itree = 70
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98087,0.0193656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819633,-0.00776267) , 
1, 2, 1, 0, 0.866631,-5.63047e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852709,-0.00440356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973081,0.0152338) , 
1, 2, 1, 0, 0.895507,0.000609334) , 
0, -0.307458, 1, 0, 0.883685,-0.000801313) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0394735,0.000827009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.279332,0.00662762) , 
0, -1.06404, 1, 0, 0.0939055,0.00198583) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.100262,0.00237748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0294336,-0.0075261) , 
3, 3, 1, 0, 0.062963,-0.00036556) , 
0, 0.383504, 1, 0, 0.0793766,0.000899096) , 
3, 2, 1, 0, 0.5,-9.16311e-05)    );
  // itree = 71
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0886576,0.000676486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.207103,-0.00372874) , 
0, -1.05962, 1, 0, 0.169291,-0.00225742) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0441967,0.0066339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0230638,-0.00746519) , 
0, 0.767524, 1, 0, 0.0340443,0.00025701) , 
3, 3, 1, 0, 0.0954895,-0.000218565) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.226465,-0.00434223) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532404,0.0173957) , 
2, 0.300285, 1, 0, 0.341784,0.00336887) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846637,-0.0230285) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988057,0.0167547) , 
2, 0.853561, 1, 0, 0.968695,-0.000396939) , 
2, 0.576926, 1, 0, 0.793166,0.00065745) , 
2, 0.153846, 1, 0, 0.5,9.16248e-06)    );
  // itree = 72
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.00187459) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.941108,-0.0126727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899678,-0.000660599) , 
0, -0.43212, 1, 0, 0.91048,-0.00107779) , 
0, -1.27985, 1, 0, 0.883685,-0.000736999) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.110509,0.00299386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198459,-0.0109045) , 
2, 0.15379, 1, 0, 0.127787,-0.000101812) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00415709,-0.0241249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0204795,0.0200605) , 
0, -3.01497, 1, 0, 0.015964,0.00205096) , 
1, 3, 1, 0, 0.0793766,-0.000190703) , 
3, 2, 1, 0, 0.5,-9.36872e-05)    );
  // itree = 73
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.127653,-0.00433489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909108,0.00326742) , 
1, 1, 1, 0, 0.764615,-1.66849e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.010976,0.00803357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103585,-0.0148755) , 
2, -9.57692, 1, 0, 0.0510581,-0.00218954) , 
0, 2.22094, 1, 0, 0.637728,0.000484411) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0263081,-0.00332993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0971806,0.00348183) , 
0, -2.10179, 1, 0, 0.0452775,-0.000126173) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169253,-0.0145092) , 
0, -1.41338, 1, 0, 0.0720437,-0.0014778) , 
1, 3, 1, 0, 0.5,-8.68565e-05)    );
  // itree = 74
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0161649,-0.00889789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0384503,0.00831574) , 
0, -1.92062, 1, 0, 0.0276082,0.000276575) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.150323,-0.00507322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179417,0.000257598) , 
2, 0.0887902, 1, 0, 0.161912,-0.00235724) , 
2, -0.627234, 1, 0, 0.0954895,-0.00105464) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.226465,-0.00267277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.532404,0.0147218) , 
2, 0.300285, 1, 0, 0.341784,0.00326722) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875307,-0.016282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991749,0.0223736) , 
2, 0.886103, 1, 0, 0.968695,-0.000198438) , 
2, 0.576926, 1, 0, 0.793166,0.000771914) , 
2, 0.153846, 1, 0, 0.5,4.39073e-06)    );
  // itree = 75
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0352512,0.00475836) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00560028,-0.0285227) , 
0, 3.07165, 1, 0, 0.0276082,0.000219481) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.144466,-0.00600981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168127,-0.00103155) , 
2, 0.041489, 1, 0, 0.161912,-0.00188622) , 
2, -0.627234, 1, 0, 0.0954895,-0.00084481) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.359286,0.00023117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163033,-0.00831226) , 
0, 1.12849, 1, 0, 0.287845,-0.00176545) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88025,0.0154416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964862,0.00390954) , 
0, -1.29613, 1, 0, 0.95428,0.00138551) , 
2, 0.44675, 1, 0, 0.793166,0.000623747) , 
2, 0.153846, 1, 0, 0.5,6.65495e-06)    );
  // itree = 76
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98087,0.0161008) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819633,-0.00710069) , 
1, 2, 1, 0, 0.866631,-5.49429e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852709,-0.00357572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973081,0.0122195) , 
1, 2, 1, 0, 0.895507,0.000491559) , 
0, -0.307458, 1, 0, 0.883685,-0.000780671) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0215799,0.0196721) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00572656,-0.0181557) , 
0, 3.02477, 1, 0, 0.0172226,0.00215837) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.1099,0.00273626) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19551,-0.0102) , 
2, 0.15379, 1, 0, 0.126813,-0.00011989) , 
1, 1, 1, 0, 0.0793766,-0.000172022) , 
3, 2, 1, 0, 0.5,-8.47584e-05)    );
  // itree = 77
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0120213,0.0159506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00560257,-0.0216333) , 
0, 3.07165, 1, 0, 0.00975338,0.000475456) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.159442,-0.000707781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125916,-0.00479998) , 
0, 0.239468, 1, 0, 0.143854,-0.00179269) , 
2, -9.60947, 1, 0, 0.0954895,-0.000974662) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587509,0.00905619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1091,-0.00521475) , 
3, 2, 1, 0, 0.341784,-0.0016203) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846637,-0.0146933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988057,0.0112232) , 
2, 0.853561, 1, 0, 0.968695,-0.000296702) , 
2, 0.576926, 1, 0, 0.793166,0.000711171) , 
2, 0.153846, 1, 0, 0.5,2.77901e-06)    );
  // itree = 78
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98087,0.0126632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819633,-0.00630903) , 
1, 2, 1, 0, 0.866631,-5.58899e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.963631,0.0103252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871106,-0.00316712) , 
0, 0.216174, 1, 0, 0.895507,-0.000281183) , 
0, -0.307458, 1, 0, 0.883685,-0.000826545) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.191609,0.00128704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0198241,0.0224157) , 
1, 3, 1, 0, 0.123678,-5.86736e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00971231,0.015295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0693031,-0.00475144) , 
2, -9.58006, 1, 0, 0.0355686,-0.000258004) , 
3, 3, 1, 0, 0.0793766,-3.41743e-05) , 
3, 2, 1, 0, 0.5,-9.02287e-05)    );
  // itree = 79
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.127653,-0.00427255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909108,0.00314684) , 
1, 1, 1, 0, 0.764615,-1.7549e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.010976,0.00561553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103585,-0.013198) , 
2, -9.57692, 1, 0, 0.0510581,-0.00201734) , 
0, 2.22094, 1, 0, 0.637728,0.000470007) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.013397,-0.00774286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0828962,0.00151298) , 
0, -2.51479, 1, 0, 0.0452775,-0.000334631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169253,-0.0126612) , 
0, -1.41338, 1, 0, 0.0720437,-0.00145667) , 
1, 3, 1, 0, 0.5,-9.48219e-05)    );
  // itree = 80
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202604,-0.00406957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112265,0.00119362) , 
0, 0.768366, 1, 0, 0.169291,-0.0020947) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0222374,-0.00920038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0449109,0.00577278) , 
0, -0.768557, 1, 0, 0.0340443,3.2e-05) , 
3, 3, 1, 0, 0.0954895,-0.000220328) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587509,0.00794866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1091,-0.00489064) , 
3, 2, 1, 0, 0.341784,-0.00170515) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875307,-0.0111291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991749,0.0164528) , 
2, 0.886103, 1, 0, 0.968695,-0.000144424) , 
2, 0.576926, 1, 0, 0.793166,0.000676902) , 
2, 0.153846, 1, 0, 0.5,-8.72349e-08)    );
  // itree = 81
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.98087,0.00956279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.819633,-0.00551007) , 
1, 2, 1, 0, 0.866631,-5.39674e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.852709,-0.00333556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973081,0.00859285) , 
1, 2, 1, 0, 0.895507,0.000245693) , 
0, -0.307458, 1, 0, 0.883685,-0.000814615) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0213691,0.0221333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19019,0.000904216) , 
1, 1, 1, 0, 0.123678,-6.00011e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0179937,0.00523103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0805397,-0.00483026) , 
2, -0.761284, 1, 0, 0.0355686,-0.000163558) , 
3, 3, 1, 0, 0.0793766,-3.40934e-05) , 
3, 2, 1, 0, 0.5,-8.99573e-05)    );
  // itree = 82
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202604,-0.00339977) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112265,0.000305384) , 
0, 0.768366, 1, 0, 0.169291,-0.00190231) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0441967,0.00563569) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0230638,-0.00816935) , 
0, 0.767524, 1, 0, 0.0340443,3.9979e-05) , 
3, 3, 1, 0, 0.0954895,-0.000217446) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.170531,-0.00786485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.357087,0.000124665) , 
0, -1.10879, 1, 0, 0.287845,-0.00173029) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964246,0.00353162) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887465,0.015982) , 
0, 1.26798, 1, 0, 0.95428,0.00135663) , 
2, 0.44675, 1, 0, 0.793166,0.000610352) , 
2, 0.153846, 1, 0, 0.5,-1.16028e-07)    );
  // itree = 83
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.00184094) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946036,-0.00960782) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892369,-0.00102076) , 
0, -0.220189, 1, 0, 0.91048,-0.00108135) , 
0, -1.27985, 1, 0, 0.883685,-0.000746116) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.191609,0.000932513) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0198241,0.0200507) , 
1, 3, 1, 0, 0.123678,-5.94872e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0234526,-0.00872236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0467023,0.00442266) , 
0, -0.768557, 1, 0, 0.0355686,-0.000133056) , 
3, 3, 1, 0, 0.0793766,-3.48041e-05) , 
3, 2, 1, 0, 0.5,-9.28085e-05)    );
  // itree = 84
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00843303,-0.00154889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115247,-0.0112313) , 
2, -9.57692, 1, 0, 0.0577663,-0.00213164) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.273039,0.00270531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972218,-0.00377655) , 
2, 0.576923, 1, 0, 0.662342,0.0007001) , 
0, -2.18648, 1, 0, 0.565771,0.000247775) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0778783,-0.0104116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0105866,-0.00206696) , 
0, 2.82061, 1, 0, 0.039065,-0.00174473) , 
0, 2.3036, 1, 0, 0.5,-1.03229e-06)    );
  // itree = 85
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.25193,-0.000738384) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.019392,-0.0181074) , 
1, 3, 1, 0, 0.169291,-0.000110726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0441967,0.00532242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0230638,-0.00710345) , 
0, 0.767524, 1, 0, 0.0340443,9.98932e-05) , 
3, 3, 1, 0, 0.0954895,-0.000215037) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.953763,-0.0308784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996824,0.0206902) , 
2, 0.934919, 1, 0, 0.98867,-0.000700637) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.327468,0.00482815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925716,-0.000390339) , 
2, 0.576926, 1, 0, 0.623399,0.0017269) , 
3, 1, 1, 0, 0.793166,-0.000314411) , 
2, 0.153846, 1, 0, 0.5,-1.24611e-06)    );
  // itree = 86
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.00214523) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,-0.00458649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,0.00190443) , 
0, 1.47527, 1, 0, 0.91048,-0.000877292) , 
0, -1.27985, 1, 0, 0.883685,-0.000543662) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172226,0.0108073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.00277085) , 
1, 1, 1, 0, 0.127787,-3.28806e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00415709,-0.022819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0204795,0.0162839) , 
0, -3.01497, 1, 0, 0.015964,0.00168064) , 
1, 3, 1, 0, 0.0793766,-0.000186196) , 
3, 2, 1, 0, 0.5,-9.13947e-05)    );
  // itree = 87
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.169263,-0.0124468) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0618391,0.00239604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00524586,-0.0219935) , 
0, 3.06373, 1, 0, 0.0457305,8.8867e-05) , 
0, 1.4111, 1, 0, 0.0726043,-0.00115193) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,-0.00165749) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992749,0.0267332) , 
2, 0.576923, 1, 0, 0.905792,0.00107588) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0452775,-0.00103783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169253,-0.0100288) , 
0, -1.41338, 1, 0, 0.0720437,-0.00112454) , 
1, 3, 1, 0, 0.637494,-4.57232e-05) , 
1, 1, 1, 0, 0.5,-8.497e-05)    );
  // itree = 88
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.00137027) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.946036,-0.0071493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892369,-0.000863623) , 
0, -0.220189, 1, 0, 0.91048,-0.000830139) , 
0, -1.27985, 1, 0, 0.883685,-0.000577792) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00841386,0.00325031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0394074,-0.00324288) , 
2, -9.57713, 1, 0, 0.025622,-0.000422047) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.232422,0.00458182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0597535,-0.000591567) , 
0, 0.472154, 1, 0, 0.108781,0.00121695) , 
0, -1.5366, 1, 0, 0.0793766,0.000637411) , 
3, 2, 1, 0, 0.5,-8.46612e-05)    );
  // itree = 89
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975594,-0.0138637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994462,-0.00981861) , 
0, -0.960511, 1, 0, 0.989849,-0.000794498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976525,-0.0119147) , 
0, 0.865652, 1, 0, 0.986971,-0.000957246) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.120467,0.000148558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0164653,-0.00953067) , 
0, 2.3036, 1, 0, 0.0942819,-0.00031738) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.327468,0.00441125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925716,-0.00221134) , 
2, 0.576926, 1, 0, 0.623399,0.00126852) , 
2, 0.153846, 1, 0, 0.319382,0.000357301) , 
3, 1, 1, 0, 0.5,-8.55971e-05)    );
  // itree = 90
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.215223,-0.00564482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0133838,-0.0014324) , 
3, 3, 1, 0, 0.102678,-2.16393e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.900708,0.0158181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.64121,-0.00224656) , 
1, 2, 1, 0, 0.723167,5.04208e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.376271,-0.00503146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.927364,0.0187459) , 
1, 2, 1, 0, 0.469386,-0.00042857) , 
0, 0.206289, 1, 0, 0.582353,0.000257231) , 
0, -1.92062, 1, 0, 0.5,1.53116e-06)    );
  // itree = 91
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00843338,-0.000589974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0872628,-0.00835868) , 
2, -9.57692, 1, 0, 0.0401222,-0.00130016) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.899544,0.0130073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.584589,-0.00169004) , 
1, 2, 1, 0, 0.674602,-2.33115e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.37464,-0.00406024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92775,0.0150849) , 
1, 2, 1, 0, 0.467079,-0.000489646) , 
0, 0.221038, 1, 0, 0.56617,0.000189876) , 
0, -2.30464, 1, 0, 0.5,2.44761e-06)    );
  // itree = 92
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0161649,-0.00693687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0384503,0.00824092) , 
0, -1.92062, 1, 0, 0.0276082,0.000408637) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.1537,-0.00353937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187848,0.00276502) , 
2, 0.112441, 1, 0, 0.161912,-0.00159297) , 
2, -0.627234, 1, 0, 0.0954895,-0.000603042) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.359286,-0.000613534) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163033,-0.0072535) , 
0, 1.12849, 1, 0, 0.287845,-0.00194463) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88025,0.0147622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964862,0.00300599) , 
0, -1.29613, 1, 0, 0.95428,0.00120249) , 
2, 0.44675, 1, 0, 0.793166,0.000441657) , 
2, 0.153846, 1, 0, 0.5,2.67088e-06)    );
  // itree = 93
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976216,-0.0105884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993822,-0.0131879) , 
0, -0.942598, 1, 0, 0.985294,-0.00102333) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994672,-0.00601036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974256,-0.0105943) , 
0, 0.955292, 1, 0, 0.988118,-0.000659503) , 
0, -0.298072, 1, 0, 0.986971,-0.000807241) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0273507,0.00212678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.160047,-0.00120356) , 
2, -0.627234, 1, 0, 0.0942819,-0.000292014) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.327468,0.00414894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925716,-0.00253878) , 
2, 0.576926, 1, 0, 0.623399,0.00110504) , 
2, 0.153846, 1, 0, 0.319382,0.000302329) , 
3, 1, 1, 0, 0.5,-8.29283e-05)    );
  // itree = 94
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530785,0.000138103) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535054,0.000698079) , 
1, 2, 1, 0, 0.532911,-0.000157156) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91502,-0.0138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992175,0.00718631) , 
2, 0.869832, 1, 0, 0.980415,-0.000676984) , 
2, 0.576923, 1, 0, 0.883685,-0.000426318) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0215799,0.0140921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00572656,-0.0123362) , 
0, 3.02477, 1, 0, 0.0172226,0.00165621) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.1099,0.00223972) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19551,-0.0106044) , 
2, 0.15379, 1, 0, 0.126813,-0.000432438) , 
1, 1, 1, 0, 0.0793766,-0.000169807) , 
3, 2, 1, 0, 0.5,-8.35384e-05)    );
  // itree = 95
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0372097,0.00635768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0173694,-0.00710762) , 
0, 1.91958, 1, 0, 0.0276082,0.000104186) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.145162,-0.00472932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172796,6.12833e-05) , 
2, 0.0592269, 1, 0, 0.161912,-0.0014504) , 
2, -0.627234, 1, 0, 0.0954895,-0.000681551) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.170531,-0.00707197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.357087,-0.000278669) , 
0, -1.10879, 1, 0, 0.287845,-0.00174883) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964246,0.00310296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887465,0.0145447) , 
0, 1.26798, 1, 0, 0.95428,0.00121225) , 
2, 0.44675, 1, 0, 0.793166,0.000496392) , 
2, 0.153846, 1, 0, 0.5,1.41652e-06)    );
  // itree = 96
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0886576,0.0022833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.207103,-0.00265288) , 
0, -1.05962, 1, 0, 0.169291,-0.00130397) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0222374,-0.00784331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0449109,0.00529762) , 
0, -0.768557, 1, 0, 0.0340443,8.51987e-05) , 
3, 3, 1, 0, 0.0954895,-0.000204719) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587509,0.00709624) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1091,-0.00560839) , 
3, 2, 1, 0, 0.341784,-0.00147384) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92969,-0.00913175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996402,0.0337798) , 
2, 0.951187, 1, 0, 0.968695,-0.000278439) , 
2, 0.576926, 1, 0, 0.793166,0.000397771) , 
2, 0.153846, 1, 0, 0.5,1.22639e-06)    );
  // itree = 97
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.00109994) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,-0.00422556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,0.00149467) , 
0, 1.47527, 1, 0, 0.91048,-0.000823827) , 
0, -1.27985, 1, 0, 0.883685,-0.000598307) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172226,0.00907005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.00224229) , 
1, 1, 1, 0, 0.127787,-3.21338e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00415709,-0.0186655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0204795,0.0157896) , 
0, -3.01497, 1, 0, 0.015964,0.00170257) , 
1, 3, 1, 0, 0.0793766,-0.000170787) , 
3, 2, 1, 0, 0.5,-8.40472e-05)    );
  // itree = 98
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.169263,-0.0105895) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00961221,0.00944601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0695837,-0.0017739) , 
2, -9.57692, 1, 0, 0.0457305,-2.2192e-05) , 
0, 1.4111, 1, 0, 0.0726043,-0.00105886) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949482,0.0118326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379113,-0.00308654) , 
1, 2, 1, 0, 0.474491,-1.21588e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886814,-0.00106517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903039,0.0118394) , 
1, 2, 1, 0, 0.893169,0.00136609) , 
0, -0.189692, 1, 0, 0.637494,0.000342226) , 
1, 1, 1, 0, 0.5,-7.90333e-05)    );
  // itree = 99
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00843303,0.00132033) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115247,-0.00885118) , 
2, -9.57692, 1, 0, 0.0577663,-0.00156049) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.273039,0.00225959) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972218,-0.00345912) , 
2, 0.576923, 1, 0, 0.662342,0.000557079) , 
0, -2.18648, 1, 0, 0.565771,0.000218831) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0778783,-0.00947328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0105866,-0.000750238) , 
0, 2.82061, 1, 0, 0.039065,-0.00152363) , 
0, 2.3036, 1, 0, 0.5,1.24638e-06)    );
  // itree = 100
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0120213,0.0108444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00560257,-0.0183213) , 
0, 3.07165, 1, 0, 0.00975338,0.000281374) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0214456,-0.0115429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.217236,-0.000318073) , 
1, 1, 1, 0, 0.143854,-0.00034467) , 
2, -9.60947, 1, 0, 0.0954895,-0.000662733) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.359286,-0.000316487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163033,-0.00696422) , 
0, 1.12849, 1, 0, 0.287845,-0.00172989) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88025,0.0139458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964862,0.0032099) , 
0, -1.29613, 1, 0, 0.95428,0.0011866) , 
2, 0.44675, 1, 0, 0.793166,0.000481527) , 
2, 0.153846, 1, 0, 0.5,7.05416e-07)    );
  // itree = 101
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975594,-0.012511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994462,-0.0101601) , 
0, -0.960511, 1, 0, 0.989849,-0.000755651) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976525,-0.00920525) , 
0, 0.865652, 1, 0, 0.986971,-0.000851233) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.151428,0.000165992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0151332,-0.00649994) , 
1, 3, 1, 0, 0.0942819,-0.000194654) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.327468,0.00372274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925716,-0.000916446) , 
2, 0.576926, 1, 0, 0.623399,0.00121667) , 
2, 0.153846, 1, 0, 0.319382,0.000315557) , 
3, 1, 1, 0, 0.5,-8.15836e-05)    );
  // itree = 102
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650211,-0.00272444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904755,0.0056923) , 
0, -1.57908, 1, 0, 0.793961,0.000340823) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954061,-0.00787989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.890162,-0.000427569) , 
0, -0.157847, 1, 0, 0.909234,-0.000667032) , 
0, -0.95572, 1, 0, 0.883685,-0.000443657) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172226,0.00939997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.00263562) , 
1, 1, 1, 0, 0.127787,-3.39168e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00415709,-0.015984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0204795,0.0137088) , 
0, -3.01497, 1, 0, 0.015964,0.00151749) , 
1, 3, 1, 0, 0.0793766,-0.000161912) , 
3, 2, 1, 0, 0.5,-7.98387e-05)    );
  // itree = 103
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.127653,-0.00381759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909108,0.00237316) , 
1, 1, 1, 0, 0.764615,-1.74599e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.010976,0.00347732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103585,-0.010023) , 
2, -9.57692, 1, 0, 0.0510581,-0.00155455) , 
0, 2.22094, 1, 0, 0.637728,0.000299393) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0850041,-0.00195275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0119245,0.00239239) , 
3, 3, 1, 0, 0.0452775,-2.81166e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169253,-0.00850384) , 
0, -1.41338, 1, 0, 0.0720437,-0.000935695) , 
1, 3, 1, 0, 0.5,-7.56435e-05)    );
  // itree = 104
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0372097,0.00510333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0173694,-0.00683684) , 
0, 1.91958, 1, 0, 0.0276082,-3.75507e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.151317,-0.00306893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.180918,0.00157265) , 
2, 0.0947029, 1, 0, 0.161912,-0.00111018) , 
2, -0.627234, 1, 0, 0.0954895,-0.000562978) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.170531,-0.0067642) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.357087,-0.000446023) , 
0, -1.10879, 1, 0, 0.287845,-0.00175748) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.964246,0.00292825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887465,0.0128808) , 
0, 1.26798, 1, 0, 0.95428,0.00109517) , 
2, 0.44675, 1, 0, 0.793166,0.000405527) , 
2, 0.153846, 1, 0, 0.5,-1.44172e-06)    );
  // itree = 105
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0115086,-0.0122308) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.157169,-0.00671802) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.465445,0.00575352) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592288,-6.74576e-05) , 
0, -1.27982, 1, 0, 0.575637,0.000352376) , 
0, -2.09786, 1, 0, 0.546963,0.000135481) , 
0, -2.68866, 1, 0, 0.5,-1.09196e-06)    );
  // itree = 106
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,0.000792931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,9.56093e-09) , 
0, 0.0166736, 1, 0, 0.532911,0.000455192) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95665,-0.0114516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996604,0.0273967) , 
2, 0.951187, 1, 0, 0.980415,-0.000658259) , 
2, 0.576923, 1, 0, 0.883685,-0.000417582) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0215799,0.0113601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00572656,-0.0112896) , 
0, 3.02477, 1, 0, 0.0172226,0.00134748) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.1099,0.00195315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19551,-0.00817863) , 
2, 0.15379, 1, 0, 0.126813,-0.000225803) , 
1, 1, 1, 0, 0.0793766,-0.000150352) , 
3, 2, 1, 0, 0.5,-7.42775e-05)    );
  // itree = 107
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00428178,-0.0200088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0127198,0.00885364) , 
0, -3.07268, 1, 0, 0.00975338,0.000270368) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0214456,-0.0107061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.217236,-0.000396805) , 
1, 1, 1, 0, 0.143854,-0.000355647) , 
2, -9.60947, 1, 0, 0.0954895,-0.000648637) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.359286,0.000187105) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163033,-0.0056831) , 
0, 1.12849, 1, 0, 0.287845,-0.00118777) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88025,0.0118703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964862,0.0027027) , 
0, -1.29613, 1, 0, 0.95428,0.00099993) , 
2, 0.44675, 1, 0, 0.793166,0.000471042) , 
2, 0.153846, 1, 0, 0.5,5.49297e-07)    );
  // itree = 108
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975594,-0.0126152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994462,-0.00950227) , 
0, -0.960511, 1, 0, 0.989849,-0.000733113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976525,-0.0092085) , 
0, 0.865652, 1, 0, 0.986971,-0.000831133) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.120467,-7.53991e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0164653,-0.00786983) , 
0, 2.3036, 1, 0, 0.0942819,-0.000349261) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.327468,0.00377612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925716,-0.0011349) , 
2, 0.576926, 1, 0, 0.623399,0.00119575) , 
2, 0.153846, 1, 0, 0.319382,0.000308025) , 
3, 1, 1, 0, 0.5,-6.94995e-05)    );
  // itree = 109
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621446,-0.00350149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179004,0.00100006) , 
0, -0.203519, 1, 0, 0.253065,-0.000526986) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990049,0.0287435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97873,0.00302638) , 
0, -0.992273, 1, 0, 0.980632,0.000926321) , 
2, 0.576923, 1, 0, 0.637728,0.000241375) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0708832,-0.0013969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17971,-0.00750029) , 
0, -1.77547, 1, 0, 0.123163,-0.00194159) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0060995,0.00700381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0200372,0.00477249) , 
0, -2.88855, 1, 0, 0.0127523,0.000632298) , 
3, 3, 1, 0, 0.0720437,-0.000117595) , 
1, 3, 1, 0, 0.5,-6.94799e-05)    );
  // itree = 110
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,0.00087357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,2.11307e-05) , 
0, 0.0166736, 1, 0, 0.532911,0.000513206) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95665,-0.0104506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996604,0.0229919) , 
2, 0.951187, 1, 0, 0.980415,-0.000692521) , 
2, 0.576923, 1, 0, 0.883685,-0.000431897) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.110509,0.00180317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198459,-0.00736661) , 
2, 0.15379, 1, 0, 0.127787,-0.000197452) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.011325,8.18395e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0203332,0.0154055) , 
0, -2.52051, 1, 0, 0.015964,0.00135766) , 
1, 3, 1, 0, 0.0793766,-0.000143717) , 
3, 2, 1, 0, 0.5,-7.10203e-05)    );
  // itree = 111
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0161649,-0.00723082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0384503,0.00521179) , 
0, -1.92062, 1, 0, 0.0276082,6.07713e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.144466,-0.00480462) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168127,-0.000356544) , 
2, 0.041489, 1, 0, 0.161912,-0.00122744) , 
2, -0.627234, 1, 0, 0.0954895,-0.000590332) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0579981,0.0210619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468493,-0.00133463) , 
1, 1, 1, 0, 0.341784,-0.00138149) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950741,-0.00488855) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99799,0.0452915) , 
2, 0.983729, 1, 0, 0.968695,-0.00014783) , 
2, 0.576926, 1, 0, 0.793166,0.000430834) , 
2, 0.153846, 1, 0, 0.5,1.7367e-06)    );
  // itree = 112
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975594,-0.0124101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994462,-0.0107157) , 
0, -0.960511, 1, 0, 0.989849,-0.000757848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976525,-0.00950667) , 
0, 0.865652, 1, 0, 0.986971,-0.000858046) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.151428,0.000261967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0151332,-0.00648147) , 
1, 3, 1, 0, 0.0942819,-0.000165052) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.290943,-0.000249104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904157,0.00595931) , 
2, 0.479294, 1, 0, 0.623399,0.00117301) , 
2, 0.153846, 1, 0, 0.319382,0.000320962) , 
3, 1, 1, 0, 0.5,-6.91771e-05)    );
  // itree = 113
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.169263,-0.0092127) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0618391,0.00107767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00524586,-0.0152569) , 
0, 3.06373, 1, 0, 0.0457305,-3.61555e-05) , 
0, 1.4111, 1, 0, 0.0726043,-0.000931094) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949482,0.00976338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379113,-0.00234511) , 
1, 2, 1, 0, 0.474491,-1.11542e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886814,-0.000838186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903039,0.00940989) , 
1, 2, 1, 0, 0.893169,0.0011916) , 
0, -0.189692, 1, 0, 0.637494,0.000302068) , 
1, 1, 1, 0, 0.5,-6.75909e-05)    );
  // itree = 114
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.169263,-0.0074337) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00961221,0.00696995) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0695837,-0.00140937) , 
2, -9.57692, 1, 0, 0.0457305,-2.97509e-05) , 
0, 1.4111, 1, 0, 0.0726043,-0.00074621) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.178171,0.00154214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614713,-0.0040179) , 
0, 0.153386, 1, 0, 0.2523,-0.000435584) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976859,0.00047796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990694,0.0311215) , 
0, 0.829281, 1, 0, 0.979781,0.000844497) , 
2, 0.576923, 1, 0, 0.637494,0.000242207) , 
1, 1, 1, 0, 0.5,-6.69918e-05)    );
  // itree = 115
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,0.000860348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,-5.45192e-05) , 
0, 0.0166736, 1, 0, 0.532911,0.000460562) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907771,-0.00819925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990893,-0.00086391) , 
2, 0.853561, 1, 0, 0.980415,-0.000678676) , 
2, 0.576923, 1, 0, 0.883685,-0.000432425) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172226,0.00794617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.00208338) , 
1, 1, 1, 0, 0.127787,-2.68863e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00415709,-0.00822355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0204795,0.0110249) , 
0, -3.01497, 1, 0, 0.015964,0.00132419) , 
1, 3, 1, 0, 0.0793766,-0.000136199) , 
3, 2, 1, 0, 0.5,-6.73854e-05)    );
  // itree = 116
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.16565,-0.00665137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.625736,0.000415901) , 
1, 1, 1, 0, 0.591965,-3.13264e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.470519,0.00724199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.289418,0.00015396) , 
0, 1.85029, 1, 0, 0.379088,0.00183259) , 
0, 1.46171, 1, 0, 0.565771,0.00017393) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0778783,-0.00697057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0105866,-0.00213602) , 
0, 2.82061, 1, 0, 0.039065,-0.00120713) , 
0, 2.3036, 1, 0, 0.5,1.47462e-06)    );
  // itree = 117
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975594,-0.00931236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994462,-0.00788299) , 
0, -0.960511, 1, 0, 0.989849,-0.000574417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976525,-0.00878319) , 
0, 0.865652, 1, 0, 0.986971,-0.000693206) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.151428,0.000304796) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0151332,-0.00668004) , 
1, 3, 1, 0, 0.0942819,-0.000156302) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.327468,0.00301097) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925716,-0.000552606) , 
2, 0.576926, 1, 0, 0.623399,0.00102034) , 
2, 0.153846, 1, 0, 0.319382,0.000258425) , 
3, 1, 1, 0, 0.5,-6.55098e-05)    );
  // itree = 118
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.170134,-0.00533745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0903263,-0.00098029) , 
0, 1.38938, 1, 0, 0.123841,-0.00119907) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.469332,-0.000822445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.897299,0.00290372) , 
0, -0.222379, 1, 0, 0.637829,0.000361701) , 
1, 1, 1, 0, 0.565771,-3.63651e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0778783,-0.00578093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0105866,-0.00177336) , 
0, 2.82061, 1, 0, 0.039065,-0.000995267) , 
0, 2.3036, 1, 0, 0.5,7.67373e-07)    );
  // itree = 119
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995687,-0.00882655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774319,0.00775468) , 
3, 1, 1, 0, 0.884743,-4.97519e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.373665,-0.00192461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.860953,0.00360747) , 
0, -0.236886, 1, 0, 0.437853,-0.000465007) , 
1, 2, 1, 0, 0.544994,-2.8699e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.729276,-0.00648213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.268811,-0.00167111) , 
0, 0.915269, 1, 0, 0.353289,-0.00107851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934779,0.00967137) , 
1, 2, 1, 0, 0.438968,-0.000335081) , 
0, 0.383504, 1, 0, 0.5,5.42528e-07)    );
  // itree = 120
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0372097,0.00653226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0173694,-0.00562215) , 
0, 1.91958, 1, 0, 0.0276082,0.000232392) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.1537,-0.00259149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187848,0.00206022) , 
2, 0.112441, 1, 0, 0.161912,-0.00115307) , 
2, -0.627234, 1, 0, 0.0954895,-0.000467865) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.359286,-0.000304248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163033,-0.00616035) , 
0, 1.12849, 1, 0, 0.287845,-0.00155252) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.88025,0.0109554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.964862,0.00266443) , 
0, -1.29613, 1, 0, 0.95428,0.000944) , 
2, 0.44675, 1, 0, 0.793166,0.000340454) , 
2, 0.153846, 1, 0, 0.5,7.95719e-07)    );
  // itree = 121
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,0.000498849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,7.91373e-05) , 
0, 0.0166736, 1, 0, 0.532911,0.00032968) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95665,-0.00775215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996604,0.0167503) , 
2, 0.951187, 1, 0, 0.980415,-0.000562584) , 
2, 0.576923, 1, 0, 0.883685,-0.000369718) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0215799,0.0107774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00572656,-0.00916305) , 
0, 3.02477, 1, 0, 0.0172226,0.00131655) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.00220061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.015964,0.00798954) , 
1, 3, 1, 0, 0.126813,-0.000105646) , 
1, 1, 1, 0, 0.0793766,-0.000130919) , 
3, 2, 1, 0, 0.5,-6.48688e-05)    );
  // itree = 122
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0255735,0.00496615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,-0.00181039) , 
1, 1, 1, 0, 0.253065,-3.72503e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.990049,0.0260347) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97873,0.00353714) , 
0, -0.992273, 1, 0, 0.980632,0.00090317) , 
2, 0.576923, 1, 0, 0.637728,0.000262636) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00681951,0.0041502) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0699957,-0.00147344) , 
2, -9.57692, 1, 0, 0.0452775,-0.000182628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169253,-0.00702665) , 
0, -1.41338, 1, 0, 0.0720437,-0.000814804) , 
1, 3, 1, 0, 0.5,-6.6742e-05)    );
  // itree = 123
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975594,-0.00947321) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994462,-0.00676666) , 
0, -0.960511, 1, 0, 0.989849,-0.000540497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976525,-0.00765683) , 
0, 0.865652, 1, 0, 0.986971,-0.000635806) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.151428,0.000497461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0151332,-0.00632847) , 
1, 3, 1, 0, 0.0942819,-0.000161595) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.327468,0.00276364) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925716,-0.00115066) , 
2, 0.576926, 1, 0, 0.623399,0.000827179) , 
2, 0.153846, 1, 0, 0.319382,0.000237144) , 
3, 1, 1, 0, 0.5,-6.7728e-05)    );
  // itree = 124
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.169263,-0.00536165) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00961221,0.00521738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0695837,-0.00199309) , 
2, -9.57692, 1, 0, 0.0457305,-0.000207581) , 
0, 1.4111, 1, 0, 0.0726043,-0.00068624) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949482,0.00684979) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379113,-0.00181727) , 
1, 2, 1, 0, 0.474491,-1.10284e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893999,0.00766095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892835,-0.000188556) , 
0, 0.285341, 1, 0, 0.893169,0.000896671) , 
0, -0.189692, 1, 0, 0.637494,0.000221774) , 
1, 1, 1, 0, 0.5,-6.61998e-05)    );
  // itree = 125
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00843303,0.00357754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.115247,-0.00659916) , 
2, -9.57692, 1, 0, 0.0577663,-0.00104573) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.273039,0.00173704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972218,-0.00367168) , 
2, 0.576923, 1, 0, 0.662342,0.000342654) , 
0, -2.18648, 1, 0, 0.565771,0.000120883) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0778783,-0.00484525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0105866,-0.00161001) , 
0, 2.82061, 1, 0, 0.039065,-0.000841452) , 
0, 2.3036, 1, 0, 0.5,7.14157e-07)    );
  // itree = 126
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0372097,0.00553952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0173694,-0.00583187) , 
0, 1.91958, 1, 0, 0.0276082,0.000114657) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.149756,-0.00278602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.177385,0.000672448) , 
2, 0.0828776, 1, 0, 0.161912,-0.000998268) , 
2, -0.627234, 1, 0, 0.0954895,-0.000447851) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.359286,-0.000554607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.163033,-0.00566779) , 
0, 1.12849, 1, 0, 0.287845,-0.00156871) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.79824,0.00551453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.987815,0.00348828) , 
2, 0.85105, 1, 0, 0.95428,0.000929352) , 
2, 0.44675, 1, 0, 0.793166,0.000325433) , 
2, 0.153846, 1, 0, 0.5,4.96345e-07)    );
  // itree = 127
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0115086,-0.00941272) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.157169,-0.00497829) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.465445,0.00445981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.592288,-7.62237e-05) , 
0, -1.27982, 1, 0, 0.575637,0.000262686) , 
0, -2.09786, 1, 0, 0.546963,0.000102823) , 
0, -2.68866, 1, 0, 0.5,3.26603e-07)    );
  // itree = 128
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.650211,-0.00169618) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.904755,0.00405826) , 
0, -1.57908, 1, 0, 0.793961,0.000308882) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.952657,-0.00335204) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.736317,0.00109246) , 
0, 1.23841, 1, 0, 0.909234,-0.000511766) , 
0, -0.95572, 1, 0, 0.883685,-0.000329883) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.110509,0.00166892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198459,-0.00730372) , 
2, 0.15379, 1, 0, 0.127787,-0.000259902) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00415709,-0.00691474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0204795,0.00963531) , 
0, -3.01497, 1, 0, 0.015964,0.00117605) , 
1, 3, 1, 0, 0.0793766,-0.00013262) , 
3, 2, 1, 0, 0.5,-6.56657e-05)    );
  // itree = 129
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0120213,0.00878755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00560257,-0.0131388) , 
0, 3.07165, 1, 0, 0.00975338,0.000296917) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.217825,-0.00036776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0213772,-0.00849059) , 
1, 3, 1, 0, 0.143854,-0.000288912) , 
2, -9.60947, 1, 0, 0.0954895,-0.000496485) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.470367,-0.00144778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0539833,0.0203518) , 
1, 3, 1, 0, 0.341784,-0.00126078) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950741,-0.00391636) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99799,0.0395856) , 
2, 0.983729, 1, 0, 0.968695,-0.000121901) , 
2, 0.576926, 1, 0, 0.793166,0.000359188) , 
2, 0.153846, 1, 0, 0.5,-3.68355e-07)    );
  // itree = 130
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0255735,0.00502754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,-0.0017449) , 
1, 1, 1, 0, 0.253065,-3.86568e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995489,0.00417895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95413,0.00758186) , 
3, 1, 1, 0, 0.980632,0.000273997) , 
2, 0.576923, 1, 0, 0.637728,0.00025622) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0708832,-0.00151205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17971,-0.00730642) , 
0, -1.77547, 1, 0, 0.123163,-0.00194173) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0060995,0.00797399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0200372,0.00325502) , 
0, -2.88855, 1, 0, 0.0127523,0.000527811) , 
3, 3, 1, 0, 0.0720437,-0.000113944) , 
1, 3, 1, 0, 0.5,-6.6256e-05)    );
  // itree = 131
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.169263,-0.00505583) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00961221,0.0046542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0695837,-0.0018626) , 
2, -9.57692, 1, 0, 0.0457305,-0.000199332) , 
0, 1.4111, 1, 0, 0.0726043,-0.000648636) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949482,0.00562419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.379113,-0.00175154) , 
1, 2, 1, 0, 0.474491,-1.11927e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893999,0.00655128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892835,0.000315138) , 
0, 0.285341, 1, 0, 0.893169,0.0009421) , 
0, -0.189692, 1, 0, 0.637494,0.000207986) , 
1, 1, 1, 0, 0.5,-6.7997e-05)    );
  // itree = 132
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975594,-0.00819716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994462,-0.00689933) , 
0, -0.960511, 1, 0, 0.989849,-0.000503729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976525,-0.00675388) , 
0, 0.865652, 1, 0, 0.986971,-0.000582077) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0162903,-0.00548266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150904,0.000324265) , 
1, 1, 1, 0, 0.0942819,-0.000161165) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.327468,0.00262059) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925716,-0.000782069) , 
2, 0.576926, 1, 0, 0.623399,0.000839255) , 
2, 0.153846, 1, 0, 0.319382,0.000215402) , 
3, 1, 1, 0, 0.5,-6.7548e-05)    );
  // itree = 133
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0255735,0.00486878) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,-0.00177956) , 
1, 1, 1, 0, 0.253065,-3.79862e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.991288,0.0207283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976267,0.00156194) , 
0, -0.57494, 1, 0, 0.980632,0.000748785) , 
2, 0.576923, 1, 0, 0.637728,0.000184568) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0708832,-0.000891896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17971,-0.00569667) , 
0, -1.77547, 1, 0, 0.123163,-0.0014604) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0060995,0.0065709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0200372,0.00283949) , 
0, -2.88855, 1, 0, 0.0127523,0.000452626) , 
3, 3, 1, 0, 0.0720437,-0.000115631) , 
1, 3, 1, 0, 0.5,-6.7631e-05)    );
  // itree = 134
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164508,-0.0059542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0593852,0.00301064) , 
0, 2.06196, 1, 0, 0.123601,-0.00131959) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,0.000804621) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,0.00230156) , 
0, 2.86859, 1, 0, 0.0137948,0.000175243) , 
3, 3, 1, 0, 0.0726043,8.09785e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.367312,0.000602388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835604,-0.00401165) , 
0, -0.743894, 1, 0, 0.474491,-0.000211239) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.886814,-0.000128601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903039,0.00609345) , 
1, 2, 1, 0, 0.893169,0.000692138) , 
0, -0.189692, 1, 0, 0.637494,0.000201642) , 
1, 1, 1, 0, 0.5,-6.90851e-05)    );
  // itree = 135
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0115086,-0.00976979) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.157169,-0.00472587) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.207297,0.00133342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971717,-0.00280066) , 
2, 0.576923, 1, 0, 0.575637,0.00026065) , 
0, -2.09786, 1, 0, 0.546963,0.000107319) , 
0, -2.68866, 1, 0, 0.5,2.8475e-07)    );
  // itree = 136
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527619,0.000711155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.747736,-0.00205693) , 
0, 0.220445, 1, 0, 0.591965,-6.67132e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.752284,0.00488068) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0523079,-0.000264046) , 
3, 2, 1, 0, 0.379088,0.000645002) , 
0, 1.46171, 1, 0, 0.565771,0.000114848) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0778783,-0.00444709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0105866,-0.00201833) , 
0, 2.82061, 1, 0, 0.039065,-0.000804333) , 
0, 2.3036, 1, 0, 0.5,6.85664e-08)    );
  // itree = 137
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.000810081) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,-0.00253343) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,0.00125812) , 
0, 1.47527, 1, 0, 0.91048,-0.000454737) , 
0, -1.27985, 1, 0, 0.883685,-0.000313052) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.152477,-0.000202808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0794965,0.00610548) , 
0, 0.768366, 1, 0, 0.123678,0.000992589) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0179937,0.0046938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0805397,-0.00537135) , 
2, -0.761284, 1, 0, 0.0355686,-0.000298832) , 
3, 3, 1, 0, 0.0793766,-2.88086e-05) , 
3, 2, 1, 0, 0.5,-6.6913e-05)    );
  // itree = 138
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164508,-0.00490435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0593852,0.00191999) , 
0, 2.06196, 1, 0, 0.123601,-0.00115334) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,0.000697982) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,0.00101904) , 
0, 2.86859, 1, 0, 0.0137948,0.000108277) , 
3, 3, 1, 0, 0.0726043,8.28935e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.178171,0.000997426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614713,-0.00306648) , 
0, 0.153386, 1, 0, 0.2523,-0.000417718) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976859,0.000701954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990694,0.0265868) , 
0, 0.829281, 1, 0, 0.979781,0.000715463) , 
2, 0.576923, 1, 0, 0.637494,0.000182291) , 
1, 1, 1, 0, 0.5,-6.79901e-05)    );
  // itree = 139
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.126336,-0.000399233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.392809,0.00370758) , 
2, 0.170076, 1, 0, 0.201423,0.00063596) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87961,-0.00564885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991895,0.00252367) , 
2, 0.886103, 1, 0, 0.96986,-0.000449816) , 
2, 0.576923, 1, 0, 0.565771,0.000121149) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0778783,-0.00442263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0105866,-0.0026878) , 
0, 2.82061, 1, 0, 0.039065,-0.000841165) , 
0, 2.3036, 1, 0, 0.5,9.82939e-07)    );
  // itree = 140
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,0.000264015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.000323545) , 
0, 0.0166736, 1, 0, 0.532911,0.000336079) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969291,-0.00626826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998049,0.0335715) , 
2, 0.983729, 1, 0, 0.980415,-0.000471066) , 
2, 0.576923, 1, 0, 0.883685,-0.000296598) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.110509,0.00162733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198459,-0.00664872) , 
2, 0.15379, 1, 0, 0.127787,-0.000181568) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00786959,-0.001895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0208596,0.00911625) , 
0, -2.76774, 1, 0, 0.015964,0.000993245) , 
1, 3, 1, 0, 0.0793766,-0.000137851) , 
3, 2, 1, 0, 0.5,-6.81439e-05)    );
  // itree = 141
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0255735,0.00415245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,-0.00162908) , 
1, 1, 1, 0, 0.253065,-3.65242e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931573,0.00592602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995348,0.00681913) , 
2, 0.902374, 1, 0, 0.980632,0.000757545) , 
2, 0.576923, 1, 0, 0.637728,0.000188642) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00393192,-0.0128919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0384802,0.00277416) , 
0, -3.04575, 1, 0, 0.0240404,0.000170979) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.093352,-0.00284716) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167229,-0.00448574) , 
0, -1.44282, 1, 0, 0.129941,-0.00148533) , 
0, -2.1804, 1, 0, 0.0720437,-0.000579802) , 
1, 3, 1, 0, 0.5,-6.77051e-05)    );
  // itree = 142
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975594,-0.00765152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994462,-0.00633434) , 
0, -0.960511, 1, 0, 0.989849,-0.00046595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976525,-0.00778575) , 
0, 0.865652, 1, 0, 0.986971,-0.000578378) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0499622,-0.00474791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.515289,0.00157621) , 
0, -2.06833, 1, 0, 0.392999,0.000511212) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0109773,0.00071498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.109842,-0.00362274) , 
2, -9.57692, 1, 0, 0.06357,-0.000809047) , 
0, 1.91958, 1, 0, 0.319382,0.000216174) , 
3, 1, 1, 0, 0.5,-6.45797e-05)    );
  // itree = 143
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00961181,0.00169827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0214456,-0.00850408) , 
2, -9.60947, 1, 0, 0.016365,-0.0010157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220806,0.0011324) , 
2, 0.153846, 1, 0, 0.0726043,-0.000554979) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.178171,0.000669943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614713,-0.00240498) , 
0, 0.153386, 1, 0, 0.2523,-0.000381581) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976859,0.00144629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990694,0.0229036) , 
0, 0.829281, 1, 0, 0.979781,0.000678744) , 
2, 0.576923, 1, 0, 0.637494,0.000179851) , 
1, 1, 1, 0, 0.5,-6.33976e-05)    );
  // itree = 144
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,0.000417922) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.000649042) , 
0, 0.0166736, 1, 0, 0.532911,0.000611381) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969291,-0.00641255) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998049,0.028472) , 
2, 0.983729, 1, 0, 0.980415,-0.000564913) , 
2, 0.576923, 1, 0, 0.883685,-0.000310652) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0145157,-0.00146604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0197912,0.0125376) , 
2, -0.696856, 1, 0, 0.0172226,0.00098935) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.1099,0.00177431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19551,-0.00691106) , 
2, 0.15379, 1, 0, 0.126813,-0.000149568) , 
1, 1, 1, 0, 0.0793766,-0.000128361) , 
3, 2, 1, 0, 0.5,-6.35638e-05)    );
  // itree = 145
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.12647,-0.00110193) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106156,0.00312482) , 
0, 0.90045, 1, 0, 0.121996,-0.000115843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0164886,-0.00762591) , 
0, 2.3036, 1, 0, 0.0954895,-0.000393263) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.180026,-0.0054564) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371965,0.00023617) , 
0, -1.10879, 1, 0, 0.301334,-0.00113982) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82001,0.00627115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988795,0.000457829) , 
2, 0.859811, 1, 0, 0.958694,0.000767904) , 
2, 0.479294, 1, 0, 0.793166,0.000287525) , 
2, 0.153846, 1, 0, 0.5,1.45603e-06)    );
  // itree = 146
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975594,-0.00648093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994462,-0.00616057) , 
0, -0.960511, 1, 0, 0.989849,-0.000422498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976525,-0.00806792) , 
0, 0.865652, 1, 0, 0.986971,-0.00055035) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0162903,-0.004913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150904,0.000355769) , 
1, 1, 1, 0, 0.0942819,-0.000152045) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.327468,0.00243622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925716,-0.000975917) , 
2, 0.576926, 1, 0, 0.623399,0.000742401) , 
2, 0.153846, 1, 0, 0.319382,0.000205594) , 
3, 1, 1, 0, 0.5,-6.37252e-05)    );
  // itree = 147
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.00120956) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.951559,-0.000442509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.871789,-0.00218839) , 
0, 0.203675, 1, 0, 0.91048,-0.00048223) , 
0, -1.27985, 1, 0, 0.883685,-0.000299791) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0109755,-0.0024168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0355852,0.00860658) , 
0, -2.68866, 1, 0, 0.0252398,0.000986501) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0197912,0.00985328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.185074,-0.00149546) , 
1, 1, 1, 0, 0.120488,7.10797e-05) , 
2, -0.69236, 1, 0, 0.0793766,0.000330473) , 
3, 2, 1, 0, 0.5,-6.38137e-05)    );
  // itree = 148
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164508,-0.00532548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0593852,0.00167136) , 
0, 2.06196, 1, 0, 0.123601,-0.00131802) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,0.000790071) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,0.000985124) , 
0, 2.86859, 1, 0, 0.0137948,0.000114808) , 
3, 3, 1, 0, 0.0726043,8.24024e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,-0.00126797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0237983,0.00417632) , 
1, 3, 1, 0, 0.2523,-7.99002e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.976859,0.00170596) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990694,0.0200766) , 
0, 0.829281, 1, 0, 0.979781,0.000625718) , 
2, 0.576923, 1, 0, 0.637494,0.000210089) , 
1, 1, 1, 0, 0.5,-6.32288e-05)    );
  // itree = 149
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.127653,-0.00257939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909108,0.00159023) , 
1, 1, 1, 0, 0.764615,-1.56302e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.010976,0.000484893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103585,-0.00632774) , 
2, -9.57692, 1, 0, 0.0510581,-0.00106489) , 
0, 2.22094, 1, 0, 0.637728,0.0001836) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00393192,-0.0103866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0384802,0.00228805) , 
0, -3.04575, 1, 0, 0.0240404,0.000152759) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.093352,-0.00272386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167229,-0.00435706) , 
0, -1.44282, 1, 0, 0.129941,-0.00143809) , 
0, -2.1804, 1, 0, 0.0720437,-0.000568352) , 
1, 3, 1, 0, 0.5,-6.41999e-05)    );
  // itree = 150
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0115086,-0.00814375) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.157169,-0.00466101) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.207297,0.0013164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971717,-0.00304916) , 
2, 0.576923, 1, 0, 0.575637,0.000239184) , 
0, -2.09786, 1, 0, 0.546963,8.80917e-05) , 
0, -2.68866, 1, 0, 0.5,2.0854e-07)    );
  // itree = 151
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0372097,0.00436301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0173694,-0.00503863) , 
0, 1.91958, 1, 0, 0.0276082,5.68325e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.145162,-0.00303089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.172796,0.000361671) , 
2, 0.0592269, 1, 0, 0.161912,-0.000766632) , 
2, -0.627234, 1, 0, 0.0954895,-0.000359373) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.180026,-0.00496833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371965,-1.17574e-05) , 
0, -1.10879, 1, 0, 0.301334,-0.00115198) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82001,0.00547133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988795,0.00141999) , 
2, 0.859811, 1, 0, 0.958694,0.00073597) , 
2, 0.479294, 1, 0, 0.793166,0.000260571) , 
2, 0.153846, 1, 0, 0.5,6.81906e-08)    );
  // itree = 152
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,0.000457099) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.000739857) , 
0, 0.0166736, 1, 0, 0.532911,0.000683872) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907771,-0.0056874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990893,-0.00153334) , 
2, 0.853561, 1, 0, 0.980415,-0.000530273) , 
2, 0.576923, 1, 0, 0.883685,-0.00026783) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.110509,0.00134562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198459,-0.00555026) , 
2, 0.15379, 1, 0, 0.127787,-0.000165302) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.011325,0.00110683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0203332,0.00902729) , 
0, -2.52051, 1, 0, 0.015964,0.000894749) , 
1, 3, 1, 0, 0.0793766,-0.00012275) , 
3, 2, 1, 0, 0.5,-6.08592e-05)    );
  // itree = 153
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206832,-0.00195012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0468071,0.000608214) , 
3, 3, 1, 0, 0.129801,-8.48724e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0925343,0.0056515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0171532,-0.00719163) , 
0, 2.18554, 1, 0, 0.041456,0.000184138) , 
0, 1.15154, 1, 0, 0.0954895,-0.000443784) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0579981,0.0152974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468493,-0.00104181) , 
1, 1, 1, 0, 0.341784,-0.00127064) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.944183,-0.00253237) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.997384,0.0188353) , 
2, 0.967458, 1, 0, 0.968695,-0.000111294) , 
2, 0.576926, 1, 0, 0.793166,0.000321269) , 
2, 0.153846, 1, 0, 0.5,-2.08845e-07)    );
  // itree = 154
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.016365,-0.00416608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.509043,0.000921673) , 
1, 1, 1, 0, 0.153279,-5.01603e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019392,-0.0126171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0125564,0.000904178) , 
3, 3, 1, 0, 0.0151935,-0.000126081) , 
1, 3, 1, 0, 0.0954895,-0.000145673) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.373873,0.000329231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.173009,-0.00521417) , 
0, 1.12849, 1, 0, 0.301334,-0.00105708) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82001,0.00531694) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988795,0.00111067) , 
2, 0.859811, 1, 0, 0.958694,0.000698492) , 
2, 0.479294, 1, 0, 0.793166,0.000256426) , 
2, 0.153846, 1, 0, 0.5,-7.4079e-07)    );
  // itree = 155
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.00133949) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,-0.00243556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,0.000644914) , 
0, 1.47527, 1, 0, 0.91048,-0.000486879) , 
0, -1.27985, 1, 0, 0.883685,-0.000292065) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.152477,8.04786e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0794965,0.00476124) , 
0, 0.768366, 1, 0, 0.123678,0.000884637) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00971231,0.012967) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0693031,-0.00425346) , 
2, -9.58006, 1, 0, 0.0355686,-0.000242287) , 
3, 3, 1, 0, 0.0793766,-2.75154e-05) , 
3, 2, 1, 0, 0.5,-6.121e-05)    );
  // itree = 156
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0115086,-0.00837559) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.269197,0.00136518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973387,-0.00223467) , 
2, 0.576923, 1, 0, 0.657243,0.00033472) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.010976,0.000695739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.21736,-0.00323794) , 
2, -9.57692, 1, 0, 0.13573,-0.000826179) , 
0, 1.74235, 1, 0, 0.546963,8.92336e-05) , 
0, -2.68866, 1, 0, 0.5,-1.28493e-06)    );
  // itree = 157
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0161649,-0.00536406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0384503,0.00464063) , 
0, -1.92062, 1, 0, 0.0276082,0.000130893) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.1537,-0.00189743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187848,0.00165789) , 
2, 0.112441, 1, 0, 0.161912,-0.000813453) , 
2, -0.627234, 1, 0, 0.0954895,-0.00034641) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.373873,8.92841e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.173009,-0.00417434) , 
0, 1.12849, 1, 0, 0.301334,-0.000931905) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82001,0.00465658) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988795,0.00149203) , 
2, 0.859811, 1, 0, 0.958694,0.000646527) , 
2, 0.479294, 1, 0, 0.793166,0.000249067) , 
2, 0.153846, 1, 0, 0.5,-1.1546e-06)    );
  // itree = 158
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975594,-0.00587542) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994462,-0.0051367) , 
0, -0.960511, 1, 0, 0.989849,-0.000369506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976525,-0.00694833) , 
0, 0.865652, 1, 0, 0.986971,-0.000478858) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0162903,-0.00403745) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150904,0.000279803) , 
1, 1, 1, 0, 0.0942819,-0.00014486) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.40533,-0.000374748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958943,0.00843387) , 
2, 0.804735, 1, 0, 0.623399,0.000631641) , 
2, 0.153846, 1, 0, 0.319382,0.000176225) , 
3, 1, 1, 0, 0.5,-6.07138e-05)    );
  // itree = 159
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,0.000518552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.000864638) , 
0, 0.0166736, 1, 0, 0.532911,0.000791492) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907771,-0.00563777) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990893,-0.00210256) , 
2, 0.853561, 1, 0, 0.980415,-0.000565946) , 
2, 0.576923, 1, 0, 0.883685,-0.00027253) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0321377,0.00729283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00555621,-0.0124309) , 
0, 3.07165, 1, 0, 0.0252398,0.000924281) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0197912,0.00879545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.185074,-0.0013948) , 
1, 1, 1, 0, 0.120488,8.21829e-05) , 
2, -0.69236, 1, 0, 0.0793766,0.000297594) , 
3, 2, 1, 0, 0.5,-6.07817e-05)    );
  // itree = 160
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164508,-0.00498827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0593852,0.00155425) , 
0, 2.06196, 1, 0, 0.123601,-0.00124139) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,0.00222602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,0.00168234) , 
0, 2.86859, 1, 0, 0.0137948,0.000270088) , 
3, 3, 1, 0, 0.0726043,8.34047e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0734969,-0.00474666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397943,0.00215406) , 
0, -2.08982, 1, 0, 0.173889,-0.000463815) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643408,0.00352672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869554,0.000280497) , 
0, -0.928608, 1, 0, 0.826283,0.00043133) , 
0, -1.562, 1, 0, 0.637494,0.000172295) , 
1, 1, 1, 0, 0.5,-6.25385e-05)    );
  // itree = 161
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0120213,0.00597379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00560257,-0.0118514) , 
0, 3.07165, 1, 0, 0.00975338,0.00015072) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.183624,-9.69113e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0693734,-0.00341364) , 
3, 3, 1, 0, 0.143854,-0.000212827) , 
2, -9.60947, 1, 0, 0.0954895,-0.000336124) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.470367,-0.00116963) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0539833,0.0159813) , 
1, 3, 1, 0, 0.341784,-0.00123451) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950741,-0.00264168) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99799,0.0244709) , 
2, 0.983729, 1, 0, 0.968695,-0.0001633) , 
2, 0.576926, 1, 0, 0.793166,0.000242016) , 
2, 0.153846, 1, 0, 0.5,-9.20268e-07)    );
  // itree = 162
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906101,0.00805647) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885593,-0.00111397) , 
1, 2, 1, 0, 0.89352,-1.80234e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383759,-0.00212017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95062,0.00934717) , 
1, 2, 1, 0, 0.480655,-0.000196374) , 
0, 0.142832, 1, 0, 0.637728,0.000198949) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00393192,-0.00928845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0384802,0.00264444) , 
0, -3.04575, 1, 0, 0.0240404,0.00022726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.093352,-0.00368111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167229,-0.00451116) , 
0, -1.44282, 1, 0, 0.129941,-0.00164897) , 
0, -2.1804, 1, 0, 0.0720437,-0.000623209) , 
1, 3, 1, 0, 0.5,-6.28409e-05)    );
  // itree = 163
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0255735,0.00391299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,-0.00137354) , 
1, 1, 1, 0, 0.253065,-3.3919e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969458,-0.000758727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992802,0.016751) , 
1, 2, 1, 0, 0.980632,0.000196688) , 
2, 0.576923, 1, 0, 0.637728,0.000159614) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0708832,-0.00077239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17971,-0.00460022) , 
0, -1.77547, 1, 0, 0.123163,-0.00119741) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0060995,0.00958006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0200372,0.000367944) , 
0, -2.88855, 1, 0, 0.0127523,0.000310874) , 
3, 3, 1, 0, 0.0720437,-0.000108067) , 
1, 3, 1, 0, 0.5,-6.06683e-05)    );
  // itree = 164
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0115086,-0.00720539) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.157169,-0.00391236) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.207297,0.00119937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971717,-0.00297375) , 
2, 0.576923, 1, 0, 0.575637,0.000204392) , 
0, -2.09786, 1, 0, 0.546963,7.71817e-05) , 
0, -2.68866, 1, 0, 0.5,-5.9627e-08)    );
  // itree = 165
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0372097,0.00368767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0173694,-0.00429527) , 
0, 1.91958, 1, 0, 0.0276082,4.59348e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.144466,-0.00305431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.168127,-9.56203e-05) , 
2, 0.041489, 1, 0, 0.161912,-0.000696137) , 
2, -0.627234, 1, 0, 0.0954895,-0.000329133) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.180026,-0.00470025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371965,0.000346027) , 
0, -1.10879, 1, 0, 0.301334,-0.000916345) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82001,0.00470751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988795,0.00113202) , 
2, 0.859811, 1, 0, 0.958694,0.000626957) , 
2, 0.479294, 1, 0, 0.793166,0.000238343) , 
2, 0.153846, 1, 0, 0.5,-1.12147e-07)    );
  // itree = 166
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,0.000266243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.000673786) , 
0, 0.0166736, 1, 0, 0.532911,0.000538365) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907771,-0.0046253) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990893,-0.00176825) , 
2, 0.853561, 1, 0, 0.980415,-0.00046686) , 
2, 0.576923, 1, 0, 0.883685,-0.000249577) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.110509,0.00113779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.198459,-0.00504058) , 
2, 0.15379, 1, 0, 0.127787,-0.000195866) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.011325,0.00169348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0203332,0.00859356) , 
0, -2.52051, 1, 0, 0.015964,0.000887913) , 
1, 3, 1, 0, 0.0793766,-0.000125079) , 
3, 2, 1, 0, 0.5,-6.18499e-05)    );
  // itree = 167
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0120213,0.00477543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00560257,-0.00962687) , 
0, 3.07165, 1, 0, 0.00975338,0.000125693) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.217825,-0.000257243) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0213772,-0.00654683) , 
1, 3, 1, 0, 0.143854,-0.000210508) , 
2, -9.60947, 1, 0, 0.0954895,-0.000402889) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.470367,-0.000742062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0539833,0.0135616) , 
1, 3, 1, 0, 0.341784,-0.00125931) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.950741,-0.0018724) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99799,0.0209049) , 
2, 0.983729, 1, 0, 0.968695,-9.03438e-05) , 
2, 0.576926, 1, 0, 0.793166,0.00029144) , 
2, 0.153846, 1, 0, 0.5,-3.19406e-07)    );
  // itree = 168
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.621446,-0.00179496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179004,0.000549127) , 
0, -0.203519, 1, 0, 0.253065,-0.000248278) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931573,0.00495556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995348,0.00386286) , 
2, 0.902374, 1, 0, 0.980632,0.000563478) , 
2, 0.576923, 1, 0, 0.637728,0.000180896) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00393192,-0.00971662) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0384802,0.00203088) , 
0, -3.04575, 1, 0, 0.0240404,0.000128966) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.093352,-0.0033271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167229,-0.00366345) , 
0, -1.44282, 1, 0, 0.129941,-0.00140248) , 
0, -2.1804, 1, 0, 0.0720437,-0.000565216) , 
1, 3, 1, 0, 0.5,-6.34324e-05)    );
  // itree = 169
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.000939662) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,-0.00240758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,0.00140842) , 
0, 1.47527, 1, 0, 0.91048,-0.000409843) , 
0, -1.27985, 1, 0, 0.883685,-0.000262609) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0109755,-0.00112734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0355852,0.00649517) , 
0, -2.68866, 1, 0, 0.0252398,0.000777548) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0197912,0.00737772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.185074,-0.00106824) , 
1, 1, 1, 0, 0.120488,8.50159e-05) , 
2, -0.69236, 1, 0, 0.0793766,0.000286694) , 
3, 2, 1, 0, 0.5,-6.11416e-05)    );
  // itree = 170
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164508,-0.00462527) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0593852,0.00057618) , 
0, 2.06196, 1, 0, 0.123601,-0.00126303) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,0.000314481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,0.0015034) , 
0, 2.86859, 1, 0, 0.0137948,9.65344e-05) , 
3, 3, 1, 0, 0.0726043,8.18648e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,-0.000834217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992749,0.0148137) , 
2, 0.576923, 1, 0, 0.905792,0.000511357) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123163,-0.00261823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0127523,0.00205137) , 
3, 3, 1, 0, 0.0720437,-0.000108381) , 
1, 3, 1, 0, 0.637494,-3.67811e-05) , 
1, 1, 1, 0, 0.5,-6.08753e-05)    );
  // itree = 171
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979999,-0.0016392) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994293,-0.0214326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982759,-0.00172704) , 
0, 0.525503, 1, 0, 0.989296,-0.000576694) , 
0, -0.763562, 1, 0, 0.986971,-0.000480621) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.203258,0.00135765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934669,-0.00324274) , 
2, 0.576923, 1, 0, 0.392999,0.000416836) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0109773,-4.95963e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.109842,-0.00278196) , 
2, -9.57692, 1, 0, 0.06357,-0.000647662) , 
0, 1.91958, 1, 0, 0.319382,0.000178953) , 
3, 1, 1, 0, 0.5,-6.12671e-05)    );
  // itree = 172
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0208764,-0.00917054) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0135388,-0.000783116) , 
3, 3, 1, 0, 0.016365,1.96038e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509043,0.000814004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0151935,-0.00386836) , 
1, 3, 1, 0, 0.152763,-0.000115041) , 
1, 1, 1, 0, 0.0954895,-0.000146592) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0579981,0.012753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468493,-0.000800752) , 
1, 1, 1, 0, 0.341784,-0.00138505) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846637,-0.00252701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988057,0.000470251) , 
2, 0.853561, 1, 0, 0.968695,-0.000180967) , 
2, 0.576926, 1, 0, 0.793166,0.000223209) , 
2, 0.153846, 1, 0, 0.5,7.87763e-07)    );
  // itree = 173
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164508,-0.00384519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0593852,0.000112326) , 
0, 2.06196, 1, 0, 0.123601,-0.00109566) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,0.000461002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,0.0014026) , 
0, 2.86859, 1, 0, 0.0137948,0.000104887) , 
3, 3, 1, 0, 0.0726043,8.34887e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0734969,-0.0042921) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397943,0.00216923) , 
0, -2.08982, 1, 0, 0.173889,-0.000387823) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643408,0.00341558) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869554,0.000231059) , 
0, -0.928608, 1, 0, 0.826283,0.000401178) , 
0, -1.562, 1, 0, 0.637494,0.000172858) , 
1, 1, 1, 0, 0.5,-6.07135e-05)    );
  // itree = 174
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164508,-0.0030866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0593852,8.98465e-05) , 
0, 2.06196, 1, 0, 0.123601,-0.000876863) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,0.000368439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,0.00111863) , 
0, 2.86859, 1, 0, 0.0137948,8.38881e-05) , 
3, 3, 1, 0, 0.0726043,8.45695e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.178171,0.000762988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614713,-0.0019224) , 
0, 0.153386, 1, 0, 0.2523,-0.000195159) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.928564,0.00430386) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995171,0.001621) , 
2, 0.902374, 1, 0, 0.979781,0.000434423) , 
2, 0.576923, 1, 0, 0.637494,0.000138199) , 
1, 1, 1, 0, 0.5,-5.96768e-05)    );
  // itree = 175
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975594,-0.00586797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994462,-0.00353891) , 
0, -0.960511, 1, 0, 0.989849,-0.000314664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976525,-0.00549715) , 
0, 0.865652, 1, 0, 0.986971,-0.000397063) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.39001,-2.8427e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.405274,0.00287918) , 
0, 0.856128, 1, 0, 0.392999,0.000357588) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0109773,-9.59969e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.109842,-0.00249776) , 
2, -9.57692, 1, 0, 0.06357,-0.000584494) , 
0, 1.91958, 1, 0, 0.319382,0.000147061) , 
3, 1, 1, 0, 0.5,-5.98604e-05)    );
  // itree = 176
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702902,-0.00175584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202483,0.00107716) , 
0, -0.5027, 1, 0, 0.121996,-4.02017e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0164886,-0.00570814) , 
0, 2.3036, 1, 0, 0.0954895,-0.00025586) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587509,0.00395886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1091,-0.00334683) , 
3, 2, 1, 0, 0.341784,-0.00131202) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875307,-0.00240327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991749,0.00159701) , 
2, 0.886103, 1, 0, 0.968695,-0.000169709) , 
2, 0.576926, 1, 0, 0.793166,0.000185293) , 
2, 0.153846, 1, 0, 0.5,-8.10072e-08)    );
  // itree = 177
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.000497938) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,-0.00224622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,0.00115279) , 
0, 1.47527, 1, 0, 0.91048,-0.000396061) , 
0, -1.27985, 1, 0, 0.883685,-0.000291644) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172226,0.0045847) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.00130164) , 
1, 1, 1, 0, 0.127787,-2.19731e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00415709,-0.00239287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0204795,0.00695569) , 
0, -3.01497, 1, 0, 0.015964,0.000903671) , 
1, 3, 1, 0, 0.0793766,-0.000120082) , 
3, 2, 1, 0, 0.5,-5.94313e-05)    );
  // itree = 178
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,5.08777e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.000564787) , 
0, 0.0166736, 1, 0, 0.532911,0.000327943) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907771,-0.00341434) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990893,-0.001953) , 
2, 0.853561, 1, 0, 0.980415,-0.000387975) , 
2, 0.576923, 1, 0, 0.883685,-0.000233226) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0862887,0.00437494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.149755,-0.000280701) , 
0, -0.694025, 1, 0, 0.123678,0.000728309) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00971231,0.0098545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0693031,-0.00344736) , 
2, -9.58006, 1, 0, 0.0355686,-0.00021355) , 
3, 3, 1, 0, 0.0793766,-2.70447e-05) , 
3, 2, 1, 0, 0.5,-5.88807e-05)    );
  // itree = 179
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.590746,0.000171217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.401456,0.00430889) , 
0, 1.55145, 1, 0, 0.575265,0.000233936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.00479187) , 
0, 2.09682, 1, 0, 0.546317,7.43684e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00588601) , 
0, 2.68762, 1, 0, 0.5,-6.32483e-07)    );
  // itree = 180
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906101,0.00688375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885593,-0.00103922) , 
1, 2, 1, 0, 0.89352,-1.7927e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383759,-0.00179181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95062,0.00743006) , 
1, 2, 1, 0, 0.480655,-0.000173388) , 
0, 0.142832, 1, 0, 0.637728,0.00013734) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00393192,-0.00792671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0384802,0.00167266) , 
0, -3.04575, 1, 0, 0.0240404,0.000111838) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.093352,-0.00298176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167229,-0.00247641) , 
0, -1.44282, 1, 0, 0.129941,-0.00108217) , 
0, -2.1804, 1, 0, 0.0720437,-0.000429391) , 
1, 3, 1, 0, 0.5,-6.11543e-05)    );
  // itree = 181
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.109289,-0.000180678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.21319,-0.00240163) , 
0, 0.280106, 1, 0, 0.130083,-0.000553669) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0551401,0.00385771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0146167,-0.00367486) , 
0, 2.59901, 1, 0, 0.0293952,0.000203312) , 
0, 1.53556, 1, 0, 0.0954895,-0.000293594) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.180026,-0.00502498) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371965,0.000357304) , 
0, -1.10879, 1, 0, 0.301334,-0.000995674) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82001,0.00469556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988795,0.00105331) , 
2, 0.859811, 1, 0, 0.958694,0.000618686) , 
2, 0.479294, 1, 0, 0.793166,0.000212179) , 
2, 0.153846, 1, 0, 0.5,-3.48242e-07)    );
  // itree = 182
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0115086,-0.00662369) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.157169,-0.00333986) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.207297,0.00108017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971717,-0.00274977) , 
2, 0.576923, 1, 0, 0.575637,0.000179641) , 
0, -2.09786, 1, 0, 0.546963,7.03347e-05) , 
0, -2.68866, 1, 0, 0.5,-3.0134e-07)    );
  // itree = 183
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0161649,-0.00429999) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0384503,0.00342759) , 
0, -1.92062, 1, 0, 0.0276082,7.39081e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.150323,-0.00188256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.179417,0.000777028) , 
2, 0.0887902, 1, 0, 0.161912,-0.000644576) , 
2, -0.627234, 1, 0, 0.0954895,-0.000289237) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.373873,0.000136431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.173009,-0.00405569) , 
0, 1.12849, 1, 0, 0.301334,-0.000885551) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82001,0.00414886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988795,0.00139804) , 
2, 0.859811, 1, 0, 0.958694,0.000577533) , 
2, 0.479294, 1, 0, 0.793166,0.000209118) , 
2, 0.153846, 1, 0, 0.5,-2.92321e-07)    );
  // itree = 184
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.000927882) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,-0.00208165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,0.0010678) , 
0, 1.47527, 1, 0, 0.91048,-0.000367051) , 
0, -1.27985, 1, 0, 0.883685,-0.000227671) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172226,0.003904) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.00125414) , 
1, 1, 1, 0, 0.127787,-2.02368e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00415709,-0.00015525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0204795,0.00602411) , 
0, -3.01497, 1, 0, 0.015964,0.000811671) , 
1, 3, 1, 0, 0.0793766,-0.000114454) , 
3, 2, 1, 0, 0.5,-5.66882e-05)    );
  // itree = 185
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0208764,-0.00744406) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0135388,-0.00137319) , 
3, 3, 1, 0, 0.016365,2.04485e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220806,0.00048714) , 
2, 0.153846, 1, 0, 0.0726043,-0.000446857) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.367312,0.000498094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835604,-0.00323448) , 
0, -0.743894, 1, 0, 0.474491,-0.000166352) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.893999,0.0044645) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.892835,0.000195089) , 
0, 0.285341, 1, 0, 0.893169,0.000628562) , 
0, -0.189692, 1, 0, 0.637494,0.000143131) , 
1, 1, 1, 0, 0.5,-5.66439e-05)    );
  // itree = 186
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.127653,-0.00194453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909108,0.00114174) , 
1, 1, 1, 0, 0.764615,-1.48692e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.010976,-0.00102132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103585,-0.00385701) , 
2, -9.57692, 1, 0, 0.0510581,-0.000721961) , 
0, 2.22094, 1, 0, 0.637728,0.000129692) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00706884,0.00768766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0435441,-0.000585133) , 
0, -2.82941, 1, 0, 0.0240404,0.000189036) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.093352,-0.00308463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167229,-0.00256201) , 
0, -1.44282, 1, 0, 0.129941,-0.00112125) , 
0, -2.1804, 1, 0, 0.0720437,-0.000404901) , 
1, 3, 1, 0, 0.5,-5.67609e-05)    );
  // itree = 187
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702902,-0.00177061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202483,0.000942328) , 
0, -0.5027, 1, 0, 0.121996,-9.29542e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0164886,-0.00464392) , 
0, 2.3036, 1, 0, 0.0954895,-0.000251791) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545238,-0.00231587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0710246,0.00557127) , 
1, 3, 1, 0, 0.412368,-0.0010393) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926111,0.00742687) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99311,0.000530824) , 
2, 0.903631, 1, 0, 0.980624,0.000567391) , 
2, 0.772191, 1, 0, 0.793166,0.000181632) , 
2, 0.153846, 1, 0, 0.5,-4.93517e-07)    );
  // itree = 188
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906101,0.00551619) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885593,-0.000629175) , 
1, 2, 1, 0, 0.89352,-1.75478e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383759,-0.00135461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95062,0.00586261) , 
1, 2, 1, 0, 0.480655,-0.000206783) , 
0, 0.142832, 1, 0, 0.637728,0.00014887) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0708832,-0.00123032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17971,-0.00376957) , 
0, -1.77547, 1, 0, 0.123163,-0.00109177) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0060995,0.00928949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0200372,-5.64588e-05) , 
0, -2.88855, 1, 0, 0.0127523,0.00026373) , 
3, 3, 1, 0, 0.0720437,-0.000105371) , 
1, 3, 1, 0, 0.5,-5.808e-05)    );
  // itree = 189
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0115086,-0.0062262) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.157169,-0.00328799) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.207297,0.00113177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971717,-0.00308221) , 
2, 0.576923, 1, 0, 0.575637,0.000173438) , 
0, -2.09786, 1, 0, 0.546963,6.60326e-05) , 
0, -2.68866, 1, 0, 0.5,-2.58789e-07)    );
  // itree = 190
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0161649,-0.00373322) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0384503,0.00349376) , 
0, -1.92062, 1, 0, 0.0276082,0.000120596) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.1537,-0.00161275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.187848,0.00117187) , 
2, 0.112441, 1, 0, 0.161912,-0.00073342) , 
2, -0.627234, 1, 0, 0.0954895,-0.000311051) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0579981,0.0113385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468493,-0.000853044) , 
1, 1, 1, 0, 0.341784,-0.00128574) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875307,-0.00217602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991749,0.00251833) , 
2, 0.886103, 1, 0, 0.968695,-9.62292e-05) , 
2, 0.576926, 1, 0, 0.793166,0.000225024) , 
2, 0.153846, 1, 0, 0.5,-2.36672e-07)    );
  // itree = 191
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0372097,0.00330463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0173694,-0.00313986) , 
0, 1.91958, 1, 0, 0.0276082,9.61616e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.144628,-0.00232189) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.169584,-4.17336e-05) , 
2, 0.0474016, 1, 0, 0.161912,-0.000586793) , 
2, -0.627234, 1, 0, 0.0954895,-0.000249026) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.180026,-0.00398304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371965,0.000223497) , 
0, -1.10879, 1, 0, 0.301334,-0.000818622) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892646,0.00776875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967986,0.0010749) , 
0, -1.29613, 1, 0, 0.958694,0.000515227) , 
2, 0.479294, 1, 0, 0.793166,0.000179354) , 
2, 0.153846, 1, 0, 0.5,-6.52437e-07)    );
  // itree = 192
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530785,0.00016174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535054,0.000686314) , 
1, 2, 1, 0, 0.532911,-0.000138896) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907771,-0.00368231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990893,-0.00188839) , 
2, 0.853561, 1, 0, 0.980415,-0.000402704) , 
2, 0.576923, 1, 0, 0.883685,-0.000211696) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0321377,0.00594762) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00555621,-0.00758582) , 
0, 3.07165, 1, 0, 0.0252398,0.000802277) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.185284,-0.00112825) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0186173,0.00661043) , 
1, 3, 1, 0, 0.120488,0.000118026) , 
2, -0.69236, 1, 0, 0.0793766,0.000230978) , 
3, 2, 1, 0, 0.5,-5.84333e-05)    );
  // itree = 193
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887225,-0.000288661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903233,0.00418582) , 
0, -0.496587, 1, 0, 0.89352,0.000601715) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383759,-0.00130085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95062,0.00492038) , 
1, 2, 1, 0, 0.480655,-0.000206397) , 
0, 0.142832, 1, 0, 0.637728,0.000134067) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00393192,-0.00698916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0384802,0.00158341) , 
0, -3.04575, 1, 0, 0.0240404,0.000115835) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.093352,-0.0031784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167229,-0.00222914) , 
0, -1.44282, 1, 0, 0.129941,-0.00106512) , 
0, -2.1804, 1, 0, 0.0720437,-0.000419474) , 
1, 3, 1, 0, 0.5,-5.98393e-05)    );
  // itree = 194
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0594251,0.000266117) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300926,-0.00175449) , 
0, -0.739026, 1, 0, 0.129801,-0.000575678) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0925343,0.00416672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0171532,-0.00514643) , 
0, 2.18554, 1, 0, 0.041456,0.000159854) , 
0, 1.15154, 1, 0, 0.0954895,-0.000290009) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.373873,0.000318305) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.173009,-0.00349461) , 
0, 1.12849, 1, 0, 0.301334,-0.000663677) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82001,0.00366851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988795,0.00112035) , 
2, 0.859811, 1, 0, 0.958694,0.000503069) , 
2, 0.479294, 1, 0, 0.793166,0.000209274) , 
2, 0.153846, 1, 0, 0.5,-5.26155e-07)    );
  // itree = 195
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0255735,0.00285057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,-0.000952791) , 
1, 1, 1, 0, 0.253065,-3.05435e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931573,0.00347966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995348,0.003361) , 
2, 0.902374, 1, 0, 0.980632,0.000410105) , 
2, 0.576923, 1, 0, 0.637728,0.000124071) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019392,-0.00790342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.235084,-0.000196588) , 
2, 0.153846, 1, 0, 0.123163,-0.000877877) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0060995,0.00823164) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0200372,-0.000636135) , 
0, -2.88855, 1, 0, 0.0127523,0.000181061) , 
3, 3, 1, 0, 0.0720437,-0.000105716) , 
1, 3, 1, 0, 0.5,-5.83093e-05)    );
  // itree = 196
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530785,0.000367486) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535054,0.000665879) , 
1, 2, 1, 0, 0.532911,-0.000138074) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.907771,-0.00406889) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990893,-0.0021132) , 
2, 0.853561, 1, 0, 0.980415,-0.000445453) , 
2, 0.576923, 1, 0, 0.883685,-0.00022219) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0109755,-0.00091128) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0355852,0.00578838) , 
0, -2.68866, 1, 0, 0.0252398,0.000693455) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153348,0.000847691) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0575126,-0.00393368) , 
0, 1.0677, 1, 0, 0.120488,-0.000100243) , 
2, -0.69236, 1, 0, 0.0793766,0.000242335) , 
3, 2, 1, 0, 0.5,-5.99379e-05)    );
  // itree = 197
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.16717,-0.000763079) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0921192,-0.00417353) , 
0, 1.4406, 1, 0, 0.12923,-0.000919999) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0409732,0.00190185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00652051,-0.00796996) , 
0, 2.93588, 1, 0, 0.0251357,3.64298e-05) , 
0, 2.17838, 1, 0, 0.0726043,-0.000399715) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0734969,-0.00378056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397943,0.00160147) , 
0, -2.08982, 1, 0, 0.173889,-0.000389297) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643408,0.0028754) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869554,0.000197639) , 
0, -0.928608, 1, 0, 0.826283,0.000338405) , 
0, -1.562, 1, 0, 0.637494,0.000127823) , 
1, 1, 1, 0, 0.5,-5.97239e-05)    );
  // itree = 198
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202568,-0.00132574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0479838,0.00127775) , 
3, 3, 1, 0, 0.130083,-8.65952e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0551401,0.00309776) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0146167,-0.00321625) , 
0, 2.59901, 1, 0, 0.0293952,0.000140862) , 
0, 1.53556, 1, 0, 0.0954895,-0.000245927) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587509,0.00345854) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1091,-0.00281785) , 
3, 2, 1, 0, 0.341784,-0.00120774) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875307,-0.00212258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991749,0.00168673) , 
2, 0.886103, 1, 0, 0.968695,-0.000135496) , 
2, 0.576926, 1, 0, 0.793166,0.000177174) , 
2, 0.153846, 1, 0, 0.5,-6.14119e-07)    );
  // itree = 199
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.000807127) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,-0.00209758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,0.000927989) , 
0, 1.47527, 1, 0, 0.91048,-0.000382079) , 
0, -1.27985, 1, 0, 0.883685,-0.000251771) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.152477,-0.000369753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0794965,0.00489031) , 
0, 0.768366, 1, 0, 0.123678,0.00070988) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.018519,-0.00916335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.049976,0.00322747) , 
0, -1.15258, 1, 0, 0.0355686,-0.000155156) , 
3, 3, 1, 0, 0.0793766,-2.71985e-05) , 
3, 2, 1, 0, 0.5,-5.90648e-05)    );
  // itree = 200
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164508,-0.00306086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0593852,0.000544521) , 
0, 2.06196, 1, 0, 0.123601,-0.000817553) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,-0.000366835) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,0.00231211) , 
0, 2.86859, 1, 0, 0.0137948,7.22361e-05) , 
3, 3, 1, 0, 0.0726043,8.18889e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.178171,0.000719212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614713,-0.00175197) , 
0, 0.153386, 1, 0, 0.2523,-0.000165851) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.992696,0.0136599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967933,-0.00153196) , 
1, 2, 1, 0, 0.979781,0.000271555) , 
2, 0.576923, 1, 0, 0.637494,0.000129114) , 
1, 1, 1, 0, 0.5,-5.70878e-05)    );
  // itree = 201
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,6.47865e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.000472766) , 
0, 0.0166736, 1, 0, 0.532911,0.00030829) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969291,-0.00383395) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998049,0.016949) , 
2, 0.983729, 1, 0, 0.980415,-0.000361509) , 
2, 0.576923, 1, 0, 0.883685,-0.000216729) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172226,0.00371682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.00114732) , 
1, 1, 1, 0, 0.127787,-1.7575e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00415709,-0.00086363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0204795,0.00552265) , 
0, -3.01497, 1, 0, 0.015964,0.000738709) , 
1, 3, 1, 0, 0.0793766,-0.000115756) , 
3, 2, 1, 0, 0.5,-5.72574e-05)    );
  // itree = 202
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153243,0.000704748) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0839303,-0.00671905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0204405,0.000233096) , 
0, 2.30629, 1, 0, 0.0396723,-0.00068875) , 
0, 1.66686, 1, 0, 0.0726043,-0.00039935) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,-0.00079303) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992749,0.0117599) , 
2, 0.576923, 1, 0, 0.905792,0.000327885) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0240404,0.00113815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129941,-0.00217781) , 
0, -2.1804, 1, 0, 0.0720437,-0.000291883) , 
1, 3, 1, 0, 0.637494,-3.54488e-05) , 
1, 1, 1, 0, 0.5,-5.70541e-05)    );
  // itree = 203
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983177,-0.00170555) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994422,-0.0194858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982516,-0.00140641) , 
0, 0.543421, 1, 0, 0.988796,-0.000487432) , 
0, -0.530817, 1, 0, 0.986971,-0.00038535) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0982833,-0.000353297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.342765,0.00236136) , 
2, 0.170048, 1, 0, 0.157775,0.000296228) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.846852,-0.00414964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980597,0.00712459) , 
2, 0.886103, 1, 0, 0.925716,-0.000428207) , 
2, 0.576923, 1, 0, 0.319382,0.000143776) , 
3, 1, 1, 0, 0.5,-5.72997e-05)    );
  // itree = 204
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.000652715) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,-0.00183727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,0.000955405) , 
0, 1.47527, 1, 0, 0.91048,-0.000321309) , 
0, -1.27985, 1, 0, 0.883685,-0.000214168) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.152477,-0.00024785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0794965,0.00420685) , 
0, 0.768366, 1, 0, 0.123678,0.000643405) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0234526,-0.00673461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0467023,0.00296835) , 
0, -0.768557, 1, 0, 0.0355686,-0.000165597) , 
3, 3, 1, 0, 0.0793766,-2.67549e-05) , 
3, 2, 1, 0, 0.5,-5.72164e-05)    );
  // itree = 205
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00961181,0.000228208) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0214456,-0.00567381) , 
2, -9.60947, 1, 0, 0.016365,-0.000696186) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220806,0.000616845) , 
2, 0.153846, 1, 0, 0.0726043,-0.000401235) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0734969,-0.00287657) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397943,0.00148464) , 
0, -2.08982, 1, 0, 0.173889,-0.00025286) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643408,0.00276001) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869554,8.79345e-05) , 
0, -0.928608, 1, 0, 0.826283,0.000285559) , 
0, -1.562, 1, 0, 0.637494,0.000129752) , 
1, 1, 1, 0, 0.5,-5.57849e-05)    );
  // itree = 206
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206953,0.0012431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971439,-0.00304091) , 
2, 0.576923, 1, 0, 0.575265,0.000212224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.00447756) , 
0, 2.09682, 1, 0, 0.546317,6.3333e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.0049811) , 
0, 2.68762, 1, 0, 0.5,2.47031e-07)    );
  // itree = 207
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975594,-0.00478421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994462,-0.00118046) , 
0, -0.960511, 1, 0, 0.989849,-0.000198896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976525,-0.00423854) , 
0, 0.865652, 1, 0, 0.986971,-0.00027234) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.203258,0.000812415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934669,-0.0023265) , 
2, 0.576923, 1, 0, 0.392999,0.000217796) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0109773,0.000437221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.109842,-0.00140791) , 
2, -9.57692, 1, 0, 0.06357,-0.000303845) , 
0, 1.91958, 1, 0, 0.319382,0.000101225) , 
3, 1, 1, 0, 0.5,-5.54049e-05)    );
  // itree = 208
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0208576,-0.00458083) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152205,0.000322801) , 
1, 1, 1, 0, 0.121996,-9.21683e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0164886,-0.00423543) , 
0, 2.3036, 1, 0, 0.0954895,-0.000197463) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.180026,-0.00451602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371965,1.49221e-05) , 
0, -1.10879, 1, 0, 0.301334,-0.00105024) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82001,0.00416771) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988795,0.000904124) , 
2, 0.859811, 1, 0, 0.958694,0.000545132) , 
2, 0.479294, 1, 0, 0.793166,0.000143406) , 
2, 0.153846, 1, 0, 0.5,1.71759e-07)    );
  // itree = 209
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.154235,-0.00526652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637693,0.00383921) , 
0, -2.13488, 1, 0, 0.525513,0.000892811) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00674404,0.0118445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0415839,-0.00910841) , 
0, -2.88068, 1, 0, 0.0234526,-0.00111427) , 
3, 3, 1, 0, 0.361656,-2.06872e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849119,-0.00363129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57523,0.00117021) , 
0, 0.514178, 1, 0, 0.701399,-0.000374165) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0757347,0.00310484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0067162,0.00213958) , 
0, 2.99807, 1, 0, 0.0467023,0.000896854) , 
3, 3, 1, 0, 0.575127,-6.63384e-05) , 
0, -0.768557, 1, 0, 0.5,6.105e-08)    );
  // itree = 210
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.51971,0.00155084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849227,-0.0021648) , 
0, -0.793255, 1, 0, 0.680258,-5.07537e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00571621,0.00664877) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0716817,0.00350462) , 
0, -2.92517, 1, 0, 0.0415054,0.00100606) , 
3, 3, 1, 0, 0.544994,-2.76113e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700369,0.00133214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167357,-0.0041006) , 
0, 2.07829, 1, 0, 0.596622,0.000116884) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0508082,-0.00817875) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00968449,0.00752631) , 
0, 2.86571, 1, 0, 0.0294336,-0.00115013) , 
3, 3, 1, 0, 0.438968,-7.80666e-05) , 
0, 0.383504, 1, 0, 0.5,-2.43827e-07)    );
  // itree = 211
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,-0.000143084) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.000532116) , 
0, 0.0166736, 1, 0, 0.532911,0.000223932) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969291,-0.00301365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998049,0.0147136) , 
2, 0.983729, 1, 0, 0.980415,-0.000275512) , 
2, 0.576923, 1, 0, 0.883685,-0.000167555) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0321377,0.00540178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00555621,-0.00669429) , 
0, 3.07165, 1, 0, 0.0252398,0.000732723) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0197912,0.0065734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.185074,-0.00124153) , 
1, 1, 1, 0, 0.120488,0.000143893) , 
2, -0.69236, 1, 0, 0.0793766,0.000182676) , 
3, 2, 1, 0, 0.5,-5.95531e-05)    );
  // itree = 212
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995687,-0.00812511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.774319,0.0031602) , 
3, 1, 1, 0, 0.884743,-4.87116e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.168518,-0.00203845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.720205,0.00102413) , 
0, -1.47755, 1, 0, 0.437853,-0.000104702) , 
1, 2, 1, 0, 0.544994,-2.82701e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.683358,0.000926317) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.205408,-0.00231282) , 
0, 1.26974, 1, 0, 0.353289,-0.000430383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.934779,0.00280772) , 
1, 2, 1, 0, 0.438968,-8.02831e-05) , 
0, 0.383504, 1, 0, 0.5,-4.9116e-07)    );
  // itree = 213
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0115086,-0.00513651) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.225793,0.00213373) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.700063,0.000188015) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0680534,-0.00268333) , 
0, 2.11729, 1, 0, 0.585836,-5.31331e-05) , 
0, -1.80246, 1, 0, 0.546963,5.38555e-05) , 
0, -2.68866, 1, 0, 0.5,-3.7305e-07)    );
  // itree = 214
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.109289,2.40814e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.21319,-0.0020925) , 
0, 0.280106, 1, 0, 0.130083,-0.000403192) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0551401,0.00306111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0146167,-0.00217572) , 
0, 2.59901, 1, 0, 0.0293952,0.000228025) , 
0, 1.53556, 1, 0, 0.0954895,-0.000186326) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545238,-0.00242354) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0710246,0.00521721) , 
1, 3, 1, 0, 0.412368,-0.000899247) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.911306,0.0080134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991749,0.000896569) , 
2, 0.88611, 1, 0, 0.980624,0.000550862) , 
2, 0.772191, 1, 0, 0.793166,0.000134376) , 
2, 0.153846, 1, 0, 0.5,-3.83673e-07)    );
  // itree = 215
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0255735,0.00273212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,-0.000906281) , 
1, 1, 1, 0, 0.253065,-2.80115e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931573,0.00362964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995348,0.00158485) , 
2, 0.902374, 1, 0, 0.980632,0.000363877) , 
2, 0.576923, 1, 0, 0.637728,0.000106014) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00393192,-0.00645263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0384802,0.00270389) , 
0, -3.04575, 1, 0, 0.0240404,0.00029213) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.093352,-0.00347183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167229,-0.00204397) , 
0, -1.44282, 1, 0, 0.129941,-0.00108138) , 
0, -2.1804, 1, 0, 0.0720437,-0.000330464) , 
1, 3, 1, 0, 0.5,-5.91138e-05)    );
  // itree = 216
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,-0.000113399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.000857513) , 
0, 0.0166736, 1, 0, 0.532911,0.000427423) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969291,-0.00339433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998049,0.0120119) , 
2, 0.983729, 1, 0, 0.980415,-0.00035182) , 
2, 0.576923, 1, 0, 0.883685,-0.000183384) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0145157,0.000818789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0354728,0.00634274) , 
1, 1, 1, 0, 0.0252398,-0.000270314) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115173,0.000697472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137195,-0.0038896) , 
2, 0.192377, 1, 0, 0.120488,-0.000176921) , 
2, -0.69236, 1, 0, 0.0793766,0.000200454) , 
3, 2, 1, 0, 0.5,-5.7642e-05)    );
  // itree = 217
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00428178,-0.00904157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0127198,0.00313145) , 
0, -3.07268, 1, 0, 0.00975338,9.1525e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.183624,9.0023e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0693734,-0.0028345) , 
3, 3, 1, 0, 0.143854,-0.000115385) , 
2, -9.60947, 1, 0, 0.0954895,-0.00022849) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.564396,-0.00176034) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0743854,0.00432619) , 
1, 3, 1, 0, 0.431141,-0.000947139) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933639,0.00893466) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993011,-0.00138064) , 
2, 0.902374, 1, 0, 0.983216,0.000476853) , 
2, 0.804735, 1, 0, 0.793166,0.000165299) , 
2, 0.153846, 1, 0, 0.5,-1.72197e-07)    );
  // itree = 218
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887225,-0.000645519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903233,0.00422389) , 
0, -0.496587, 1, 0, 0.89352,0.000490293) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383759,-0.000997047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95062,0.00411271) , 
1, 2, 1, 0, 0.480655,-0.000151883) , 
0, 0.142832, 1, 0, 0.637728,0.000125667) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0708832,-0.00111808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17971,-0.00325496) , 
0, -1.77547, 1, 0, 0.123163,-0.000957599) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0060995,0.00692945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0200372,0.000666504) , 
0, -2.88855, 1, 0, 0.0127523,0.000266584) , 
3, 3, 1, 0, 0.0720437,-0.000104525) , 
1, 3, 1, 0, 0.5,-5.69828e-05)    );
  // itree = 219
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202568,-0.0012674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0479838,0.00141843) , 
3, 3, 1, 0, 0.130083,-8.6395e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0551401,0.00239613) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0146167,-0.0025131) , 
0, 2.59901, 1, 0, 0.0293952,0.000107831) , 
0, 1.53556, 1, 0, 0.0954895,-0.000226273) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587509,0.00313136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1091,-0.00215533) , 
3, 2, 1, 0, 0.341784,-0.00123156) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875307,-0.00191986) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991749,0.000846699) , 
2, 0.886103, 1, 0, 0.968695,-0.000157659) , 
2, 0.576926, 1, 0, 0.793166,0.00016392) , 
2, 0.153846, 1, 0, 0.5,-3.99114e-08)    );
  // itree = 220
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530785,0.000573301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535054,-0.000403464) , 
1, 2, 1, 0, 0.532911,-0.000133824) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969291,-0.00295403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998049,0.0100691) , 
2, 0.983729, 1, 0, 0.980415,-0.000312089) , 
2, 0.576923, 1, 0, 0.883685,-0.000222413) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.152477,-0.000203216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0794965,0.00370266) , 
0, 0.768366, 1, 0, 0.123678,0.000572858) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.018519,-0.00754547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.049976,0.0029024) , 
0, -1.15258, 1, 0, 0.0355686,-8.1727e-05) , 
3, 3, 1, 0, 0.0793766,-2.71801e-05) , 
3, 2, 1, 0, 0.5,-5.87056e-05)    );
  // itree = 221
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.000373714) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,-0.00181174) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,0.0016944) , 
0, 1.47527, 1, 0, 0.91048,-0.000248754) , 
0, -1.27985, 1, 0, 0.883685,-0.000177694) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172226,0.00311325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.00107379) , 
1, 1, 1, 0, 0.127787,-1.57449e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00786959,0.000938387) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0208596,0.0055247) , 
0, -2.76774, 1, 0, 0.015964,0.000682692) , 
1, 3, 1, 0, 0.0793766,-0.000115565) , 
3, 2, 1, 0, 0.5,-5.7073e-05)    );
  // itree = 222
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0208764,-0.00621909) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0135388,-0.00124712) , 
3, 3, 1, 0, 0.016365,2.14234e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509043,0.000631932) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0151935,-0.00293847) , 
1, 3, 1, 0, 0.152763,-0.0001105) , 
1, 1, 1, 0, 0.0954895,-0.000136295) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.180026,-0.00394093) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371965,0.000528034) , 
0, -1.10879, 1, 0, 0.301334,-0.000656415) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82001,0.00355713) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988795,0.000257497) , 
2, 0.859811, 1, 0, 0.958694,0.000431041) , 
2, 0.479294, 1, 0, 0.793166,0.000157212) , 
2, 0.153846, 1, 0, 0.5,-2.90961e-07)    );
  // itree = 223
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.16443,-0.00483089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0129068,0.00298562) , 
3, 3, 1, 0, 0.0721077,-1.69496e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.319996,0.00204399) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977119,-0.00425896) , 
2, 0.576923, 1, 0, 0.711962,0.000442976) , 
0, -2.09789, 1, 0, 0.544994,0.000174174) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.827144,-0.00334167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.495808,0.00140412) , 
0, 0.89194, 1, 0, 0.596622,6.66359e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0508082,-0.0071705) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00968449,0.00601421) , 
0, 2.86571, 1, 0, 0.0294336,-0.00102613) , 
3, 3, 1, 0, 0.438968,-8.44039e-05) , 
0, 0.383504, 1, 0, 0.5,-3.61002e-07)    );
  // itree = 224
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0101745,-0.00635338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0524688,0.00314662) , 
0, -2.73299, 1, 0, 0.0282083,0.000130264) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.203343,-0.00103358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0488364,0.000621517) , 
3, 3, 1, 0, 0.130779,-0.000289134) , 
0, -1.5366, 1, 0, 0.0954895,-0.000219565) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.373873,0.000336539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.173009,-0.00327178) , 
0, 1.12849, 1, 0, 0.301334,-0.000601483) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892646,0.00683329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967986,0.000665932) , 
0, -1.29613, 1, 0, 0.958694,0.000414142) , 
2, 0.479294, 1, 0, 0.793166,0.000158401) , 
2, 0.153846, 1, 0, 0.5,-4.21821e-07)    );
  // itree = 225
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,-0.000243865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.00064591) , 
0, 0.0166736, 1, 0, 0.532911,0.000231844) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95665,-0.00247444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996604,0.000650503) , 
2, 0.951187, 1, 0, 0.980415,-0.000290629) , 
2, 0.576923, 1, 0, 0.883685,-0.000177694) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00496318,-0.000490945) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0285063,0.00558456) , 
0, -2.98409, 1, 0, 0.0189004,0.000754804) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0348197,0.00493328) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138075,-0.00075044) , 
2, -0.69236, 1, 0, 0.1054,-4.73241e-05) , 
0, -1.92062, 1, 0, 0.0793766,0.000193994) , 
3, 2, 1, 0, 0.5,-5.56673e-05)    );
  // itree = 226
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206953,0.000961736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971439,-0.00258185) , 
2, 0.576923, 1, 0, 0.575265,0.000147268) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.00254023) , 
0, 2.09682, 1, 0, 0.546317,6.14904e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00489225) , 
0, 2.68762, 1, 0, 0.5,-4.35742e-07)    );
  // itree = 227
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0120213,0.0032058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00560257,-0.00784765) , 
0, 3.07165, 1, 0, 0.00975338,6.13463e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.183624,-1.17523e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0693734,-0.00284954) , 
3, 3, 1, 0, 0.143854,-0.00012466) , 
2, -9.60947, 1, 0, 0.0954895,-0.000276272) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.180026,-0.00344324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371965,0.000449444) , 
0, -1.10879, 1, 0, 0.301334,-0.000578927) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967336,0.000932349) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899814,0.00706049) , 
0, 1.26798, 1, 0, 0.958694,0.000461592) , 
2, 0.479294, 1, 0, 0.793166,0.000199582) , 
2, 0.153846, 1, 0, 0.5,-3.72894e-07)    );
  // itree = 228
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202604,-0.00174456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112265,0.00237246) , 
0, 0.768366, 1, 0, 0.169291,-0.000472835) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0222374,-0.00626601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0449109,0.00366593) , 
0, -0.768557, 1, 0, 0.0340443,-1.17593e-05) , 
3, 3, 1, 0, 0.0954895,-0.000134524) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.545238,-0.00177028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0710246,0.00432483) , 
1, 3, 1, 0, 0.412368,-0.000869358) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926111,0.00638785) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99311,-0.00010693) , 
2, 0.903631, 1, 0, 0.980624,0.000457368) , 
2, 0.772191, 1, 0, 0.793166,0.00015976) , 
2, 0.153846, 1, 0, 0.5,-3.34983e-07)    );
  // itree = 229
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,-0.000100779) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.000497148) , 
0, 0.0166736, 1, 0, 0.532911,0.000227444) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942041,-0.00241575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994935,-0.00133042) , 
2, 0.918645, 1, 0, 0.980415,-0.000306638) , 
2, 0.576923, 1, 0, 0.883685,-0.000191194) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0268688,-0.000842734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.237121,0.00191692) , 
0, -1.47759, 1, 0, 0.0939055,0.000533756) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.134051,-0.00195209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.019223,0.00356822) , 
0, 1.9787, 1, 0, 0.062963,-0.000158305) , 
0, 0.383504, 1, 0, 0.0793766,0.000208802) , 
3, 2, 1, 0, 0.5,-5.51617e-05)    );
  // itree = 230
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206953,0.000990957) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971439,-0.0026459) , 
2, 0.576923, 1, 0, 0.575265,0.000152566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.0026723) , 
0, 2.09682, 1, 0, 0.546317,6.24969e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00496089) , 
0, 2.68762, 1, 0, 0.5,-3.41781e-07)    );
  // itree = 231
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0101745,-0.00526842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0524688,0.00262675) , 
0, -2.73299, 1, 0, 0.0282083,0.000115019) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.203343,-0.00110738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0488364,0.000348902) , 
3, 3, 1, 0, 0.130779,-0.000271023) , 
0, -1.5366, 1, 0, 0.0954895,-0.000274796) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.564396,-0.00134629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0743854,0.00316372) , 
1, 3, 1, 0, 0.431141,-0.000927942) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933639,0.00792441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993011,7.51721e-05) , 
2, 0.902374, 1, 0, 0.983216,0.000483771) , 
2, 0.804735, 1, 0, 0.793166,0.000198642) , 
2, 0.153846, 1, 0, 0.5,-2.98574e-07)    );
  // itree = 232
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894191,0.000257617) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.89081,0.00469131) , 
0, -0.176879, 1, 0, 0.89352,0.000511957) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383759,-0.000938675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95062,0.00362906) , 
1, 2, 1, 0, 0.480655,-9.15417e-05) , 
0, 0.142832, 1, 0, 0.637728,0.000128608) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0708832,-0.00164133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17971,-0.00323928) , 
0, -1.77547, 1, 0, 0.123163,-0.00104855) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0060995,0.00929398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0200372,0.000893986) , 
0, -2.88855, 1, 0, 0.0127523,0.000351504) , 
3, 3, 1, 0, 0.0720437,-0.000101306) , 
1, 3, 1, 0, 0.5,-5.39825e-05)    );
  // itree = 233
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0120213,0.00297656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00560257,-0.00663025) , 
0, 3.07165, 1, 0, 0.00975338,7.30339e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.183624,-4.20366e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0693734,-0.00266557) , 
3, 3, 1, 0, 0.143854,-8.88479e-05) , 
2, -9.60947, 1, 0, 0.0954895,-0.000262817) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0579981,0.00890436) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468493,-0.000646737) , 
1, 1, 1, 0, 0.341784,-0.00120607) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875307,-0.0014674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991749,0.00163197) , 
2, 0.886103, 1, 0, 0.968695,-6.89549e-05) , 
2, 0.576926, 1, 0, 0.793166,0.000190178) , 
2, 0.153846, 1, 0, 0.5,-1.72036e-07)    );
  // itree = 234
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.16717,-0.000489683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0921192,-0.00423666) , 
0, 1.4406, 1, 0, 0.12923,-0.000876118) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0409732,0.00227758) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00652051,-0.00752506) , 
0, 2.93588, 1, 0, 0.0251357,0.00010963) , 
0, 2.17838, 1, 0, 0.0726043,-0.000339885) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,-0.000715031) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992749,0.010794) , 
2, 0.576923, 1, 0, 0.905792,0.000301028) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123163,-0.0019864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0127523,0.00244704) , 
3, 3, 1, 0, 0.0720437,-0.000104324) , 
1, 3, 1, 0, 0.637494,-3.53864e-05) , 
1, 1, 1, 0, 0.5,-5.6583e-05)    );
  // itree = 235
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530785,0.000472518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535054,-2.34403e-05) , 
1, 2, 1, 0, 0.532911,-0.000131243) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942041,-0.00258625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994935,-0.00143296) , 
2, 0.918645, 1, 0, 0.980415,-0.000326695) , 
2, 0.576923, 1, 0, 0.883685,-0.000199993) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0145157,0.000562712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0354728,0.00529665) , 
1, 1, 1, 0, 0.0252398,-0.000267929) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153348,0.000926497) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0575126,-0.0038592) , 
0, 1.0677, 1, 0, 0.120488,-5.07243e-05) , 
2, -0.69236, 1, 0, 0.0793766,0.000219501) , 
3, 2, 1, 0, 0.5,-5.70636e-05)    );
  // itree = 236
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702902,-0.00144821) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202483,0.000739672) , 
0, -0.5027, 1, 0, 0.121996,-8.69716e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0164886,-0.00376534) , 
0, 2.3036, 1, 0, 0.0954895,-0.000211906) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587509,0.00257997) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.1091,-0.00172939) , 
3, 2, 1, 0, 0.341784,-0.00117263) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875307,-0.0015304) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991749,0.000988931) , 
2, 0.886103, 1, 0, 0.968695,-0.000109139) , 
2, 0.576926, 1, 0, 0.793166,0.000153599) , 
2, 0.153846, 1, 0, 0.5,1.24995e-08)    );
  // itree = 237
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.000542119) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,-0.00179094) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,0.000885411) , 
0, 1.47527, 1, 0, 0.91048,-0.000317658) , 
0, -1.27985, 1, 0, 0.883685,-0.000221014) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0215799,0.00443416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00572656,-0.00223202) , 
0, 3.02477, 1, 0, 0.0172226,0.000604734) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.1099,0.000911504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19551,-0.00321288) , 
2, 0.15379, 1, 0, 0.126813,-3.4417e-05) , 
1, 1, 1, 0, 0.0793766,-0.000117526) , 
3, 2, 1, 0, 0.5,-5.79566e-05)    );
  // itree = 238
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00428178,-0.00806919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0127198,0.00245258) , 
0, -3.07268, 1, 0, 0.00975338,5.80437e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.183624,-1.35082e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0693734,-0.0025276) , 
3, 3, 1, 0, 0.143854,-0.000108501) , 
2, -9.60947, 1, 0, 0.0954895,-0.000244054) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.470367,-0.000381468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0539833,0.00784924) , 
1, 3, 1, 0, 0.341784,-0.00119195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954788,0.00227831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97451,-0.0021857) , 
0, -0.631314, 1, 0, 0.968695,-6.70858e-05) , 
2, 0.576926, 1, 0, 0.793166,0.000176683) , 
2, 0.153846, 1, 0, 0.5,-1.1232e-07)    );
  // itree = 239
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123601,-0.00147405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0137948,0.00121896) , 
3, 3, 1, 0, 0.0726043,8.15156e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,-0.000552953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992749,0.00969433) , 
2, 0.576923, 1, 0, 0.905792,0.000303763) , 
1, 1, 1, 0, 0.637728,-1.16138e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0708832,-0.00172951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17971,-0.00250022) , 
0, -1.77547, 1, 0, 0.123163,-0.000888997) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0060995,0.0060521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0200372,0.000192381) , 
0, -2.88855, 1, 0, 0.0127523,0.000198309) , 
3, 3, 1, 0, 0.0720437,-0.000104042) , 
1, 3, 1, 0, 0.5,-5.62675e-05)    );
  // itree = 240
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530785,0.000381536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535054,-0.000301858) , 
1, 2, 1, 0, 0.532911,-0.00013025) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95665,-0.0025517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996604,0.000188675) , 
2, 0.951187, 1, 0, 0.980415,-0.000306672) , 
2, 0.576923, 1, 0, 0.883685,-0.000229659) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0862887,0.0033992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.149755,-0.000372066) , 
0, -0.694025, 1, 0, 0.123678,0.00050433) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.018519,-0.00669357) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.049976,0.00300517) , 
0, -1.15258, 1, 0, 0.0355686,2.75617e-06) , 
3, 3, 1, 0, 0.0793766,-2.69801e-05) , 
3, 2, 1, 0, 0.5,-5.75149e-05)    );
  // itree = 241
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989849,-0.0032065) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976525,-0.00491247) , 
0, 0.865652, 1, 0, 0.986971,-0.000303733) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.521417,0.000608087) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956412,-0.00204155) , 
2, 0.576923, 1, 0, 0.772975,-5.49496e-05) , 
3, 1, 1, 0, 0.883685,-3.18897e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172226,0.00286703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.000811082) , 
1, 1, 1, 0, 0.127787,-1.29623e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00415709,-0.000801435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0204795,0.00412038) , 
0, -3.01497, 1, 0, 0.015964,0.000556295) , 
1, 3, 1, 0, 0.0793766,-0.000113777) , 
3, 2, 1, 0, 0.5,-5.61382e-05)    );
  // itree = 242
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00961181,-0.000585433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0214456,-0.00441288) , 
2, -9.60947, 1, 0, 0.016365,-0.000566167) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509043,0.000513726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0151935,-0.00271164) , 
1, 3, 1, 0, 0.152763,-0.00010918) , 
1, 1, 1, 0, 0.0954895,-0.000133163) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.372745,-0.00206672) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.410172,0.0022976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973875,-0.00136804) , 
2, 0.576926, 1, 0, 0.839297,0.000303573) , 
0, -1.77998, 1, 0, 0.793166,0.000163931) , 
2, 0.153846, 1, 0, 0.5,-9.75251e-08)    );
  // itree = 243
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206953,0.000833989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971439,-0.00208633) , 
2, 0.576923, 1, 0, 0.575265,0.000139149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.00259409) , 
0, 2.09682, 1, 0, 0.546317,5.21726e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00416341) , 
0, 2.68762, 1, 0, 0.5,-1.77119e-07)    );
  // itree = 244
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202604,-0.00187222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112265,0.00253251) , 
0, 0.768366, 1, 0, 0.169291,-0.000511355) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0441967,0.00374365) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0230638,-0.00557381) , 
0, 0.767524, 1, 0, 0.0340443,1.64569e-05) , 
3, 3, 1, 0, 0.0954895,-0.000132208) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.180026,-0.00358009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371965,0.000133868) , 
0, -1.10879, 1, 0, 0.301334,-0.000777878) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82001,0.00348609) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988795,0.00108498) , 
2, 0.859811, 1, 0, 0.958694,0.00047775) , 
2, 0.479294, 1, 0, 0.793166,0.000161574) , 
2, 0.153846, 1, 0, 0.5,-1.67282e-07)    );
  // itree = 245
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.000640189) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,-0.00153336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,0.000924786) , 
0, 1.47527, 1, 0, 0.91048,-0.000257052) , 
0, -1.27985, 1, 0, 0.883685,-0.000160423) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.248368,-0.000730943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.015964,0.0030847) , 
1, 3, 1, 0, 0.104825,-8.25423e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0288032,0.00501086) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00676143,-0.000830789) , 
0, 2.98304, 1, 0, 0.019735,0.000688339) , 
0, 1.91958, 1, 0, 0.0793766,0.000175299) , 
3, 2, 1, 0, 0.5,-5.63117e-05)    );
  // itree = 246
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.906101,0.00348793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.885593,-0.000185368) , 
1, 2, 1, 0, 0.89352,-1.64573e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383759,-0.00079627) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95062,0.00298021) , 
1, 2, 1, 0, 0.480655,-9.38757e-05) , 
0, 0.142832, 1, 0, 0.637728,0.000106308) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00706884,0.00449753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0435441,-0.000939082) , 
0, -2.82941, 1, 0, 0.0240404,3.48017e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.093352,-0.00325226) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167229,-0.000810934) , 
0, -1.44282, 1, 0, 0.129941,-0.00077375) , 
0, -2.1804, 1, 0, 0.0720437,-0.000331704) , 
1, 3, 1, 0, 0.5,-5.69897e-05)    );
  // itree = 247
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.263241,0.000379526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0168501,-0.00432474) , 
0, 2.22094, 1, 0, 0.153279,-5.64123e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0120443,0.00058257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0212933,-0.00662579) , 
0, -2.02606, 1, 0, 0.0151935,-0.000444282) , 
1, 3, 1, 0, 0.0954895,-0.00013803) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0661472,0.00353483) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504851,-0.00172261) , 
1, 1, 1, 0, 0.375705,-0.00122968) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881692,0.00443981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99061,0.00174065) , 
2, 0.87484, 1, 0, 0.974718,0.000451669) , 
2, 0.674559, 1, 0, 0.793166,0.000158075) , 
2, 0.153846, 1, 0, 0.5,-2.62388e-07)    );
  // itree = 248
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0115086,-0.00548228) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.269197,0.000937313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973387,-0.00188677) , 
2, 0.576923, 1, 0, 0.657243,0.000203973) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.272926,-0.00238601) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0220662,0.000186365) , 
0, 2.49225, 1, 0, 0.13573,-0.000486928) , 
0, 1.74235, 1, 0, 0.546963,5.78734e-05) , 
0, -2.68866, 1, 0, 0.5,-3.40154e-07)    );
  // itree = 249
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202568,-0.0011751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0479838,0.00102667) , 
3, 3, 1, 0, 0.130083,-8.51745e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0551401,0.00205197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0146167,-0.00131225) , 
0, 2.59901, 1, 0, 0.0293952,0.000166783) , 
0, 1.53556, 1, 0, 0.0954895,-0.000213691) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.233879,0.00135556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649289,-0.00291881) , 
2, 0.320322, 1, 0, 0.412368,-0.000421304) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.926111,0.00539946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99311,0.00110812) , 
2, 0.903631, 1, 0, 0.980624,0.000437699) , 
2, 0.772191, 1, 0, 0.793166,0.000154328) , 
2, 0.153846, 1, 0, 0.5,-3.14925e-07)    );
  // itree = 250
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0115086,-0.00452657) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.269197,0.000838263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973387,-0.00185318) , 
2, 0.576923, 1, 0, 0.657243,0.0001697) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.272926,-0.00206744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0220662,0.00030533) , 
0, 2.49225, 1, 0, 0.13573,-0.00040821) , 
0, 1.74235, 1, 0, 0.546963,4.74934e-05) , 
0, -2.68866, 1, 0, 0.5,-1.7477e-07)    );
  // itree = 251
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0601583,0.000213403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.267356,-0.0011599) , 
0, -0.724253, 1, 0, 0.130083,-0.000398336) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0551401,0.00183139) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0146167,-0.00111304) , 
0, 2.59901, 1, 0, 0.0293952,0.000154341) , 
0, 1.53556, 1, 0, 0.0954895,-0.000208453) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.180026,-0.0028489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.371965,0.000117646) , 
0, -1.10879, 1, 0, 0.301334,-0.000612035) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967336,0.000673968) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899814,0.00669093) , 
0, 1.26798, 1, 0, 0.958694,0.000407525) , 
2, 0.479294, 1, 0, 0.793166,0.000150792) , 
2, 0.153846, 1, 0, 0.5,-1.63796e-07)    );
  // itree = 252
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.154235,-0.0041666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637693,0.00332315) , 
0, -2.13488, 1, 0, 0.525513,0.000810902) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00674404,0.00759236) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0415839,-0.00772073) , 
0, -2.88068, 1, 0, 0.0234526,-0.0010036) , 
3, 3, 1, 0, 0.361656,-2.09068e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849119,-0.00292737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57523,0.000721587) , 
0, 0.514178, 1, 0, 0.701399,-0.000356386) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0757347,0.00269363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0067162,0.0057025) , 
0, 2.99807, 1, 0, 0.0467023,0.000874873) , 
3, 3, 1, 0, 0.575127,-7.40174e-05) , 
0, -0.768557, 1, 0, 0.5,-9.35099e-08)    );
  // itree = 253
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00427016,-0.00737602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0348714,-0.00287776) , 
0, -3.08413, 1, 0, 0.0197558,-0.000539509) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.274868,0.000955192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.972625,-0.000760199) , 
2, 0.576923, 1, 0, 0.662437,0.000294442) , 
0, -2.51144, 1, 0, 0.544994,0.000142046) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.265601,0.000466383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971987,-0.00793197) , 
2, 0.576923, 1, 0, 0.656535,-0.000462789) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.205328,0.00253581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0180837,-0.00228101) , 
0, 2.55812, 1, 0, 0.0919531,0.000236442) , 
0, 1.97867, 1, 0, 0.438968,-0.000193334) , 
0, 0.383504, 1, 0, 0.5,-2.78726e-07)    );
  // itree = 254
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00427016,-0.0059952) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0348714,-0.00231333) , 
0, -3.08413, 1, 0, 0.0197558,-0.000431998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.233857,0.00360034) , 
0, -2.51145, 1, 0, 0.102678,0.000363817) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.131939,-0.000862811) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425922,0.00256311) , 
2, 0.170076, 1, 0, 0.211346,0.000170609) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95924,-0.00825797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975422,-0.000751798) , 
0, -1.01969, 1, 0, 0.972941,-0.000334759) , 
2, 0.576923, 1, 0, 0.582353,-7.55782e-05) , 
0, -1.92062, 1, 0, 0.5,-1.40997e-07)    );
  // itree = 255
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.783369,0.000837265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951061,-0.000850001) , 
0, -1.01809, 1, 0, 0.910791,-5.03664e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.00125694) , 
0, 1.3132, 1, 0, 0.883685,-0.000156398) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00428932,-0.00236738) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.032536,0.00461615) , 
0, -3.07268, 1, 0, 0.0252398,0.000700624) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115173,0.000539781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137195,-0.00367723) , 
2, 0.192377, 1, 0, 0.120488,-0.000230659) , 
2, -0.69236, 1, 0, 0.0793766,0.000171303) , 
3, 2, 1, 0, 0.5,-5.44428e-05)    );
  // itree = 256
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00428178,-0.00443088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0127198,0.00262058) , 
0, -3.07268, 1, 0, 0.00975338,0.000130997) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.183624,6.95416e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0693734,-0.00259106) , 
3, 3, 1, 0, 0.143854,-6.70658e-05) , 
2, -9.60947, 1, 0, 0.0954895,-0.000194117) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.225445,0.000701077) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.474544,-0.00377746) , 
2, 0.291535, 1, 0, 0.316117,-0.000789836) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903549,0.00738178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970732,0.00109583) , 
0, -1.29613, 1, 0, 0.962561,0.0004707) , 
2, 0.511838, 1, 0, 0.793166,0.000140386) , 
2, 0.153846, 1, 0, 0.5,-1.73164e-07)    );
  // itree = 257
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68794,-0.000875751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.946355,-9.66208e-06) , 
0, -1.44195, 1, 0, 0.910791,-8.31072e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.000948123) , 
0, 1.3132, 1, 0, 0.883685,-0.000156656) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00496318,0.000898614) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0285063,0.0051425) , 
0, -2.98409, 1, 0, 0.0189004,0.000724218) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172226,0.00286512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248727,-0.000788415) , 
1, 1, 1, 0, 0.1054,-0.00023128) , 
0, -1.92062, 1, 0, 0.0793766,0.000171496) , 
3, 2, 1, 0, 0.5,-5.28944e-05)    );
  // itree = 258
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153243,0.000629758) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0839303,-0.00597211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0204405,0.00103369) , 
0, 2.30629, 1, 0, 0.0396723,-0.000518528) , 
0, 1.66686, 1, 0, 0.0726043,-0.000286694) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00843268,0.00276823) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.260497,-0.00129559) , 
2, -9.57692, 1, 0, 0.173889,-0.000304231) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643408,0.00180733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869554,0.000232744) , 
0, -0.928608, 1, 0, 0.826283,0.000253255) , 
0, -1.562, 1, 0, 0.637494,9.19304e-05) , 
1, 1, 1, 0, 0.5,-5.30938e-05)    );
  // itree = 259
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702902,-0.00130048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202483,0.000687633) , 
0, -0.5027, 1, 0, 0.121996,-6.86919e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0164886,-0.00379958) , 
0, 2.3036, 1, 0, 0.0954895,-0.000199782) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.373873,0.000103014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.173009,-0.00281891) , 
0, 1.12849, 1, 0, 0.301334,-0.000615911) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.967336,0.00071379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899814,0.00641889) , 
0, 1.26798, 1, 0, 0.958694,0.000400197) , 
2, 0.479294, 1, 0, 0.793166,0.000144334) , 
2, 0.153846, 1, 0, 0.5,-2.64538e-07)    );
  // itree = 260
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.000370727) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,-0.00125153) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,0.000796474) , 
0, 1.47527, 1, 0, 0.91048,-0.000206657) , 
0, -1.27985, 1, 0, 0.883685,-0.000142256) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172226,0.00263883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.000889002) , 
1, 1, 1, 0, 0.127787,-7.84767e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0125447,0.00252379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0247093,0.00512839) , 
0, -1.77883, 1, 0, 0.015964,0.000539795) , 
1, 3, 1, 0, 0.0793766,-0.000108294) , 
3, 2, 1, 0, 0.5,-5.3429e-05)    );
  // itree = 261
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164508,-0.00271329) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0593852,0.00124184) , 
0, 2.06196, 1, 0, 0.123601,-0.00064139) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,0.000617246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,0.000580825) , 
0, 2.86859, 1, 0, 0.0137948,8.11652e-05) , 
3, 3, 1, 0, 0.0726043,8.03468e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.367312,0.000257637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835604,-0.00171929) , 
0, -0.743894, 1, 0, 0.474491,-9.10897e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898854,0.00235812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.88965,3.34768e-05) , 
0, 0.443684, 1, 0, 0.893169,0.00039459) , 
0, -0.189692, 1, 0, 0.637494,9.7999e-05) , 
1, 1, 1, 0, 0.5,-5.39677e-05)    );
  // itree = 262
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0208764,-0.00491481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0135388,-0.000800499) , 
3, 3, 1, 0, 0.016365,2.20763e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509043,0.0004457) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0151935,-0.00227135) , 
1, 3, 1, 0, 0.152763,-0.000107226) , 
1, 1, 1, 0, 0.0954895,-0.000128573) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0661472,0.00337884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504851,-0.00156203) , 
1, 1, 1, 0, 0.375705,-0.00116448) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881692,0.00363858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99061,0.00155712) , 
2, 0.87484, 1, 0, 0.974718,0.000377852) , 
2, 0.674559, 1, 0, 0.793166,0.000129108) , 
2, 0.153846, 1, 0, 0.5,-2.36882e-07)    );
  // itree = 263
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153243,0.000629449) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0839303,-0.0056159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0204405,0.000716205) , 
0, 2.30629, 1, 0, 0.0396723,-0.000514308) , 
0, 1.66686, 1, 0, 0.0726043,-0.000283859) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0734969,-0.00195233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397943,0.000516877) , 
0, -2.08982, 1, 0, 0.173889,-0.000247022) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643408,0.00153256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869554,0.000233916) , 
0, -0.928608, 1, 0, 0.826283,0.0002286) , 
0, -1.562, 1, 0, 0.637494,9.09653e-05) , 
1, 1, 1, 0, 0.5,-5.35355e-05)    );
  // itree = 264
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975594,-0.00490197) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994462,-0.000184662) , 
0, -0.960511, 1, 0, 0.989849,-0.000167096) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976525,-0.0041673) , 
0, 0.865652, 1, 0, 0.986971,-0.000244977) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0162903,-0.00220355) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150904,0.000176393) , 
1, 1, 1, 0, 0.0942819,-0.000126668) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.40533,-0.000383133) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958943,0.00531904) , 
2, 0.804735, 1, 0, 0.623399,0.000315629) , 
2, 0.153846, 1, 0, 0.319382,9.04688e-05) , 
3, 1, 1, 0, 0.5,-5.30893e-05)    );
  // itree = 265
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530785,0.000364992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535054,0.000175041) , 
1, 2, 1, 0, 0.532911,-0.000125513) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99369,0.000425247) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956412,-0.00259142) , 
3, 1, 1, 0, 0.980415,0.000172043) , 
2, 0.576923, 1, 0, 0.883685,-0.000134617) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0145157,0.000654584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0354728,0.00498509) , 
1, 1, 1, 0, 0.0252398,-0.000249482) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115173,0.000555403) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137195,-0.00318457) , 
2, 0.192377, 1, 0, 0.120488,-0.000157272) , 
2, -0.69236, 1, 0, 0.0793766,0.000147291) , 
3, 2, 1, 0, 0.5,-5.31296e-05)    );
  // itree = 266
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00428178,-0.00470344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0127198,0.00133557) , 
0, -3.07268, 1, 0, 0.00975338,3.02154e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.183624,1.80091e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0693734,-0.00243975) , 
3, 3, 1, 0, 0.143854,-8.61203e-05) , 
2, -9.60947, 1, 0, 0.0954895,-0.000232959) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.208848,-0.00167685) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435289,0.00280646) , 
2, 0.235204, 1, 0, 0.341784,0.000780722) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904941,-0.0014216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994234,0.00289455) , 
2, 0.918645, 1, 0, 0.968695,-6.9479e-05) , 
2, 0.576926, 1, 0, 0.793166,0.000168569) , 
2, 0.153846, 1, 0, 0.5,-1.5433e-07)    );
  // itree = 267
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202604,-0.00157391) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112265,0.00209999) , 
0, 0.768366, 1, 0, 0.169291,-0.000435825) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0441967,0.00340232) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0230638,-0.00502014) , 
0, 0.767524, 1, 0, 0.0340443,2.11598e-05) , 
3, 3, 1, 0, 0.0954895,-0.000126556) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.470367,-0.000462432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0539833,0.00683479) , 
1, 3, 1, 0, 0.341784,-0.00107942) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904941,-0.00113576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994234,0.00232823) , 
2, 0.918645, 1, 0, 0.968695,-5.55125e-05) , 
2, 0.576926, 1, 0, 0.793166,0.00013491) , 
2, 0.153846, 1, 0, 0.5,-1.29391e-07)    );
  // itree = 268
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937051,0.00135673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218152,-0.000297242) , 
3, 2, 1, 0, 0.764615,-1.04975e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.010976,-0.000233843) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103585,-0.00226136) , 
2, -9.57692, 1, 0, 0.0510581,-0.000398796) , 
0, 2.22094, 1, 0, 0.637728,0.000115545) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00706884,0.0044948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0435441,-0.000495124) , 
0, -2.82941, 1, 0, 0.0240404,9.45955e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.093352,-0.00378732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167229,-0.000984961) , 
0, -1.44282, 1, 0, 0.129941,-0.000909427) , 
0, -2.1804, 1, 0, 0.0720437,-0.000360514) , 
1, 3, 1, 0, 0.5,-5.386e-05)    );
  // itree = 269
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894599,1.89232e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943873,-0.00158546) , 
0, 0.253491, 1, 0, 0.910791,-0.000130539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.000856876) , 
0, 1.3132, 1, 0, 0.883685,-0.000188868) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0920521,0.000718523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.143146,-0.00135904) , 
0, 0.324409, 1, 0, 0.104825,3.08599e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0288032,0.00495085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00676143,-0.000721672) , 
0, 2.98304, 1, 0, 0.019735,0.000682759) , 
0, 1.91958, 1, 0, 0.0793766,0.000206362) , 
3, 2, 1, 0, 0.5,-5.48461e-05)    );
  // itree = 270
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851058,-0.000937865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752036,0.000737373) , 
0, -1.13601, 1, 0, 0.764615,0.000206785) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.010976,-0.000595974) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103585,-0.00216965) , 
2, -9.57692, 1, 0, 0.0510581,-0.00040533) , 
0, 2.22094, 1, 0, 0.637728,9.79368e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00393192,-0.00413335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0384802,0.000853884) , 
0, -3.04575, 1, 0, 0.0240404,5.97554e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.093352,-0.0030925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167229,-0.000829686) , 
0, -1.44282, 1, 0, 0.129941,-0.000746532) , 
0, -2.1804, 1, 0, 0.0720437,-0.000305724) , 
1, 3, 1, 0, 0.5,-5.50104e-05)    );
  // itree = 271
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0886576,0.00239423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.207103,-0.00125236) , 
0, -1.05962, 1, 0, 0.169291,-0.000388709) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0222374,-0.00566123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0449109,0.00334525) , 
0, -0.768557, 1, 0, 0.0340443,-7.65502e-06) , 
3, 3, 1, 0, 0.0954895,-0.000128725) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.225445,0.00111862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.474544,-0.00314806) , 
2, 0.291535, 1, 0, 0.316117,-0.000414768) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903549,0.00632122) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970732,0.000342167) , 
0, -1.29613, 1, 0, 0.962561,0.000324093) , 
2, 0.511838, 1, 0, 0.793166,0.00013048) , 
2, 0.153846, 1, 0, 0.5,-3.10326e-07)    );
  // itree = 272
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530785,0.0002837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535054,-0.000158889) , 
1, 2, 1, 0, 0.532911,-0.000125504) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969291,-0.00218844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998049,0.00831446) , 
2, 0.983729, 1, 0, 0.980415,-0.000224989) , 
2, 0.576923, 1, 0, 0.883685,-0.000160385) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00987426,0.00150415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0306015,0.00475474) , 
0, -2.74777, 1, 0, 0.0189004,0.000583081) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172226,0.00291485) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248727,-0.000651836) , 
1, 1, 1, 0, 0.1054,-0.000222241) , 
0, -1.92062, 1, 0, 0.0793766,0.000175099) , 
3, 2, 1, 0, 0.5,-5.29533e-05)    );
  // itree = 273
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383423,0.000421589) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.026516,-0.0060198) , 
0, 2.22094, 1, 0, 0.253065,-0.000170522) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901823,0.00330944) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992304,0.00191596) , 
2, 0.853561, 1, 0, 0.980632,0.000313775) , 
2, 0.576923, 1, 0, 0.637728,8.55247e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019392,-0.00497314) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.235084,-0.000564521) , 
2, 0.153846, 1, 0, 0.123163,-0.000676018) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0060995,0.00499675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0200372,0.000615924) , 
0, -2.88855, 1, 0, 0.0127523,0.000207357) , 
3, 3, 1, 0, 0.0720437,-0.000101048) , 
1, 3, 1, 0, 0.5,-5.32914e-05)    );
  // itree = 274
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,-0.000104818) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.000346354) , 
0, 0.0166736, 1, 0, 0.532911,0.000138719) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.969291,-0.00210158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.998049,0.00654648) , 
2, 0.983729, 1, 0, 0.980415,-0.000228684) , 
2, 0.576923, 1, 0, 0.883685,-0.000149269) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.248368,-0.00067456) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.015964,0.00298975) , 
1, 3, 1, 0, 0.104825,-8.08908e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0274564,0.00429525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00543478,-0.00207839) , 
0, 3.1012, 1, 0, 0.019735,0.000607407) , 
0, 1.91958, 1, 0, 0.0793766,0.000162739) , 
3, 2, 1, 0, 0.5,-5.42644e-05)    );
  // itree = 275
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0115086,-0.00475255) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.157169,-0.00214912) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.207297,0.000815372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971717,-0.0022905) , 
2, 0.576923, 1, 0, 0.575637,0.000120993) , 
0, -2.09786, 1, 0, 0.546963,4.97943e-05) , 
0, -2.68866, 1, 0, 0.5,-4.08387e-07)    );
  // itree = 276
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702902,-0.00122111) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202483,0.000526992) , 
0, -0.5027, 1, 0, 0.121996,-0.000106908) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0164886,-0.00321321) , 
0, 2.3036, 1, 0, 0.0954895,-0.000204878) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.231592,-0.00241301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352698,0.000538831) , 
0, -0.661336, 1, 0, 0.301334,-0.000455455) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82001,0.00288732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988795,0.0002277) , 
2, 0.859811, 1, 0, 0.958694,0.000350948) , 
2, 0.479294, 1, 0, 0.793166,0.00014789) , 
2, 0.153846, 1, 0, 0.5,-3.44145e-07)    );
  // itree = 277
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975594,-0.00422359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994462,-0.000836712) , 
0, -0.960511, 1, 0, 0.989849,-0.000167831) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976525,-0.00364312) , 
0, 0.865652, 1, 0, 0.986971,-0.000231338) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0754207,0.000415778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.110776,-0.000566416) , 
0, -0.384537, 1, 0, 0.0942819,-8.37549e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.40533,-0.000354937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958943,0.00516799) , 
2, 0.804735, 1, 0, 0.623399,0.000313865) , 
2, 0.153846, 1, 0, 0.319382,8.54028e-05) , 
3, 1, 1, 0, 0.5,-5.35338e-05)    );
  // itree = 278
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.000528506) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,-0.00137701) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,0.00105269) , 
0, 1.47527, 1, 0, 0.91048,-0.000210866) , 
0, -1.27985, 1, 0, 0.883685,-0.000131612) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0151647,0.000123311) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0348197,0.00465912) , 
0, -1.92062, 1, 0, 0.0252398,0.000488047) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153348,0.00077528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0575126,-0.00378541) , 
0, 1.0677, 1, 0, 0.120488,-0.000117249) , 
2, -0.69236, 1, 0, 0.0793766,0.00014401) , 
3, 2, 1, 0, 0.5,-5.3629e-05)    );
  // itree = 279
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702902,-0.00115453) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202483,0.000598154) , 
0, -0.5027, 1, 0, 0.121996,-6.56397e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0164886,-0.00326468) , 
0, 2.3036, 1, 0, 0.0954895,-0.000176067) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.208848,-0.00153803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435289,0.00242608) , 
2, 0.235204, 1, 0, 0.341784,0.000648879) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875307,-0.00106994) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991749,0.000707358) , 
2, 0.886103, 1, 0, 0.968695,-7.55749e-05) , 
2, 0.576926, 1, 0, 0.793166,0.000127265) , 
2, 0.153846, 1, 0, 0.5,-1.96209e-07)    );
  // itree = 280
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894599,0.000235047) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943873,-0.00139933) , 
0, 0.253491, 1, 0, 0.910791,-6.58256e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.00078702) , 
0, 1.3132, 1, 0, 0.883685,-0.000127011) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0295869,0.000195313) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0207634,0.00538322) , 
0, 1.15154, 1, 0, 0.0252398,0.000451309) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115173,0.000688572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137195,-0.00322578) , 
2, 0.192377, 1, 0, 0.120488,-9.84381e-05) , 
2, -0.69236, 1, 0, 0.0793766,0.000138845) , 
3, 2, 1, 0, 0.5,-5.33941e-05)    );
  // itree = 281
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.141693,0.000874135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0281643,-0.00178122) , 
3, 3, 1, 0, 0.0763771,-5.10572e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.190616,-0.00127465) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0397308,0.000568574) , 
3, 3, 1, 0, 0.112189,-8.44781e-05) , 
0, -0.384537, 1, 0, 0.0954895,-0.000216382) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.203759,-0.000359022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.256794,0.0024769) , 
2, 0.210179, 1, 0, 0.231929,0.00081735) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.596669,-0.00273848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973857,0.00257484) , 
2, 0.658291, 1, 0, 0.921375,5.41759e-06) , 
2, 0.316573, 1, 0, 0.793166,0.000156404) , 
2, 0.153846, 1, 0, 0.5,-2.41551e-07)    );
  // itree = 282
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702902,-0.00103415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202483,0.000569313) , 
0, -0.5027, 1, 0, 0.121996,-4.65894e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0164886,-0.00354523) , 
0, 2.3036, 1, 0, 0.0954895,-0.000173141) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0579981,0.00593824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468493,-0.000246007) , 
1, 1, 1, 0, 0.341784,-0.0010997) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904941,-0.00110638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994234,0.0010264) , 
2, 0.918645, 1, 0, 0.968695,-9.88875e-05) , 
2, 0.576926, 1, 0, 0.793166,0.000125206) , 
2, 0.153846, 1, 0, 0.5,-1.60031e-07)    );
  // itree = 283
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.16717,-0.000341594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0921192,-0.00357724) , 
0, 1.4406, 1, 0, 0.12923,-0.000725861) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0409732,0.00129748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00652051,-0.00511305) , 
0, 2.93588, 1, 0, 0.0251357,4.17292e-05) , 
0, 2.17838, 1, 0, 0.0726043,-0.000308303) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0734969,-0.00188659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397943,0.000694124) , 
0, -2.08982, 1, 0, 0.173889,-0.000209667) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.643408,0.00155158) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.869554,0.000218934) , 
0, -0.928608, 1, 0, 0.826283,0.000224428) , 
0, -1.562, 1, 0, 0.637494,9.88104e-05) , 
1, 1, 1, 0, 0.5,-5.28482e-05)    );
  // itree = 284
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.000336337) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,-0.00119766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,0.00076813) , 
0, 1.47527, 1, 0, 0.91048,-0.000196871) , 
0, -1.27985, 1, 0, 0.883685,-0.00013716) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00496318,0.00102356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0285063,0.00436657) , 
0, -2.98409, 1, 0, 0.0189004,0.000623902) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172226,0.00250704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248727,-0.000682977) , 
1, 1, 1, 0, 0.1054,-0.000214313) , 
0, -1.92062, 1, 0, 0.0793766,0.000149759) , 
3, 2, 1, 0, 0.5,-5.24195e-05)    );
  // itree = 285
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164508,-0.00250152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0593852,0.000776324) , 
0, 2.06196, 1, 0, 0.123601,-0.000636444) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,2.82156e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,0.00124948) , 
0, 2.86859, 1, 0, 0.0137948,5.97063e-05) , 
3, 3, 1, 0, 0.0726043,8.00778e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0734969,-0.00194599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397943,0.000464617) , 
0, -2.08982, 1, 0, 0.173889,-0.000254722) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679456,0.00126852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879085,0.000253985) , 
0, -0.717484, 1, 0, 0.826283,0.000244894) , 
0, -1.562, 1, 0, 0.637494,0.000100316) , 
1, 1, 1, 0, 0.5,-5.26498e-05)    );
  // itree = 286
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153243,0.000625788) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0839303,-0.0049508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0204405,0.000510048) , 
0, 2.30629, 1, 0, 0.0396723,-0.000466906) , 
0, 1.66686, 1, 0, 0.0726043,-0.000250597) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.367312,0.00022325) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835604,-0.00153795) , 
0, -0.743894, 1, 0, 0.474491,-8.36044e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994706,-0.00127481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796812,0.000784078) , 
3, 1, 1, 0, 0.893169,0.000281095) , 
0, -0.189692, 1, 0, 0.637494,8.02359e-05) , 
1, 1, 1, 0, 0.5,-5.22083e-05)    );
  // itree = 287
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.141693,0.000744574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0281643,-0.00136002) , 
3, 3, 1, 0, 0.0763771,-5.05179e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.190616,-0.00108743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0397308,0.000432226) , 
3, 3, 1, 0, 0.112189,-6.22263e-05) , 
0, -0.384537, 1, 0, 0.0954895,-0.000179156) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.470367,-0.000429035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0539833,0.00632512) , 
1, 3, 1, 0, 0.341784,-0.00106412) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.974685,-0.00105517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.925493,0.00202765) , 
0, 1.27839, 1, 0, 0.968695,-4.60118e-05) , 
2, 0.576926, 1, 0, 0.793166,0.00012938) , 
2, 0.153846, 1, 0, 0.5,-2.67965e-07)    );
  // itree = 288
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.937051,0.00133194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.218152,-0.000369676) , 
3, 2, 1, 0, 0.764615,-9.77155e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.010976,-0.00112296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103585,-0.00216958) , 
2, -9.57692, 1, 0, 0.0510581,-0.00043808) , 
0, 2.22094, 1, 0, 0.637728,8.88711e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0708832,-0.00134983) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17971,-0.00217503) , 
0, -1.77547, 1, 0, 0.123163,-0.000748195) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0060995,0.00587414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0200372,0.00100935) , 
0, -2.88855, 1, 0, 0.0127523,0.00026836) , 
3, 3, 1, 0, 0.0720437,-9.96915e-05) , 
1, 3, 1, 0, 0.5,-5.19921e-05)    );
  // itree = 289
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.949621,0.000471884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.880222,-0.000686542) , 
1, 2, 1, 0, 0.910791,-6.07024e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.000742303) , 
0, 1.3132, 1, 0, 0.883685,-0.000141594) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00496318,0.000410471) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0285063,0.00361765) , 
0, -2.98409, 1, 0, 0.0189004,0.000511349) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.110638,-0.0019235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.104196,0.000521122) , 
0, -0.857146, 1, 0, 0.1054,1.07089e-06) , 
0, -1.92062, 1, 0, 0.0793766,0.000154587) , 
3, 2, 1, 0, 0.5,-5.31732e-05)    );
  // itree = 290
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702902,-0.0010597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202483,0.00057548) , 
0, -0.5027, 1, 0, 0.121996,-5.0767e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0164886,-0.0031196) , 
0, 2.3036, 1, 0, 0.0954895,-0.000159277) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.372745,-0.00159193) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.410172,0.00175775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973875,-0.00115867) , 
2, 0.576926, 1, 0, 0.839297,0.000221053) , 
0, -1.77998, 1, 0, 0.793166,0.000114931) , 
2, 0.153846, 1, 0, 0.5,-2.91921e-07)    );
  // itree = 291
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.000360958) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,-0.00113586) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,0.000829023) , 
0, 1.47527, 1, 0, 0.91048,-0.000177822) , 
0, -1.27985, 1, 0, 0.883685,-0.000118676) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0920521,0.000642697) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.143146,-0.00144238) , 
0, 0.324409, 1, 0, 0.104825,-3.96741e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0274564,0.00359214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00543478,-0.000966953) , 
0, 3.1012, 1, 0, 0.019735,0.000526183) , 
0, 1.91958, 1, 0, 0.0793766,0.000129562) , 
3, 2, 1, 0, 0.5,-5.30217e-05)    );
  // itree = 292
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0115086,-0.00369239) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.269197,0.000766575) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973387,-0.00121676) , 
2, 0.576923, 1, 0, 0.657243,0.000191959) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.272926,-0.00220854) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0220662,-0.000734181) , 
0, 2.49225, 1, 0, 0.13573,-0.000534256) , 
0, 1.74235, 1, 0, 0.546963,3.83919e-05) , 
0, -2.68866, 1, 0, 0.5,-2.48424e-07)    );
  // itree = 293
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.025864,-0.00101737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.203283,0.000730415) , 
0, -1.62541, 1, 0, 0.0763771,5.07169e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.190616,-0.00101733) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0397308,0.000437877) , 
3, 3, 1, 0, 0.112189,-9.31248e-05) , 
0, -0.384537, 1, 0, 0.0954895,-0.000164807) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.225445,0.00051014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.474544,-0.00293143) , 
2, 0.291535, 1, 0, 0.316117,-0.00063061) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.839399,0.0032942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989931,0.000247009) , 
2, 0.868573, 1, 0, 0.962561,0.000385253) , 
2, 0.511838, 1, 0, 0.793166,0.000119054) , 
2, 0.153846, 1, 0, 0.5,-2.25349e-07)    );
  // itree = 294
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206953,0.000762424) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971439,-0.00198033) , 
2, 0.576923, 1, 0, 0.575265,0.000121923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.00257414) , 
0, 2.09682, 1, 0, 0.546317,3.66915e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.0029597) , 
0, 2.68762, 1, 0, 0.5,-1.50907e-07)    );
  // itree = 295
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202568,-0.000970163) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0479838,0.00084828) , 
3, 3, 1, 0, 0.130083,-8.12473e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0551401,0.00192057) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0146167,-0.00134806) , 
0, 2.59901, 1, 0, 0.0293952,0.000144404) , 
0, 1.53556, 1, 0, 0.0954895,-0.000173997) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.231592,-0.00258258) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.352698,0.000376645) , 
0, -0.661336, 1, 0, 0.301334,-0.000580556) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.82001,0.00278388) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988795,0.000599553) , 
2, 0.859811, 1, 0, 0.958694,0.00036363) , 
2, 0.479294, 1, 0, 0.793166,0.000125877) , 
2, 0.153846, 1, 0, 0.5,-1.30886e-07)    );
  // itree = 296
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0239096,0.00117592) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.2313,-0.00071975) , 
0, -1.72861, 1, 0, 0.130083,-0.000272532) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0551401,0.00153298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0146167,-0.00108136) , 
0, 2.59901, 1, 0, 0.0293952,0.000115442) , 
0, 1.53556, 1, 0, 0.0954895,-0.000139237) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0661472,0.00273265) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504851,-0.00143963) , 
1, 1, 1, 0, 0.375705,-0.00110198) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.881692,0.0034842) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99061,0.00125286) , 
2, 0.87484, 1, 0, 0.974718,0.00034615) , 
2, 0.674559, 1, 0, 0.793166,0.000100734) , 
2, 0.153846, 1, 0, 0.5,-1.02335e-07)    );
  // itree = 297
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.16717,-0.000365151) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0921192,-0.00291131) , 
0, 1.4406, 1, 0, 0.12923,-0.000609543) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0409732,0.00122369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00652051,-0.00330628) , 
0, 2.93588, 1, 0, 0.0251357,8.87342e-05) , 
0, 2.17838, 1, 0, 0.0726043,-0.00022969) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0734969,-0.00177862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397943,0.000420878) , 
0, -2.08982, 1, 0, 0.173889,-0.000233693) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.679456,0.00113874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.879085,0.000167881) , 
0, -0.717484, 1, 0, 0.826283,0.000199003) , 
0, -1.562, 1, 0, 0.637494,7.37899e-05) , 
1, 1, 1, 0, 0.5,-5.26941e-05)    );
  // itree = 298
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.000419604) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,-0.00111342) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,0.000831386) , 
0, 1.47527, 1, 0, 0.91048,-0.000172654) , 
0, -1.27985, 1, 0, 0.883685,-0.000108997) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0295869,0.000340672) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0207634,0.00557218) , 
0, 1.15154, 1, 0, 0.0252398,0.000478301) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115173,0.000541666) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137195,-0.00309134) , 
2, 0.192377, 1, 0, 0.120488,-0.000153366) , 
2, -0.69236, 1, 0, 0.0793766,0.000119275) , 
3, 2, 1, 0, 0.5,-5.22903e-05)    );
  // itree = 299
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00428178,-0.00296324) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0127198,0.00148074) , 
0, -3.07268, 1, 0, 0.00975338,6.88017e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.183624,0.000293279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0693734,-0.00302374) , 
3, 3, 1, 0, 0.143854,-7.67273e-05) , 
2, -9.60947, 1, 0, 0.0954895,-0.00018303) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.208848,-0.00151147) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.435289,0.0022466) , 
2, 0.235204, 1, 0, 0.341784,0.000575771) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875307,-0.000970435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991749,0.00117744) , 
2, 0.886103, 1, 0, 0.968695,-4.00807e-05) , 
2, 0.576926, 1, 0, 0.793166,0.000132352) , 
2, 0.153846, 1, 0, 0.5,-1.72526e-07)    );
  // itree = 300
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164508,-0.00211179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0593852,0.000834027) , 
0, 2.06196, 1, 0, 0.123601,-0.000513471) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,1.1556e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,0.00147944) , 
0, 2.86859, 1, 0, 0.0137948,6.86025e-05) , 
3, 3, 1, 0, 0.0726043,8.03955e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.178171,0.000363766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614713,-0.000995053) , 
0, 0.153386, 1, 0, 0.2523,-0.000114471) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898078,0.00362035) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991935,0.00023912) , 
2, 0.853561, 1, 0, 0.979781,0.000249009) , 
2, 0.576923, 1, 0, 0.637494,7.79882e-05) , 
1, 1, 1, 0, 0.5,-5.16977e-05)    );
  // itree = 301
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.598258,0.000404686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983853,-0.00153286) , 
2, 0.576923, 1, 0, 0.910791,-6.34236e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.000818296) , 
0, 1.3132, 1, 0, 0.883685,-0.000127733) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172226,0.00241524) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.000730625) , 
1, 1, 1, 0, 0.127787,-4.40717e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0125447,0.00183276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0247093,0.00429147) , 
0, -1.77883, 1, 0, 0.015964,0.000430505) , 
1, 3, 1, 0, 0.0793766,-0.000105008) , 
3, 2, 1, 0, 0.5,-5.17798e-05)    );
  // itree = 302
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851058,-0.000918116) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.752036,0.000727637) , 
0, -1.13601, 1, 0, 0.764615,0.00020499) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.010976,-0.00133949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103585,-0.00214749) , 
2, -9.57692, 1, 0, 0.0510581,-0.000448308) , 
0, 2.22094, 1, 0, 0.637728,8.88182e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00706884,0.00478368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0435441,-0.000213603) , 
0, -2.82941, 1, 0, 0.0240404,0.000142076) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.093352,-0.00339669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167229,-0.000735694) , 
0, -1.44282, 1, 0, 0.129941,-0.000781787) , 
0, -2.1804, 1, 0, 0.0720437,-0.000276699) , 
1, 3, 1, 0, 0.5,-5.21653e-05)    );
  // itree = 303
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702902,-0.00117369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202483,0.000611206) , 
0, -0.5027, 1, 0, 0.121996,-6.55597e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0164886,-0.00311418) , 
0, 2.3036, 1, 0, 0.0954895,-0.000170254) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0661472,0.00239266) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504851,-0.00110401) , 
1, 1, 1, 0, 0.375705,-0.00106178) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965093,0.00651235) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.978847,-0.000513238) , 
0, -0.606209, 1, 0, 0.974718,0.000311436) , 
2, 0.674559, 1, 0, 0.793166,0.000123057) , 
2, 0.153846, 1, 0, 0.5,-1.9275e-07)    );
  // itree = 304
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164508,-0.0021078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0593852,0.000693277) , 
0, 2.06196, 1, 0, 0.123601,-0.00053146) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,-3.17922e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,0.00160313) , 
0, 2.86859, 1, 0, 0.0137948,7.28599e-05) , 
3, 3, 1, 0, 0.0726043,8.00037e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965883,0.00182533) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.00060898) , 
3, 2, 1, 0, 0.905792,-2.19384e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0240404,0.000735801) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.129941,-0.00173359) , 
0, -2.1804, 1, 0, 0.0720437,-0.000250428) , 
1, 3, 1, 0, 0.637494,-3.42095e-05) , 
1, 1, 1, 0, 0.5,-5.29245e-05)    );
  // itree = 305
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.598258,0.000265442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983853,-0.00169339) , 
2, 0.576923, 1, 0, 0.910791,-0.000108717) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.000799941) , 
0, 1.3132, 1, 0, 0.883685,-0.00016495) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.152477,-0.000395476) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0794965,0.00335249) , 
0, 0.768366, 1, 0, 0.123678,0.000428855) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00971231,0.00718396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0693031,-0.00214107) , 
2, -9.58006, 1, 0, 0.0355686,-6.47581e-05) , 
3, 3, 1, 0, 0.0793766,-2.60945e-05) , 
3, 2, 1, 0, 0.5,-5.30808e-05)    );
  // itree = 306
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206953,0.000865118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971439,-0.00222819) , 
2, 0.576923, 1, 0, 0.575265,0.000139854) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.00285948) , 
0, 2.09682, 1, 0, 0.546317,4.4581e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00357522) , 
0, 2.68762, 1, 0, 0.5,-2.19632e-07)    );
  // itree = 307
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.025864,-0.0012098) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.203283,0.00066335) , 
0, -1.62541, 1, 0, 0.0763771,4.17958e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.190616,-0.00115918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0397308,0.000667656) , 
3, 3, 1, 0, 0.112189,-7.94242e-05) , 
0, -0.384537, 1, 0, 0.0954895,-0.000200271) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495587,-0.00145674) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.059618,0.00401814) , 
1, 3, 1, 0, 0.364914,-0.00109363) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865887,0.00398926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989075,0.000647231) , 
2, 0.862327, 1, 0, 0.972875,0.000347441) , 
2, 0.642015, 1, 0, 0.793166,0.000144813) , 
2, 0.153846, 1, 0, 0.5,-1.92201e-07)    );
  // itree = 308
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383423,0.000363499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.026516,-0.00515179) , 
0, 2.22094, 1, 0, 0.253065,-0.000143375) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94821,0.00328278) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996661,-0.000870406) , 
2, 0.934916, 1, 0, 0.980632,0.00029995) , 
2, 0.576923, 1, 0, 0.637728,9.10106e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0708832,-0.00116543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17971,-0.0019303) , 
0, -1.77547, 1, 0, 0.123163,-0.00065867) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0060995,0.00276327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0200372,0.000722137) , 
0, -2.88855, 1, 0, 0.0127523,0.000151663) , 
3, 3, 1, 0, 0.0720437,-0.000102786) , 
1, 3, 1, 0, 0.5,-5.45073e-05)    );
  // itree = 309
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,-0.000195629) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.000345869) , 
0, 0.0166736, 1, 0, 0.532911,8.69162e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99369,0.000805743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956412,-0.00221999) , 
3, 1, 1, 0, 0.980415,0.000172333) , 
2, 0.576923, 1, 0, 0.883685,-0.000140587) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0920521,0.00059949) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.143146,-0.00130081) , 
0, 0.324409, 1, 0, 0.104825,-2.87082e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0274564,0.00386897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00543478,-0.0002287) , 
0, 3.1012, 1, 0, 0.019735,0.000581123) , 
0, 1.91958, 1, 0, 0.0793766,0.000153679) , 
3, 2, 1, 0, 0.5,-5.50742e-05)    );
  // itree = 310
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0594251,7.84055e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300926,-0.000895875) , 
0, -0.739026, 1, 0, 0.129801,-0.000307522) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0925343,0.00228633) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0171532,-0.00327586) , 
0, 2.18554, 1, 0, 0.041456,4.06055e-05) , 
0, 1.15154, 1, 0, 0.0954895,-0.000172315) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.470367,-0.000277218) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0539833,0.00545704) , 
1, 3, 1, 0, 0.341784,-0.00107482) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875307,-0.00121914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991749,0.00155168) , 
2, 0.886103, 1, 0, 0.968695,-4.59578e-05) , 
2, 0.576926, 1, 0, 0.793166,0.000124531) , 
2, 0.153846, 1, 0, 0.5,-2.0428e-07)    );
  // itree = 311
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383423,0.000317131) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.026516,-0.00417833) , 
0, 2.22094, 1, 0, 0.253065,-9.81995e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94821,0.00305556) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996661,-0.000920743) , 
2, 0.934916, 1, 0, 0.980632,0.000276572) , 
2, 0.576923, 1, 0, 0.637728,9.99415e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0708832,-0.00135177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17971,-0.00182218) , 
0, -1.77547, 1, 0, 0.123163,-0.000666106) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0060995,0.00205876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0200372,0.000384017) , 
0, -2.88855, 1, 0, 0.0127523,9.93076e-05) , 
3, 3, 1, 0, 0.0720437,-0.000103628) , 
1, 3, 1, 0, 0.5,-5.52293e-05)    );
  // itree = 312
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0115086,-0.00447905) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.157169,-0.00157912) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.207297,0.000786637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971717,-0.00244526) , 
2, 0.576923, 1, 0, 0.575637,0.000100109) , 
0, -2.09786, 1, 0, 0.546963,4.70242e-05) , 
0, -2.68866, 1, 0, 0.5,-2.71673e-07)    );
  // itree = 313
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202568,-0.00099699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0479838,0.000986487) , 
3, 3, 1, 0, 0.130083,-8.35642e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0551401,0.00107522) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0146167,3.3408e-05) , 
0, 2.59901, 1, 0, 0.0293952,0.000149988) , 
0, 1.53556, 1, 0, 0.0954895,-0.0001669) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.564396,-0.00109172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0743854,0.00232589) , 
1, 3, 1, 0, 0.431141,-0.000820713) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933639,0.00564504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993011,0.000232328) , 
2, 0.902374, 1, 0, 0.983216,0.000346619) , 
2, 0.804735, 1, 0, 0.793166,0.000120578) , 
2, 0.153846, 1, 0, 0.5,-2.21367e-07)    );
  // itree = 314
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99479,-0.000475993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974328,-0.00454094) , 
0, 0.954406, 1, 0, 0.990761,-0.000138943) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.587179,0.000483598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0558,-0.000552135) , 
3, 3, 1, 0, 0.450539,-1.16659e-05) , 
3, 1, 1, 0, 0.637728,-1.66979e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0708832,-0.00117554) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17971,-0.00168209) , 
0, -1.77547, 1, 0, 0.123163,-0.000602263) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0060995,0.00235172) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0200372,0.000444131) , 
0, -2.88855, 1, 0, 0.0127523,0.000113718) , 
3, 3, 1, 0, 0.0720437,-0.000103205) , 
1, 3, 1, 0, 0.5,-5.47992e-05)    );
  // itree = 315
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.21416,0.000492837) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973371,-0.00161167) , 
2, 0.576923, 1, 0, 0.587071,5.88724e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313126,-0.00290764) , 
0, 1.74234, 1, 0, 0.565771,-5.36526e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702364,0.0029925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00741413,-0.00370555) , 
0, 2.924, 1, 0, 0.039065,0.000375219) , 
0, 2.3036, 1, 0, 0.5,-9.86393e-08)    );
  // itree = 316
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202568,-0.000950252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0479838,0.000700083) , 
3, 3, 1, 0, 0.130083,-8.4323e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0551401,0.000989261) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0146167,-1.01265e-05) , 
0, 2.59901, 1, 0, 0.0293952,0.000134545) , 
0, 1.53556, 1, 0, 0.0954895,-0.000184483) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.372745,-0.00141176) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.410172,0.00167772) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973875,-0.000915449) , 
2, 0.576926, 1, 0, 0.839297,0.000231194) , 
0, -1.77998, 1, 0, 0.793166,0.000133511) , 
2, 0.153846, 1, 0, 0.5,-1.11189e-07)    );
  // itree = 317
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0115086,-0.00404184) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.225793,0.0014572) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.702334,-0.000727576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.527948,0.000299916) , 
0, -0.234542, 1, 0, 0.585836,-3.07058e-05) , 
0, -1.80246, 1, 0, 0.546963,4.24597e-05) , 
0, -2.68866, 1, 0, 0.5,-8.74038e-08)    );
  // itree = 318
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.000164269) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,-0.00118409) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,0.00131422) , 
0, 1.47527, 1, 0, 0.91048,-0.000144678) , 
0, -1.27985, 1, 0, 0.883685,-0.000108293) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0295869,0.000165279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0207634,0.00592663) , 
0, 1.15154, 1, 0, 0.0252398,0.000489172) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153348,0.000653984) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0575126,-0.00367586) , 
0, 1.0677, 1, 0, 0.120488,-0.000162977) , 
2, -0.69236, 1, 0, 0.0793766,0.000118505) , 
3, 2, 1, 0, 0.5,-5.45876e-05)    );
  // itree = 319
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0101745,-0.00543615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0524688,0.00238125) , 
0, -2.73299, 1, 0, 0.0282083,6.3737e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243121,-0.000915167) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0964505,-0.000132552) , 
0, -0.0300226, 1, 0, 0.130779,-0.000280082) , 
0, -1.5366, 1, 0, 0.0954895,-0.00016179) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.225445,0.00066563) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.474544,-0.00270474) , 
2, 0.291535, 1, 0, 0.316117,-0.000493317) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970116,0.000688942) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910403,0.00551023) , 
0, 1.26798, 1, 0, 0.962561,0.000333569) , 
2, 0.511838, 1, 0, 0.793166,0.00011689) , 
2, 0.153846, 1, 0, 0.5,-2.12394e-07)    );
  // itree = 320
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875274,-0.000534757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950035,0.000488349) , 
0, -0.170369, 1, 0, 0.910791,-4.76872e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.0007433) , 
0, 1.3132, 1, 0, 0.883685,-0.000107339) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0145157,0.000201134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0354728,0.00402999) , 
1, 1, 1, 0, 0.0252398,-0.000251238) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115173,0.000583137) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137195,-0.00294533) , 
2, 0.192377, 1, 0, 0.120488,-0.000113715) , 
2, -0.69236, 1, 0, 0.0793766,0.000117283) , 
3, 2, 1, 0, 0.5,-5.3375e-05)    );
  // itree = 321
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00428178,-0.00426684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0127198,0.000975764) , 
0, -3.07268, 1, 0, 0.00975338,9.78816e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.183624,0.000215864) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0693734,-0.00272109) , 
3, 3, 1, 0, 0.143854,-7.5971e-05) , 
2, -9.60947, 1, 0, 0.0954895,-0.000199903) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0629998,0.00288881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4935,-0.00112617) , 
1, 1, 1, 0, 0.364914,-0.0011158) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865887,0.00341104) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989075,0.000814466) , 
2, 0.862327, 1, 0, 0.972875,0.000314211) , 
2, 0.642015, 1, 0, 0.793166,0.000144532) , 
2, 0.153846, 1, 0, 0.5,-2.00658e-07)    );
  // itree = 322
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.025864,-0.00118496) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.203283,0.000664734) , 
0, -1.62541, 1, 0, 0.0763771,8.31166e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.190616,-0.00100523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0397308,0.000734338) , 
3, 3, 1, 0, 0.112189,-5.02415e-05) , 
0, -0.384537, 1, 0, 0.0954895,-0.000160018) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.217738,-0.000900748) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479506,0.00239149) , 
2, 0.267744, 1, 0, 0.341784,0.00056176) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875307,-0.00145789) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991749,0.00179166) , 
2, 0.886103, 1, 0, 0.968695,-5.78506e-05) , 
2, 0.576926, 1, 0, 0.793166,0.000115634) , 
2, 0.153846, 1, 0, 0.5,-1.95797e-07)    );
  // itree = 323
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894599,0.000165755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943873,-0.00124847) , 
0, 0.253491, 1, 0, 0.910791,-6.88261e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.000856706) , 
0, 1.3132, 1, 0, 0.883685,-0.00013567) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.248368,-0.000518452) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.015964,0.00254249) , 
1, 3, 1, 0, 0.104825,-8.00818e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0274564,0.00317108) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00543478,0.000369196) , 
0, 3.1012, 1, 0, 0.019735,0.000489428) , 
0, 1.91958, 1, 0, 0.0793766,0.000148426) , 
3, 2, 1, 0, 0.5,-5.30368e-05)    );
  // itree = 324
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164508,-0.00206479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0593852,0.000719623) , 
0, 2.06196, 1, 0, 0.123601,-0.000515953) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,-8.71236e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,0.00110211) , 
0, 2.86859, 1, 0, 0.0137948,4.27914e-05) , 
3, 3, 1, 0, 0.0726043,8.03099e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.151208,-0.00136638) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.730546,0.000329307) , 
0, -1.66756, 1, 0, 0.474491,-0.000101827) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994706,-0.000816996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796812,0.000835905) , 
3, 1, 1, 0, 0.893169,0.000270594) , 
0, -0.189692, 1, 0, 0.637494,8.22592e-05) , 
1, 1, 1, 0, 0.5,-5.35831e-05)    );
  // itree = 325
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702902,-0.00109402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.202483,0.000552039) , 
0, -0.5027, 1, 0, 0.121996,-6.7259e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0164886,-0.00284727) , 
0, 2.3036, 1, 0, 0.0954895,-0.00016093) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.564396,-0.000961276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0743854,0.00231954) , 
1, 3, 1, 0, 0.431141,-0.000790979) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933639,0.00479509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993011,0.000343008) , 
2, 0.902374, 1, 0, 0.983216,0.000300172) , 
2, 0.804735, 1, 0, 0.793166,0.000116346) , 
2, 0.153846, 1, 0, 0.5,-1.66485e-07)    );
  // itree = 326
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805371,0.00156129) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903101,-0.000398534) , 
1, 2, 1, 0, 0.854472,-1.00824e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.420173,0.000365615) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.019165,-0.00412398) , 
3, 3, 1, 0, 0.261188,4.40393e-06) , 
0, 1.18189, 1, 0, 0.637728,8.41399e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0708832,-0.00112359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17971,-0.00167353) , 
0, -1.77547, 1, 0, 0.123163,-0.000591428) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0060995,0.00339078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0200372,0.000178603) , 
0, -2.88855, 1, 0, 0.0127523,0.000120187) , 
3, 3, 1, 0, 0.0720437,-0.000101333) , 
1, 3, 1, 0, 0.5,-5.30203e-05)    );
  // itree = 327
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894599,0.000145913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943873,-0.00124611) , 
0, 0.253491, 1, 0, 0.910791,-7.30498e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.000736254) , 
0, 1.3132, 1, 0, 0.883685,-0.000128465) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0920521,0.000532294) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.143146,-0.00110634) , 
0, 0.324409, 1, 0, 0.104825,-1.61547e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0274564,0.00316704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00543478,0.00140312) , 
0, 3.1012, 1, 0, 0.019735,0.000507627) , 
0, 1.91958, 1, 0, 0.0793766,0.000140497) , 
3, 2, 1, 0, 0.5,-5.37046e-05)    );
  // itree = 328
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153243,0.000673731) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0396723,-0.00169457) , 
0, 1.66686, 1, 0, 0.0726043,-0.000181144) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965883,0.00165085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.000627881) , 
3, 2, 1, 0, 0.905792,-1.75174e-05) , 
1, 1, 1, 0, 0.637728,-6.54998e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00706884,0.00330712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0435441,-0.00057986) , 
0, -2.82941, 1, 0, 0.0240404,4.20309e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.093352,-0.0028414) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167229,-0.000152728) , 
0, -1.44282, 1, 0, 0.129941,-0.000549606) , 
0, -2.1804, 1, 0, 0.0720437,-0.00022615) , 
1, 3, 1, 0, 0.5,-5.38257e-05)    );
  // itree = 329
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.000277219) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,-0.00128862) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,0.000874448) , 
0, 1.47527, 1, 0, 0.91048,-0.000207317) , 
0, -1.27985, 1, 0, 0.883685,-0.000151429) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.152477,-0.000392874) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0794965,0.00303763) , 
0, 0.768366, 1, 0, 0.123678,0.00037416) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.018519,-0.00565442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.049976,0.00228676) , 
0, -1.15258, 1, 0, 0.0355686,-4.0408e-05) , 
3, 3, 1, 0, 0.0793766,-2.65279e-05) , 
3, 2, 1, 0, 0.5,-5.45497e-05)    );
  // itree = 330
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875274,-0.000541183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950035,0.000376559) , 
0, -0.170369, 1, 0, 0.910791,-6.1848e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.000762238) , 
0, 1.3132, 1, 0, 0.883685,-0.000121115) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00496318,0.00022487) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0285063,0.00406264) , 
0, -2.98409, 1, 0, 0.0189004,0.000568506) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0348197,0.00332547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138075,-0.000552101) , 
2, -0.69236, 1, 0, 0.1054,-5.54369e-05) , 
0, -1.92062, 1, 0, 0.0793766,0.000132275) , 
3, 2, 1, 0, 0.5,-5.33489e-05)    );
  // itree = 331
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00851435,0.00117095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0109751,-0.00145527) , 
0, 1.15154, 1, 0, 0.00975338,-3.15354e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.075697,-0.00240558) , 
2, -9.65385, 1, 0, 0.0276082,-0.000294015) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.144409,-0.00216344) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692929,0.000278286) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.210365,0.00261824) , 
0, 2.0234, 1, 0, 0.657075,0.000200691) , 
2, 0.0385581, 1, 0, 0.623926,7.67888e-05) , 
2, -0.692308, 1, 0, 0.5,-2.7107e-07)    );
  // itree = 332
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153243,0.000527992) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0839303,-0.00461165) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0204405,0.000477284) , 
0, 2.30629, 1, 0, 0.0396723,-0.000434374) , 
0, 1.66686, 1, 0, 0.0726043,-0.000239908) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0734969,-0.00170003) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397943,0.000795237) , 
0, -2.08982, 1, 0, 0.173889,-0.000164436) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904912,-0.000271936) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757476,0.00100583) , 
1, 2, 1, 0, 0.826283,0.000119142) , 
0, -1.562, 1, 0, 0.637494,7.6843e-05) , 
1, 1, 1, 0, 0.5,-5.36666e-05)    );
  // itree = 333
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.000309243) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,-0.00113848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,0.000860573) , 
0, 1.47527, 1, 0, 0.91048,-0.000175448) , 
0, -1.27985, 1, 0, 0.883685,-0.000121406) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00496318,0.000290437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0285063,0.00363468) , 
0, -2.98409, 1, 0, 0.0189004,0.000511916) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172226,0.00194581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248727,-0.000506829) , 
1, 1, 1, 0, 0.1054,-0.000149069) , 
0, -1.92062, 1, 0, 0.0793766,0.000132567) , 
3, 2, 1, 0, 0.5,-5.32771e-05)    );
  // itree = 334
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00851435,0.000878635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0109751,-0.00157949) , 
0, 1.15154, 1, 0, 0.00975338,-4.97394e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.075697,-0.00216947) , 
2, -9.65385, 1, 0, 0.0276082,-0.000280617) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.147523,0.000174346) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.161961,-0.00237648) , 
2, 0.0666614, 1, 0, 0.153653,-0.000701769) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.220581,0.00163211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922525,-0.000145494) , 
2, 0.319598, 1, 0, 0.747919,0.000277649) , 
2, 0.115473, 1, 0, 0.623926,7.32946e-05) , 
2, -0.692308, 1, 0, 0.5,-2.54933e-07)    );
  // itree = 335
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164508,-0.00178126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0593852,0.000269654) , 
0, 2.06196, 1, 0, 0.123601,-0.000489785) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,0.00011536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,0.00116319) , 
0, 2.86859, 1, 0, 0.0137948,6.34986e-05) , 
3, 3, 1, 0, 0.0726043,8.04035e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0734969,-0.00170423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397943,0.000518103) , 
0, -2.08982, 1, 0, 0.173889,-0.000207193) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904912,-0.000131377) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757476,0.00092814) , 
1, 2, 1, 0, 0.826283,0.00011097) , 
0, -1.562, 1, 0, 0.637494,7.45938e-05) , 
1, 1, 1, 0, 0.5,-5.35448e-05)    );
  // itree = 336
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206953,0.000813519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971439,-0.00206657) , 
2, 0.576923, 1, 0, 0.575265,0.00013369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.00290777) , 
0, 2.09682, 1, 0, 0.546317,3.75521e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00302845) , 
0, 2.68762, 1, 0, 0.5,-2.05017e-07)    );
  // itree = 337
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.141693,0.000755185) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0281643,-0.0012152) , 
3, 3, 1, 0, 0.0763771,-5.12564e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.190616,-0.000956845) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0397308,0.000546577) , 
3, 3, 1, 0, 0.112189,-6.11686e-05) , 
0, -0.384537, 1, 0, 0.0954895,-0.000132879) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.190723,-0.00306421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.388044,0.000499039) , 
0, -1.10879, 1, 0, 0.316117,-0.00047266) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903549,0.00539335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970732,0.00046435) , 
0, -1.29613, 1, 0, 0.962561,0.000297921) , 
2, 0.511838, 1, 0, 0.793166,9.59966e-05) , 
2, 0.153846, 1, 0, 0.5,-1.77679e-07)    );
  // itree = 338
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,-9.76802e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.000241948) , 
0, 0.0166736, 1, 0, 0.532911,8.27463e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99369,0.00108307) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956412,-0.00183466) , 
3, 1, 1, 0, 0.980415,0.000174379) , 
2, 0.576923, 1, 0, 0.883685,-0.000101864) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0145157,0.000124996) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0354728,0.00386342) , 
1, 1, 1, 0, 0.0252398,-0.000249986) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115173,0.000604244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137195,-0.00296536) , 
2, 0.192377, 1, 0, 0.120488,-0.000107194) , 
2, -0.69236, 1, 0, 0.0793766,0.000111399) , 
3, 2, 1, 0, 0.5,-5.30997e-05)    );
  // itree = 339
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0101745,-0.00537643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0524688,0.00212247) , 
0, -2.73299, 1, 0, 0.0282083,2.68117e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.243121,-0.000928489) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0964505,-0.000153467) , 
0, -0.0300226, 1, 0, 0.130779,-0.000291197) , 
0, -1.5366, 1, 0, 0.0954895,-0.000181786) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495587,-0.00112876) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.059618,0.00300806) , 
1, 3, 1, 0, 0.364914,-0.0010607) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865887,0.00332943) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989075,0.000722887) , 
2, 0.862327, 1, 0, 0.972875,0.000301319) , 
2, 0.642015, 1, 0, 0.793166,0.000131511) , 
2, 0.153846, 1, 0, 0.5,-1.37372e-07)    );
  // itree = 340
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383423,0.000367484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.026516,-0.00465732) , 
0, 2.22094, 1, 0, 0.253065,-0.000101275) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94821,0.00250333) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996661,7.4991e-05) , 
2, 0.934916, 1, 0, 0.980632,0.000242073) , 
2, 0.576923, 1, 0, 0.637728,8.0252e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0708832,-0.00119728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17971,-0.00158951) , 
0, -1.77547, 1, 0, 0.123163,-0.000584294) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0060995,0.00326993) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0200372,0.000406353) , 
0, -2.88855, 1, 0, 0.0127523,0.000137672) , 
3, 3, 1, 0, 0.0720437,-0.000101056) , 
1, 3, 1, 0, 0.5,-5.27434e-05)    );
  // itree = 341
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,-8.3484e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.000419046) , 
0, 0.0166736, 1, 0, 0.532911,0.000191547) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942041,-0.00187475) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994935,-0.000118591) , 
2, 0.918645, 1, 0, 0.980415,-0.000204168) , 
2, 0.576923, 1, 0, 0.883685,-0.000118633) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0990438,0.000429134) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125324,-0.00137739) , 
0, 0.590268, 1, 0, 0.104825,-3.65223e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0274564,0.00321073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00543478,0.00168725) , 
0, 3.1012, 1, 0, 0.019735,0.000519004) , 
0, 1.91958, 1, 0, 0.0793766,0.000129624) , 
3, 2, 1, 0, 0.5,-5.34081e-05)    );
  // itree = 342
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0825551,-4.65494e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.297205,-0.000962591) , 
0, -0.266387, 1, 0, 0.129801,-0.000278126) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0925343,0.00197703) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0171532,-0.00296404) , 
0, 2.18554, 1, 0, 0.041456,2.15015e-05) , 
0, 1.15154, 1, 0, 0.0954895,-0.000161756) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0579981,0.00517319) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468493,-0.000340317) , 
1, 1, 1, 0, 0.341784,-0.00103981) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875307,-0.00133798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991749,0.00176537) , 
2, 0.886103, 1, 0, 0.968695,-4.65989e-05) , 
2, 0.576926, 1, 0, 0.793166,0.0001169) , 
2, 0.153846, 1, 0, 0.5,-1.92313e-07)    );
  // itree = 343
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894599,0.000124924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943873,-0.00104124) , 
0, 0.253491, 1, 0, 0.910791,-6.04938e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.000659215) , 
0, 1.3132, 1, 0, 0.883685,-0.00011078) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0295869,-0.000233374) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0207634,0.00521007) , 
0, 1.15154, 1, 0, 0.0252398,0.000397355) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153348,0.000702964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0575126,-0.00330566) , 
0, 1.0677, 1, 0, 0.120488,-8.90455e-05) , 
2, -0.69236, 1, 0, 0.0793766,0.000120896) , 
3, 2, 1, 0, 0.5,-5.34943e-05)    );
  // itree = 344
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0594251,2.68245e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.300926,-0.000735191) , 
0, -0.739026, 1, 0, 0.129801,-0.000261649) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0925343,0.00196757) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0171532,-0.00317121) , 
0, 2.18554, 1, 0, 0.041456,-3.46236e-06) , 
0, 1.15154, 1, 0, 0.0954895,-0.000161374) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.372745,-0.00111481) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.410172,0.00157405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973875,-0.00107421) , 
2, 0.576926, 1, 0, 0.839297,0.000194649) , 
0, -1.77998, 1, 0, 0.793166,0.000116404) , 
2, 0.153846, 1, 0, 0.5,-3.19207e-07)    );
  // itree = 345
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202568,-0.000711027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0479838,0.000838809) , 
3, 3, 1, 0, 0.130083,-8.26448e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0551401,0.000775656) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0146167,-0.000759403) , 
0, 2.59901, 1, 0, 0.0293952,3.99088e-05) , 
0, 1.53556, 1, 0, 0.0954895,-0.000129189) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.495587,-0.00123196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.059618,0.00268062) , 
1, 3, 1, 0, 0.364914,-0.00105096) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865887,0.00324692) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989075,0.00069308) , 
2, 0.862327, 1, 0, 0.972875,0.000292752) , 
2, 0.642015, 1, 0, 0.793166,9.31389e-05) , 
2, 0.153846, 1, 0, 0.5,-2.83993e-07)    );
  // itree = 346
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805371,0.00161518) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903101,-0.000514349) , 
1, 2, 1, 0, 0.854472,-9.97501e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.518497,-0.0013267) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.103127,0.000559238) , 
0, 1.91459, 1, 0, 0.261188,-0.000149078) , 
0, 1.18189, 1, 0, 0.637728,8.22357e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00706884,0.0031032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0435441,-0.000576695) , 
0, -2.82941, 1, 0, 0.0240404,3.52645e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.093352,-0.00299976) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167229,-0.000283357) , 
0, -1.44282, 1, 0, 0.129941,-0.000608302) , 
0, -2.1804, 1, 0, 0.0720437,-0.000256456) , 
1, 3, 1, 0, 0.5,-5.36115e-05)    );
  // itree = 347
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383423,0.000296421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.026516,-0.00414942) , 
0, 2.22094, 1, 0, 0.253065,-0.000110934) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94821,0.00235786) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996661,-0.000148125) , 
2, 0.934916, 1, 0, 0.980632,0.000223347) , 
2, 0.576923, 1, 0, 0.637728,6.57997e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00681951,-0.00168549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.04606,0.000706689) , 
2, -9.57692, 1, 0, 0.0240404,2.81368e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.093352,-0.00240727) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167229,-0.000226743) , 
0, -1.44282, 1, 0, 0.129941,-0.000486793) , 
0, -2.1804, 1, 0, 0.0720437,-0.000205274) , 
1, 3, 1, 0, 0.5,-5.4288e-05)    );
  // itree = 348
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,1.06119e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.000269945) , 
0, 0.0166736, 1, 0, 0.532911,0.000160008) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99369,0.00043545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956412,-0.00197575) , 
3, 1, 1, 0, 0.980415,0.000174195) , 
2, 0.576923, 1, 0, 0.883685,-0.000115133) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.248368,-0.000539898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.015964,0.00210797) , 
1, 3, 1, 0, 0.104825,-8.103e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0274564,0.00318886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00543478,0.00241915) , 
0, 3.1012, 1, 0, 0.019735,0.000528837) , 
0, 1.91958, 1, 0, 0.0793766,0.000125761) , 
3, 2, 1, 0, 0.5,-5.39202e-05)    );
  // itree = 349
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994741,-0.00735686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983049,0.00186506) , 
0, 0.50864, 1, 0, 0.990761,-0.000149884) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.690022,0.000521393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.106423,-0.000534343) , 
0, 1.52824, 1, 0, 0.450539,0.000177294) , 
3, 1, 1, 0, 0.637728,-1.26821e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0708832,-0.00063985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17971,-0.00121967) , 
0, -1.77547, 1, 0, 0.123163,-0.000400467) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0060995,0.00163852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0200372,-0.00018677) , 
0, -2.88855, 1, 0, 0.0127523,3.35028e-05) , 
3, 3, 1, 0, 0.0720437,-0.00010298) , 
1, 3, 1, 0, 0.5,-5.43756e-05)    );
  // itree = 350
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202568,-0.000681924) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0479838,0.000447624) , 
3, 3, 1, 0, 0.130083,-8.38598e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0551401,0.000746426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0146167,-0.000363689) , 
0, 2.59901, 1, 0, 0.0293952,7.04966e-05) , 
0, 1.53556, 1, 0, 0.0954895,-0.000146442) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.564396,-0.000936433) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0743854,0.00223908) , 
1, 3, 1, 0, 0.431141,-0.000755421) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.933639,0.00417398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.993011,0.000758415) , 
2, 0.902374, 1, 0, 0.983216,0.000282343) , 
2, 0.804735, 1, 0, 0.793166,0.000105943) , 
2, 0.153846, 1, 0, 0.5,-1.10023e-07)    );
  // itree = 351
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.12923,-0.00120919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0251357,0.000756073) , 
0, 2.17838, 1, 0, 0.0726043,-0.00015002) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965883,0.00152805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.000562505) , 
3, 2, 1, 0, 0.905792,-1.67019e-05) , 
1, 1, 1, 0, 0.637728,-6.19425e-06) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0708832,-0.000866297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17971,-0.00127166) , 
0, -1.77547, 1, 0, 0.123163,-0.000451737) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0060995,0.00121545) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0200372,-0.000263866) , 
0, -2.88855, 1, 0, 0.0127523,1.33115e-05) , 
3, 3, 1, 0, 0.0720437,-0.000103482) , 
1, 3, 1, 0, 0.5,-5.47992e-05)    );
  // itree = 352
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.000331979) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,-0.00123536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,0.000910448) , 
0, 1.47527, 1, 0, 0.91048,-0.000192353) , 
0, -1.27985, 1, 0, 0.883685,-0.000133766) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.152477,-0.000331616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0794965,0.00312083) , 
0, 0.768366, 1, 0, 0.123678,0.000415843) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00971231,0.00638274) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0693031,-0.00223174) , 
2, -9.58006, 1, 0, 0.0355686,-0.00011971) , 
3, 3, 1, 0, 0.0793766,-2.66654e-05) , 
3, 2, 1, 0, 0.5,-5.50409e-05)    );
  // itree = 353
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0329514,-0.00374291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0220932,0.000908273) , 
0, 1.15154, 1, 0, 0.0276082,-0.000280512) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.144409,-0.00177128) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.172626,-0.000423574) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828086,0.0011693) , 
2, 0.186473, 1, 0, 0.657075,0.000175488) , 
2, 0.0385581, 1, 0, 0.623926,7.33836e-05) , 
2, -0.692308, 1, 0, 0.5,-1.62444e-07)    );
  // itree = 354
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894599,6.09234e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943873,-0.00116537) , 
0, 0.253491, 1, 0, 0.910791,-8.53505e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.000860158) , 
0, 1.3132, 1, 0, 0.883685,-0.000149896) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0268688,-0.00132252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.210574,0.00114516) , 
0, -1.47752, 1, 0, 0.108125,0.000343701) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0478608,-0.0039747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0161246,0.002847) , 
0, 2.33315, 1, 0, 0.0264754,-0.000166708) , 
0, 1.53556, 1, 0, 0.0793766,0.000163988) , 
3, 2, 1, 0, 0.5,-5.5533e-05)    );
  // itree = 355
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,-6.2735e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.000332804) , 
0, 0.0166736, 1, 0, 0.532911,0.000154303) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942041,-0.00179879) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994935,-0.000109979) , 
2, 0.918645, 1, 0, 0.980415,-0.000195524) , 
2, 0.576923, 1, 0, 0.883685,-0.000119908) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.152477,-0.00029472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0794965,0.00256581) , 
0, 0.768366, 1, 0, 0.123678,0.000333143) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0460153,0.00217923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0242199,-0.00410362) , 
0, 0.767524, 1, 0, 0.0355686,-6.88087e-05) , 
3, 3, 1, 0, 0.0793766,-2.67264e-05) , 
3, 2, 1, 0, 0.5,-5.52288e-05)    );
  // itree = 356
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0161649,-0.00420036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0384503,0.000637638) , 
0, -1.92062, 1, 0, 0.0276082,-0.000228882) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.144409,-0.00158057) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692929,0.000161248) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.210365,0.00248325) , 
0, 2.0234, 1, 0, 0.657075,0.000150404) , 
2, 0.0385581, 1, 0, 0.623926,5.97471e-05) , 
2, -0.692308, 1, 0, 0.5,-2.35437e-07)    );
  // itree = 357
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875274,-0.000502927) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950035,0.000421265) , 
0, -0.170369, 1, 0, 0.910791,-4.91545e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.000866517) , 
0, 1.3132, 1, 0, 0.883685,-0.000119465) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00718963,0.000251183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0295168,0.00376861) , 
0, -2.86593, 1, 0, 0.0189004,0.000484646) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0348197,0.00311046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138075,-0.000454978) , 
2, -0.69236, 1, 0, 0.1054,-2.19622e-05) , 
0, -1.92062, 1, 0, 0.0793766,0.00013045) , 
3, 2, 1, 0, 0.5,-5.4715e-05)    );
  // itree = 358
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00851435,0.000129866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0109751,-0.00196827) , 
0, 1.15154, 1, 0, 0.00975338,-0.000100531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.075697,-0.00184235) , 
2, -9.65385, 1, 0, 0.0276082,-0.000279928) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.482331,0.00162591) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.729761,-2.61664e-05) , 
0, -1.10879, 1, 0, 0.674455,0.000171446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0805397,-0.00193132) , 
3, 3, 1, 0, 0.623926,-1.88779e-05) , 
2, -0.692308, 1, 0, 0.5,-2.61339e-07)    );
  // itree = 359
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875274,-0.00059095) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950035,0.000343647) , 
0, -0.170369, 1, 0, 0.910791,-7.53584e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.000680297) , 
0, 1.3132, 1, 0, 0.883685,-0.000125339) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0268688,-0.00128298) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.210574,0.00101669) , 
0, -1.47752, 1, 0, 0.108125,0.00029253) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0478608,-0.00337423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0161246,0.0023122) , 
0, 2.33315, 1, 0, 0.0264754,-0.00014945) , 
0, 1.53556, 1, 0, 0.0793766,0.000136911) , 
3, 2, 1, 0, 0.5,-5.48011e-05)    );
  // itree = 360
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206953,0.000798893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971439,-0.00212359) , 
2, 0.576923, 1, 0, 0.575265,0.000124719) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.00253069) , 
0, 2.09682, 1, 0, 0.546317,4.06173e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00326813) , 
0, 2.68762, 1, 0, 0.5,-2.38114e-07)    );
  // itree = 361
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206953,0.000639006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971439,-0.00169457) , 
2, 0.576923, 1, 0, 0.575265,9.98049e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.00202926) , 
0, 2.09682, 1, 0, 0.546317,3.25059e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00263178) , 
0, 2.68762, 1, 0, 0.5,-2.0127e-07)    );
  // itree = 362
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202568,-0.000774029) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0479838,0.000887694) , 
3, 3, 1, 0, 0.130083,-8.40541e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0551401,0.00134046) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0146167,-0.000924481) , 
0, 2.59901, 1, 0, 0.0293952,0.000101814) , 
0, 1.53556, 1, 0, 0.0954895,-0.000122845) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.225445,0.000421511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.474544,-0.00257017) , 
2, 0.291535, 1, 0, 0.316117,-0.000566212) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.903549,0.00516669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.970732,0.000722759) , 
0, -1.29613, 1, 0, 0.962561,0.000321309) , 
2, 0.511838, 1, 0, 0.793166,8.87411e-05) , 
2, 0.153846, 1, 0, 0.5,-1.68106e-07)    );
  // itree = 363
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0255735,0.00143408) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,-0.000567721) , 
1, 1, 1, 0, 0.253065,-1.18534e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.901823,0.00231549) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992304,0.00198606) , 
2, 0.853561, 1, 0, 0.980632,0.000252018) , 
2, 0.576923, 1, 0, 0.637728,6.15799e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0197767,0.000896209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0813731,-0.00433719) , 
0, -2.30831, 1, 0, 0.0383556,-0.000346849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.155644,0.000435333) , 
0, -1.66905, 1, 0, 0.0720437,-0.000191798) , 
1, 3, 1, 0, 0.5,-5.50147e-05)    );
  // itree = 364
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0329514,-0.00300327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0220932,0.000949518) , 
0, 1.15154, 1, 0, 0.0276082,-0.000204734) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.156113,-0.00134783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195977,0.00153936) , 
2, 0.125826, 1, 0, 0.167435,-0.00042031) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929224,0.00210494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137202,-0.00310206) , 
3, 2, 1, 0, 0.833731,-7.91936e-05) , 
2, 0.192389, 1, 0, 0.623926,5.35676e-05) , 
2, -0.692308, 1, 0, 0.5,-1.12389e-07)    );
  // itree = 365
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894599,-0.000109553) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943873,-0.00131077) , 
0, 0.253491, 1, 0, 0.910791,-0.000136225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.000631744) , 
0, 1.3132, 1, 0, 0.883685,-0.000173217) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00718963,0.000503127) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0295168,0.00360997) , 
0, -2.86593, 1, 0, 0.0189004,0.000473344) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.110638,-0.00119102) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.104196,0.000476736) , 
0, -0.857146, 1, 0, 0.1054,6.76163e-05) , 
0, -1.92062, 1, 0, 0.0793766,0.000189679) , 
3, 2, 1, 0, 0.5,-5.45114e-05)    );
  // itree = 366
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,-0.000232815) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.000265589) , 
0, 0.0166736, 1, 0, 0.532911,1.98598e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.942041,-0.00163892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994935,-0.000216638) , 
2, 0.918645, 1, 0, 0.980415,-0.000182248) , 
2, 0.576923, 1, 0, 0.883685,-0.000138562) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0862887,0.00234795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.149755,-0.000336723) , 
0, -0.694025, 1, 0, 0.123678,0.000317274) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.018519,-0.00523775) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.049976,0.00226331) , 
0, -1.15258, 1, 0, 0.0355686,-1.21196e-05) , 
3, 3, 1, 0, 0.0793766,-2.6604e-05) , 
3, 2, 1, 0, 0.5,-5.46261e-05)    );
  // itree = 367
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875274,-0.000585576) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950035,0.000284192) , 
0, -0.170369, 1, 0, 0.910791,-8.11713e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.000461592) , 
0, 1.3132, 1, 0, 0.883685,-0.000110826) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00496318,0.000203918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0285063,0.00305863) , 
0, -2.98409, 1, 0, 0.0189004,0.000431697) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0348197,0.00280853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138075,-0.000396916) , 
2, -0.69236, 1, 0, 0.1054,-1.25762e-05) , 
0, -1.92062, 1, 0, 0.0793766,0.000121082) , 
3, 2, 1, 0, 0.5,-5.35501e-05)    );
  // itree = 368
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00851435,0.000643211) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0109751,-0.0021252) , 
0, 1.15154, 1, 0, 0.00975338,-8.88242e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.075697,-0.00186379) , 
2, -9.65385, 1, 0, 0.0276082,-0.00027394) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72731,-0.000168297) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530211,0.00168117) , 
0, 0.90476, 1, 0, 0.674455,0.000166798) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0805397,-0.00187037) , 
3, 3, 1, 0, 0.623926,-3.58906e-05) , 
2, -0.692308, 1, 0, 0.5,-2.06878e-07)    );
  // itree = 369
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164508,-0.00197643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0593852,0.000417635) , 
0, 2.06196, 1, 0, 0.123601,-0.000530146) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,0.000609509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,0.000652394) , 
0, 2.86859, 1, 0, 0.0137948,8.37283e-05) , 
3, 3, 1, 0, 0.0726043,8.01472e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0734969,-0.00177423) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397943,0.000700809) , 
0, -2.08982, 1, 0, 0.173889,-0.000191903) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904912,-0.000168885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757476,0.000961969) , 
1, 2, 1, 0, 0.826283,9.98247e-05) , 
0, -1.562, 1, 0, 0.637494,7.85776e-05) , 
1, 1, 1, 0, 0.5,-5.37424e-05)    );
  // itree = 370
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206953,0.000718528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971439,-0.00193994) , 
2, 0.576923, 1, 0, 0.575265,0.000110032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.0021876) , 
0, 2.09682, 1, 0, 0.546317,3.72495e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00299908) , 
0, 2.68762, 1, 0, 0.5,-1.76492e-07)    );
  // itree = 371
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206953,0.000574734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971439,-0.00154837) , 
2, 0.576923, 1, 0, 0.575265,8.80502e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.00175361) , 
0, 2.09682, 1, 0, 0.546317,2.98111e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00241382) , 
0, 2.68762, 1, 0, 0.5,-1.49008e-07)    );
  // itree = 372
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0101745,-0.00437479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0524688,0.0023858) , 
0, -2.73299, 1, 0, 0.0282083,0.000126051) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.203343,-0.000600791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0488364,0.000489908) , 
3, 3, 1, 0, 0.130779,-0.000187155) , 
0, -1.5366, 1, 0, 0.0954895,-9.70713e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.244331,-0.00269039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.368477,0.000319669) , 
0, -0.661336, 1, 0, 0.316117,-0.000645065) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.970116,0.000718515) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.910403,0.00522409) , 
0, 1.26798, 1, 0, 0.962561,0.000324099) , 
2, 0.511838, 1, 0, 0.793166,7.01371e-05) , 
2, 0.153846, 1, 0, 0.5,-1.24348e-07)    );
  // itree = 373
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894599,0.000249119) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943873,-0.00108653) , 
0, 0.253491, 1, 0, 0.910791,-3.62075e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.00063886) , 
0, 1.3132, 1, 0, 0.883685,-8.7975e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0145157,0.000109649) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0354728,0.00379165) , 
1, 1, 1, 0, 0.0252398,-0.000248023) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115173,0.000488055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137195,-0.00268688) , 
2, 0.192377, 1, 0, 0.120488,-0.000126732) , 
2, -0.69236, 1, 0, 0.0793766,9.62063e-05) , 
3, 2, 1, 0, 0.5,-5.26321e-05)    );
  // itree = 374
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.202568,-0.000726698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0479838,0.000760112) , 
3, 3, 1, 0, 0.130083,-8.28021e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0551401,0.00094395) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0146167,-0.000905455) , 
0, 2.59901, 1, 0, 0.0293952,4.97742e-05) , 
0, 1.53556, 1, 0, 0.0954895,-0.00013822) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0629998,0.00247948) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.4935,-0.00124897) , 
1, 1, 1, 0, 0.364914,-0.00108965) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865887,0.00314912) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989075,0.00100846) , 
2, 0.862327, 1, 0, 0.972875,0.000306904) , 
2, 0.642015, 1, 0, 0.793166,9.99434e-05) , 
2, 0.153846, 1, 0, 0.5,-1.3353e-07)    );
  // itree = 375
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0329514,-0.0030918) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0220932,0.000939566) , 
0, 1.15154, 1, 0, 0.0276082,-0.000213735) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.156113,-0.00133828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195977,0.00115528) , 
2, 0.125826, 1, 0, 0.167435,-0.000497935) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.239796,0.00367152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903269,0.000155567) , 
2, 0.285578, 1, 0, 0.833731,0.000310504) , 
2, 0.192389, 1, 0, 0.623926,5.59409e-05) , 
2, -0.692308, 1, 0, 0.5,-1.02872e-07)    );
  // itree = 376
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.783369,0.000381488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951061,-0.00055259) , 
0, -1.01809, 1, 0, 0.910791,-5.37025e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.000836246) , 
0, 1.3132, 1, 0, 0.883685,-0.000120644) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0145157,2.35237e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0354728,0.00349024) , 
1, 1, 1, 0, 0.0252398,-0.000249508) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153348,0.000694109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0575126,-0.00288622) , 
0, 1.0677, 1, 0, 0.120488,-3.65386e-05) , 
2, -0.69236, 1, 0, 0.0793766,0.000132006) , 
3, 2, 1, 0, 0.5,-5.29281e-05)    );
  // itree = 377
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0329514,-0.0031135) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0220932,0.00064451) , 
0, 1.15154, 1, 0, 0.0276082,-0.000240831) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.72731,-0.000146566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.530211,0.00157239) , 
0, 0.90476, 1, 0, 0.674455,0.000159242) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0805397,-0.0019101) , 
3, 3, 1, 0, 0.623926,-2.47399e-05) , 
2, -0.692308, 1, 0, 0.5,-1.52911e-07)    );
  // itree = 378
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894599,0.000178284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943873,-0.000986767) , 
0, 0.253491, 1, 0, 0.910791,-4.38075e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.000979731) , 
0, 1.3132, 1, 0, 0.883685,-0.000124943) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172226,0.00202141) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.000508029) , 
1, 1, 1, 0, 0.127787,3.02532e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0125447,0.00103753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0247093,0.00381835) , 
0, -1.77883, 1, 0, 0.015964,0.000333418) , 
1, 3, 1, 0, 0.0793766,-0.000107871) , 
3, 2, 1, 0, 0.5,-5.30055e-05)    );
  // itree = 379
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164508,-0.00198082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0593852,0.000347576) , 
0, 2.06196, 1, 0, 0.123601,-0.000541252) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,0.0005536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,0.000942102) , 
0, 2.86859, 1, 0, 0.0137948,9.20423e-05) , 
3, 3, 1, 0, 0.0726043,8.05403e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.367312,0.000142039) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.835604,-0.00116202) , 
0, -0.743894, 1, 0, 0.474491,-7.10446e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994706,-0.00137244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796812,0.000743635) , 
3, 1, 1, 0, 0.893169,0.000258766) , 
0, -0.189692, 1, 0, 0.637494,7.92573e-05) , 
1, 1, 1, 0, 0.5,-5.32263e-05)    );
  // itree = 380
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00851435,0.000902405) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0109751,-0.0016081) , 
0, 1.15154, 1, 0, 0.00975338,-5.0359e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.075697,-0.00185075) , 
2, -9.65385, 1, 0, 0.0276082,-0.000244315) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.116473,-0.00221722) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.199652,0.000300753) , 
0, -0.68878, 1, 0, 0.167435,-0.00036551) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.929224,0.00190824) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137202,-0.00258792) , 
3, 2, 1, 0, 0.833731,-7.57396e-05) , 
2, 0.192389, 1, 0, 0.623926,6.38973e-05) , 
2, -0.692308, 1, 0, 0.5,-1.5506e-07)    );
  // itree = 381
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875274,-0.00056275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950035,0.000197065) , 
0, -0.170369, 1, 0, 0.910791,-8.68263e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.0010427) , 
0, 1.3132, 1, 0, 0.883685,-0.000167414) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0268688,-0.000951358) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.210574,0.000965979) , 
0, -1.47752, 1, 0, 0.108125,0.000309696) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0429982,0.00242588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0162403,-0.00352673) , 
3, 3, 1, 0, 0.0264754,-0.000372879) , 
0, 1.53556, 1, 0, 0.0793766,0.000183253) , 
3, 2, 1, 0, 0.5,-5.34654e-05)    );
  // itree = 382
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894599,8.64698e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943873,-0.00104531) , 
0, 0.253491, 1, 0, 0.910791,-6.94576e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.00083407) , 
0, 1.3132, 1, 0, 0.883685,-0.000133927) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00496318,0.000484362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0285063,0.0030791) , 
0, -2.98409, 1, 0, 0.0189004,0.000440207) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0348197,0.00298118) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.138075,-0.000350548) , 
2, -0.69236, 1, 0, 0.1054,2.00967e-05) , 
0, -1.92062, 1, 0, 0.0793766,0.000146486) , 
3, 2, 1, 0, 0.5,-5.32486e-05)    );
  // itree = 383
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00861506,-0.00175) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0109148,0.000484538) , 
0, 2.68762, 1, 0, 0.00975338,-4.82012e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.075697,-0.00188964) , 
2, -9.65385, 1, 0, 0.0276082,-0.00024703) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153569,0.000383195) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.188156,-0.00160264) , 
2, 0.103639, 1, 0, 0.167435,-0.000313317) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.239796,0.00295987) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903269,7.13326e-05) , 
2, 0.285578, 1, 0, 0.833731,0.000238264) , 
2, 0.192389, 1, 0, 0.623926,6.45811e-05) , 
2, -0.692308, 1, 0, 0.5,-1.77606e-07)    );
  // itree = 384
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875274,-0.00050155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.950035,0.000290128) , 
0, -0.170369, 1, 0, 0.910791,-6.4106e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.000722929) , 
0, 1.3132, 1, 0, 0.883685,-0.000119439) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00496318,0.000739146) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0285063,0.00262498) , 
0, -2.98409, 1, 0, 0.0189004,0.000382888) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172226,0.00185263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248727,-0.00036879) , 
1, 1, 1, 0, 0.1054,-0.000100807) , 
0, -1.92062, 1, 0, 0.0793766,0.000130599) , 
3, 2, 1, 0, 0.5,-5.29583e-05)    );
  // itree = 385
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164508,-0.00175519) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0593852,0.000116644) , 
0, 2.06196, 1, 0, 0.123601,-0.000503754) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,0.000636481) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,0.000747099) , 
0, 2.86859, 1, 0, 0.0137948,9.0416e-05) , 
3, 3, 1, 0, 0.0726043,8.11199e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0734969,-0.00179659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397943,0.000544998) , 
0, -2.08982, 1, 0, 0.173889,-0.000219464) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904912,-7.01825e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.757476,0.000879886) , 
1, 2, 1, 0, 0.826283,0.000107272) , 
0, -1.562, 1, 0, 0.637494,7.30592e-05) , 
1, 1, 1, 0, 0.5,-5.31238e-05)    );
  // itree = 386
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00851435,0.000924858) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0109751,-0.00181737) , 
0, 1.15154, 1, 0, 0.00975338,-6.08912e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.075697,-0.00169044) , 
2, -9.65385, 1, 0, 0.0276082,-0.000233893) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0755577,-0.00653241) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.281863,0.000206989) , 
0, -2.0037, 1, 0, 0.254716,-0.000212744) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872201,0.00405056) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989623,0.000226215) , 
2, 0.866914, 1, 0, 0.97363,0.000320593) , 
2, 0.653881, 1, 0, 0.623926,6.11597e-05) , 
2, -0.692308, 1, 0, 0.5,-1.57709e-07)    );
  // itree = 387
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0161649,-0.00313625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226611,0.00300641) , 
2, -0.692308, 1, 0, 0.102678,0.000284268) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303844,0.00106896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0320168,-0.00466906) , 
0, 2.0673, 1, 0, 0.211346,0.000260505) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95924,-0.00957866) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975422,-0.000983008) , 
0, -1.01969, 1, 0, 0.972941,-0.000395652) , 
2, 0.576923, 1, 0, 0.582353,-5.91381e-05) , 
0, -1.92062, 1, 0, 0.5,-1.80736e-07)    );
  // itree = 388
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0161649,-0.00252367) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226611,0.00240077) , 
2, -0.692308, 1, 0, 0.102678,0.000227187) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.131939,-0.000451855) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425922,0.00187613) , 
2, 0.170076, 1, 0, 0.211346,0.000208164) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95924,-0.00758509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975422,-0.000785426) , 
0, -1.01969, 1, 0, 0.972941,-0.00031625) , 
2, 0.576923, 1, 0, 0.582353,-4.73012e-05) , 
0, -1.92062, 1, 0, 0.5,-1.75951e-07)    );
  // itree = 389
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.000299019) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,-0.00109066) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,0.000984206) , 
0, 1.47527, 1, 0, 0.91048,-0.000153843) , 
0, -1.27985, 1, 0, 0.883685,-0.000103965) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0145157,0.000575884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0354728,0.00421869) , 
1, 1, 1, 0, 0.0252398,-0.000243398) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115173,0.000477902) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137195,-0.00282676) , 
2, 0.192377, 1, 0, 0.120488,-0.000151442) , 
2, -0.69236, 1, 0, 0.0793766,0.000113778) , 
3, 2, 1, 0, 0.5,-5.16405e-05)    );
  // itree = 390
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.783369,0.000543937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951061,-0.000535625) , 
0, -1.01809, 1, 0, 0.910791,-2.9818e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.000646328) , 
0, 1.3132, 1, 0, 0.883685,-8.31514e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0990438,0.000411396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125324,-0.00154963) , 
0, 0.590268, 1, 0, 0.104825,-6.90556e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0109299,0.00176953) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.029787,0.00318009) , 
2, -9.57721, 1, 0, 0.019735,0.000465781) , 
0, 1.91958, 1, 0, 0.0793766,9.09028e-05) , 
3, 2, 1, 0, 0.5,-5.25857e-05)    );
  // itree = 391
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0329514,-0.00239644) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0220932,0.000715477) , 
0, 1.15154, 1, 0, 0.0276082,-0.000165702) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0755577,-0.00637212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.281863,4.7979e-05) , 
0, -2.0037, 1, 0, 0.254716,-0.000317312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872201,0.00413751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989623,0.00108268) , 
2, 0.866914, 1, 0, 0.97363,0.000384865) , 
2, 0.653881, 1, 0, 0.623926,4.33027e-05) , 
2, -0.692308, 1, 0, 0.5,-1.32466e-07)    );
  // itree = 392
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0161649,-0.00242038) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226611,0.00258769) , 
2, -0.692308, 1, 0, 0.102678,0.000269111) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303844,0.000866732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0320168,-0.00431057) , 
0, 2.0673, 1, 0, 0.211346,0.000169515) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.917283,-0.00252678) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994529,-0.000509112) , 
2, 0.918645, 1, 0, 0.972941,-0.00029334) , 
2, 0.576923, 1, 0, 0.582353,-5.59621e-05) , 
0, -1.92062, 1, 0, 0.5,-1.52064e-07)    );
  // itree = 393
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989147,-0.00275778) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39784,0.000309209) , 
3, 1, 1, 0, 0.587071,-2.90131e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313126,-0.00263432) , 
0, 1.74234, 1, 0, 0.565771,-4.45983e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702364,0.00259937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00741413,-0.00366765) , 
0, 2.924, 1, 0, 0.039065,0.000310895) , 
0, 2.3036, 1, 0, 0.5,-2.07246e-07)    );
  // itree = 394
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582064,-0.000184301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67774,0.00216853) , 
0, 0.897004, 1, 0, 0.592348,4.19803e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475224,-0.00191596) , 
0, 1.38785, 1, 0, 0.581892,-4.6049e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0291695,-0.00222245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00548765,0.00201496) , 
0, 3.10149, 1, 0, 0.0173694,-0.000238919) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.223382,0.00193473) , 
2, -0.692308, 1, 0, 0.101956,0.000222739) , 
0, 1.91958, 1, 0, 0.5,-1.85335e-07)    );
  // itree = 395
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0161649,-0.00196813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226611,0.00209232) , 
2, -0.692308, 1, 0, 0.102678,0.000217923) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.472717,-0.00137377) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.716418,0.000918341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.5675,-0.000167136) , 
0, -0.65261, 1, 0, 0.59297,1.6513e-05) , 
0, -1.38886, 1, 0, 0.582353,-4.53724e-05) , 
0, -1.92062, 1, 0, 0.5,-1.68637e-07)    );
  // itree = 396
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.21416,0.000289224) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973371,-0.000748679) , 
2, 0.576923, 1, 0, 0.587071,4.78011e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313126,-0.00219382) , 
0, 1.74234, 1, 0, 0.565771,-3.68242e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702364,0.00212625) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00741413,-0.00297125) , 
0, 2.924, 1, 0, 0.039065,0.000256854) , 
0, 2.3036, 1, 0, 0.5,-1.52066e-07)    );
  // itree = 397
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.433447,0.000963334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985481,0.000782583) , 
2, 0.576923, 1, 0, 0.808495,0.000401731) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.36989,-8.27745e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888704,-0.00327283) , 
0, -0.266394, 1, 0, 0.484522,-0.000294579) , 
1, 2, 1, 0, 0.590497,-2.81342e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559244,0.00181104) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.272926,-0.00111257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0220662,0.000776136) , 
0, 2.49225, 1, 0, 0.13573,-0.000160751) , 
0, 1.74235, 1, 0, 0.268901,0.000170091) , 
0, 1.15154, 1, 0, 0.5,-1.44685e-07)    );
  // itree = 398
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582064,-0.000147345) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67774,0.00155563) , 
0, 0.897004, 1, 0, 0.592348,2.47071e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475224,-0.00158416) , 
0, 1.38785, 1, 0, 0.581892,-4.71641e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0291695,-0.0020769) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00548765,0.00208581) , 
0, 3.10149, 1, 0, 0.0173694,-0.000217652) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.223382,0.00189862) , 
2, -0.692308, 1, 0, 0.101956,0.000228697) , 
0, 1.91958, 1, 0, 0.5,-9.36702e-08)    );
  // itree = 399
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822021,0.00127814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479884,-0.000504567) , 
1, 2, 1, 0, 0.587465,-2.76136e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621943,-0.00159563) , 
0, 1.03338, 1, 0, 0.591018,-4.74437e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.412546,0.00216916) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.170283,-0.00210275) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0142722,0.00188666) , 
3, 3, 1, 0, 0.0760858,-0.000176981) , 
0, 2.0673, 1, 0, 0.180066,0.000166343) , 
0, 1.53556, 1, 0, 0.5,-9.39965e-08)    );
  // itree = 400
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00427016,-0.00121956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0348714,-0.00138738) , 
0, -3.08413, 1, 0, 0.0197558,-0.000206161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.233857,0.00189318) , 
0, -2.51145, 1, 0, 0.102678,0.00020578) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.131939,-0.000567737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425922,0.00164311) , 
2, 0.170076, 1, 0, 0.211346,0.000103425) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979682,-0.00395774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958129,0.00195151) , 
0, 0.601772, 1, 0, 0.972941,-0.000196663) , 
2, 0.576923, 1, 0, 0.582353,-4.27611e-05) , 
0, -1.92062, 1, 0, 0.5,-9.05108e-08)    );
  // itree = 401
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.281659,-0.00137998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.708455,0.00265046) , 
0, -1.67945, 1, 0, 0.525513,0.000416103) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00674404,0.00664144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0415839,-0.00448482) , 
0, -2.88068, 1, 0, 0.0234526,-0.000496025) , 
3, 3, 1, 0, 0.361656,-2.01899e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849119,-0.00223653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57523,0.000708285) , 
0, 0.514178, 1, 0, 0.701399,-0.000234717) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0885854,0.000315215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0116231,0.0102592) , 
0, 2.77655, 1, 0, 0.0467023,0.000648763) , 
3, 3, 1, 0, 0.575127,-3.89362e-05) , 
0, -0.768557, 1, 0, 0.5,-1.02802e-08)    );
  // itree = 402
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.421142,0.00135507) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.831503,-0.00127521) , 
0, -1.18549, 1, 0, 0.680258,-8.64094e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00571621,0.00482002) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0716817,0.00290925) , 
0, -2.92517, 1, 0, 0.0415054,0.000815431) , 
3, 3, 1, 0, 0.544994,-2.66171e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.755313,-2.9189e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481002,-0.00234016) , 
0, 1.30375, 1, 0, 0.656535,-0.000422649) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172017,-0.00206379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.211019,0.00286797) , 
2, -0.692308, 1, 0, 0.0919531,0.000304822) , 
0, 1.97867, 1, 0, 0.438968,-0.000142311) , 
0, 0.383504, 1, 0, 0.5,-2.00867e-07)    );
  // itree = 403
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164508,-0.00160474) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0593852,0.00015997) , 
0, 2.06196, 1, 0, 0.123601,-0.000454403) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,0.00096042) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,0.00106229) , 
0, 2.86859, 1, 0, 0.0137948,0.00013304) , 
3, 3, 1, 0, 0.0726043,8.14873e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.178171,0.000111892) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614713,-0.00105339) , 
0, 0.153386, 1, 0, 0.2523,-0.000251553) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898078,0.00349306) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991935,0.00196554) , 
2, 0.853561, 1, 0, 0.979781,0.000333302) , 
2, 0.576923, 1, 0, 0.637494,5.81223e-05) , 
1, 1, 1, 0, 0.5,-5.319e-05)    );
  // itree = 404
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.894599,0.000157555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.943873,-0.00117876) , 
0, 0.253491, 1, 0, 0.910791,-6.46442e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.000437807) , 
0, 1.3132, 1, 0, 0.883685,-9.44574e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0145157,4.58142e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0354728,0.00428208) , 
1, 1, 1, 0, 0.0252398,-0.000251144) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115173,0.000421199) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137195,-0.00258878) , 
2, 0.192377, 1, 0, 0.120488,-0.000146728) , 
2, -0.69236, 1, 0, 0.0793766,0.000103255) , 
3, 2, 1, 0, 0.5,-5.32156e-05)    );
  // itree = 405
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.199735,-0.00264082) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590143,0.00224858) , 
0, -1.97481, 1, 0, 0.429785,0.000186904) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00571653,0.00292634) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0317158,-0.0057106) , 
0, -2.92519, 1, 0, 0.018519,-0.000700948) , 
3, 3, 1, 0, 0.26959,-1.99247e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923888,-0.00455531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420209,-4.74821e-05) , 
0, -0.207253, 1, 0, 0.484774,-0.000212779) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.43231,0.00176765) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984928,-0.000168098) , 
2, 0.576923, 1, 0, 0.8083,0.000628619) , 
1, 2, 1, 0, 0.590506,-4.32685e-05) , 
0, -1.15258, 1, 0, 0.5,-1.62703e-07)    );
  // itree = 406
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206953,0.000474792) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971439,-0.00107008) , 
2, 0.576923, 1, 0, 0.575265,8.72367e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.00177179) , 
0, 2.09682, 1, 0, 0.546317,2.86023e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00232071) , 
0, 2.68762, 1, 0, 0.5,-1.85556e-07)    );
  // itree = 407
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.849698,-0.00131135) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0188351,0.00212897) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.096962,-0.00033032) , 
0, -2.33425, 1, 0, 0.0517596,0.000134039) , 
1, 3, 1, 0, 0.26959,-2.00555e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.791294,0.000724914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.215259,-0.00158058) , 
0, 1.21066, 1, 0, 0.484774,-0.000152529) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.43231,0.00132088) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984928,7.99398e-05) , 
2, 0.576923, 1, 0, 0.8083,0.000483102) , 
1, 2, 1, 0, 0.590506,-4.41747e-05) , 
0, -1.15258, 1, 0, 0.5,-1.60195e-07)    );
  // itree = 408
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910454,0.00252177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724975,-0.000167906) , 
0, 0.0863094, 1, 0, 0.808495,0.000371181) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.421415,-0.000401126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92127,-0.00422136) , 
0, 0.206244, 1, 0, 0.484522,-0.000315817) , 
1, 2, 1, 0, 0.590497,-2.93761e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559244,0.00209111) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.272926,-0.000927089) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0220662,0.000653605) , 
0, 2.49225, 1, 0, 0.13573,-0.000132952) , 
0, 1.74235, 1, 0, 0.268901,0.000232087) , 
0, 1.15154, 1, 0, 0.5,-1.49511e-07)    );
  // itree = 409
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910454,0.00202113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724975,-0.000134321) , 
0, 0.0863094, 1, 0, 0.808495,0.000297013) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.632303,-0.00101353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0343601,0.00146295) , 
3, 3, 1, 0, 0.484522,-4.36166e-05) , 
1, 2, 1, 0, 0.590497,-2.93491e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559244,0.0016726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.272926,-0.00074205) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0220662,0.000522267) , 
0, 2.49225, 1, 0, 0.13573,-0.000106377) , 
0, 1.74235, 1, 0, 0.268901,0.000185654) , 
0, 1.15154, 1, 0, 0.5,-8.37391e-08)    );
  // itree = 410
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0407469,0.00542239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0177376,-0.00284141) , 
0, 1.92617, 1, 0, 0.0255735,0.000296366) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,-0.000750372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0237983,0.001041) , 
1, 3, 1, 0, 0.2523,-7.52497e-05) , 
1, 1, 1, 0, 0.164125,-9.53403e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923542,0.00202811) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99639,0.0070949) , 
2, 0.967459, 1, 0, 0.954788,0.000504703) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986906,-0.00681682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967513,0.00173759) , 
0, 0.15216, 1, 0, 0.97451,-3.41262e-05) , 
0, -0.631314, 1, 0, 0.968695,0.000124763) , 
2, 0.576923, 1, 0, 0.5,-6.48432e-08)    );
  // itree = 411
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582064,-0.000134791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67774,0.00104311) , 
0, 0.897004, 1, 0, 0.592348,3.66316e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475224,-0.00150162) , 
0, 1.38785, 1, 0, 0.581892,-6.27419e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0291695,-0.00121686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00548765,0.000899677) , 
0, 3.10149, 1, 0, 0.0173694,-0.000134712) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.223382,0.00204627) , 
2, -0.692308, 1, 0, 0.101956,0.000304289) , 
0, 1.91958, 1, 0, 0.5,-1.15053e-07)    );
  // itree = 412
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822021,0.00106435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479884,-0.000412703) , 
1, 2, 1, 0, 0.587465,-2.89816e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621943,-0.00177116) , 
0, 1.03338, 1, 0, 0.591018,-5.96223e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.412546,0.00207032) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.170283,-0.00160581) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0142722,0.00179296) , 
3, 3, 1, 0, 0.0760858,-0.000114959) , 
0, 2.0673, 1, 0, 0.180066,0.000209104) , 
0, 1.53556, 1, 0, 0.5,-1.0453e-07)    );
  // itree = 413
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.170303,-0.00131201) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623175,0.000138536) , 
1, 1, 1, 0, 0.592348,-2.79807e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475224,-0.00136892) , 
0, 1.38785, 1, 0, 0.581892,-5.137e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0291695,-0.00113536) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00548765,0.000427783) , 
0, 3.10149, 1, 0, 0.0173694,-0.000136603) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.223382,0.00175675) , 
2, -0.692308, 1, 0, 0.101956,0.000249127) , 
0, 1.91958, 1, 0, 0.5,-9.58121e-08)    );
  // itree = 414
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68428,-0.000442252) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0425157,0.00319211) , 
3, 3, 1, 0, 0.550645,-2.80575e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993106,0.00607587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595829,-0.00146607) , 
3, 1, 1, 0, 0.768281,-0.000265412) , 
0, 0.442572, 1, 0, 0.590497,-6.02105e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559244,0.00149334) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.272926,-0.000944501) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0220662,0.000902165) , 
0, 2.49225, 1, 0, 0.13573,-0.000113483) , 
0, 1.74235, 1, 0, 0.268901,0.000153438) , 
0, 1.15154, 1, 0, 0.5,-8.98368e-08)    );
  // itree = 415
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582064,-0.000113027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67774,0.0010611) , 
0, 0.897004, 1, 0, 0.592348,1.23104e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475224,-0.00125503) , 
0, 1.38785, 1, 0, 0.581892,-4.4005e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0291695,-0.00104026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00548765,0.00016103) , 
0, 3.10149, 1, 0, 0.0173694,-0.000131263) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.223382,0.00154834) , 
2, -0.692308, 1, 0, 0.101956,0.000213373) , 
0, 1.91958, 1, 0, 0.5,-8.83495e-08)    );
  // itree = 416
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989147,-0.00217885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39784,0.000199275) , 
3, 1, 1, 0, 0.587071,-3.07852e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313126,-0.00159185) , 
0, 1.74234, 1, 0, 0.565771,-3.32902e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702364,0.00213599) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00741413,-0.00362828) , 
0, 2.924, 1, 0, 0.039065,0.000232679) , 
0, 2.3036, 1, 0, 0.5,-7.82006e-08)    );
  // itree = 417
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0733353,-0.00301723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0133568,-0.000169806) , 
3, 3, 1, 0, 0.036949,-1.9357e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.131939,-0.000518635) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425922,0.00141339) , 
2, 0.170076, 1, 0, 0.211346,7.5301e-05) , 
0, -1.92062, 1, 0, 0.164125,-8.29477e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.875307,-0.000655742) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.995881,-0.00409007) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980597,0.00878832) , 
3, 1, 1, 0, 0.991749,0.00025669) , 
2, 0.886103, 1, 0, 0.968695,0.000115563) , 
2, 0.576923, 1, 0, 0.5,-7.74441e-08)    );
  // itree = 418
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0161649,-0.0027072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226611,0.00254673) , 
2, -0.692308, 1, 0, 0.102678,0.000235832) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.472717,-0.0014744) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.491723,-0.000519826) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780759,0.00098116) , 
1, 2, 1, 0, 0.59297,1.25922e-05) , 
0, -1.38886, 1, 0, 0.582353,-4.87814e-05) , 
0, -1.92062, 1, 0, 0.5,8.22559e-08)    );
  // itree = 419
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.822021,0.00104125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.479884,-0.000410549) , 
1, 2, 1, 0, 0.587465,-2.8976e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.621943,-0.00155083) , 
0, 1.03338, 1, 0, 0.591018,-5.10102e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.412546,0.00204842) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.170283,-0.00179438) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0142722,0.00174102) , 
3, 3, 1, 0, 0.0760858,-0.000140039) , 
0, 2.0673, 1, 0, 0.180066,0.000179477) , 
0, 1.53556, 1, 0, 0.5,3.84065e-08)    );
  // itree = 420
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0161649,-0.00209684) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226611,0.00211116) , 
2, -0.692308, 1, 0, 0.102678,0.000209432) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.472717,-0.00111906) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.491723,-0.000496179) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780759,0.000868659) , 
1, 2, 1, 0, 0.59297,7.63205e-07) , 
0, -1.38886, 1, 0, 0.582353,-4.33877e-05) , 
0, -1.92062, 1, 0, 0.5,1.75606e-08)    );
  // itree = 421
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910454,0.00159335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724975,-0.000248352) , 
0, 0.0863094, 1, 0, 0.808495,0.000196337) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.421415,-0.000168067) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92127,-0.00323553) , 
0, 0.206244, 1, 0, 0.484522,-0.000193697) , 
1, 2, 1, 0, 0.590497,-2.93285e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559244,0.00139765) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245967,-0.000672711) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0157318,0.00131127) , 
0, 2.61722, 1, 0, 0.13573,-6.93348e-05) , 
0, 1.74235, 1, 0, 0.268901,0.000168818) , 
0, 1.15154, 1, 0, 0.5,-2.83043e-09)    );
  // itree = 422
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.582064,-0.000130239) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67774,0.00103228) , 
0, 0.897004, 1, 0, 0.592348,4.74227e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475224,-0.00117726) , 
0, 1.38785, 1, 0, 0.581892,-4.74514e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0291695,-0.00103676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00548765,0.00062477) , 
0, 3.10149, 1, 0, 0.0173694,-0.000118446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.223382,0.00160077) , 
2, -0.692308, 1, 0, 0.101956,0.000230717) , 
0, 1.91958, 1, 0, 0.5,1.28831e-08)    );
  // itree = 423
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.936824,-0.00104508) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770218,0.00118942) , 
0, -0.406005, 1, 0, 0.815275,0.000310632) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530684,-0.00426521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.157108,0.000219482) , 
0, 1.5432, 1, 0, 0.236608,-0.000416302) , 
0, 1.09337, 1, 0, 0.500022,-8.53955e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.339664,-0.000137577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816304,-0.00236851) , 
0, -0.484905, 1, 0, 0.411036,-0.000204271) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922593,0.0042866) , 
0, 0.103085, 1, 0, 0.499978,8.53481e-05) , 
1, 2, 1, 0, 0.5,-5.49946e-05)    );
  // itree = 424
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68428,-0.000409734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0425157,0.00290201) , 
3, 3, 1, 0, 0.550645,-2.79054e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993106,0.00548788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595829,-0.00149143) , 
3, 1, 1, 0, 0.768281,-0.000269467) , 
0, 0.442572, 1, 0, 0.590497,-6.89296e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559244,0.00159172) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245967,-0.000753806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0157318,0.00110433) , 
0, 2.61722, 1, 0, 0.13573,-0.000102178) , 
0, 1.74235, 1, 0, 0.268901,0.000176177) , 
0, 1.15154, 1, 0, 0.5,4.34176e-08)    );
  // itree = 425
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.155024,-0.00069648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573678,0.0026293) , 
0, -1.64796, 1, 0, 0.255713,0.000150399) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.78001,-0.00138143) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80551,0.000300097) , 
0, -0.211847, 1, 0, 0.794747,-0.000180565) , 
0, -1.21167, 1, 0, 0.590497,-5.51566e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.558271,0.00223444) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150402,-0.00258948) , 
0, 2.13112, 1, 0, 0.428874,0.00040804) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0322748,-0.00235659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00743765,0.00120646) , 
0, 2.92409, 1, 0, 0.019658,-0.000275253) , 
3, 3, 1, 0, 0.268901,0.000196978) , 
0, 1.15154, 1, 0, 0.5,2.03442e-08)    );
  // itree = 426
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.170303,-0.00120808) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.623175,0.000123305) , 
1, 1, 1, 0, 0.592348,-2.79351e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.475224,-0.00130881) , 
0, 1.38785, 1, 0, 0.581892,-5.07508e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0291695,-0.000608951) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00548765,6.87809e-05) , 
0, 3.10149, 1, 0, 0.0173694,-7.72882e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.223382,0.00155697) , 
2, -0.692308, 1, 0, 0.101956,0.000246622) , 
0, 1.91958, 1, 0, 0.5,-9.60478e-09)    );
  // itree = 427
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706679,-0.000170136) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.439952,0.00186281) , 
0, 1.4935, 1, 0, 0.674989,5.23736e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0124059,0.00426178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0912118,-0.00293819) , 
0, -2.46711, 1, 0, 0.0478378,-0.000458515) , 
3, 3, 1, 0, 0.565771,-3.36626e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702364,0.00224214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00741413,-0.00347856) , 
0, 2.924, 1, 0, 0.039065,0.000256346) , 
0, 2.3036, 1, 0, 0.5,-1.6975e-08)    );
  // itree = 428
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.914139,0.00218881) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.735542,-4.34536e-05) , 
0, 0.0438074, 1, 0, 0.815275,0.00034129) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.456353,-0.00293903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0843839,0.00106264) , 
0, 1.99301, 1, 0, 0.236608,-0.000442436) , 
0, 1.09337, 1, 0, 0.500022,-8.56776e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.564558,0.000134018) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0281433,-0.00308927) , 
3, 3, 1, 0, 0.411036,-3.28506e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922593,0.00346461) , 
0, 0.103085, 1, 0, 0.499978,8.54319e-05) , 
1, 2, 1, 0, 0.5,-5.63671e-05)    );
  // itree = 429
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.17247,-0.00138506) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0129061,0.000772596) , 
3, 3, 1, 0, 0.0767167,-1.73117e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408737,0.00199912) , 
0, -2.06834, 1, 0, 0.179235,0.00017827) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628165,-0.00153253) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.480043,-0.000415075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822589,0.00106273) , 
1, 2, 1, 0, 0.587539,1.89777e-05) , 
0, -1.03438, 1, 0, 0.591743,-5.10998e-05) , 
0, -1.5366, 1, 0, 0.5,-8.73472e-08)    );
  // itree = 430
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00427016,-0.0048891) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0348714,-0.00120364) , 
0, -3.08413, 1, 0, 0.0197558,-0.000263244) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.233857,0.00213386) , 
0, -2.51145, 1, 0, 0.102678,0.000212352) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.472717,-0.00112488) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.491723,-0.000367628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780759,0.000651342) , 
1, 2, 1, 0, 0.59297,1.5775e-05) , 
0, -1.38886, 1, 0, 0.582353,-4.41035e-05) , 
0, -1.92062, 1, 0, 0.5,-7.40608e-08)    );
  // itree = 431
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92875,-0.00108421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749345,0.00104716) , 
0, -0.21804, 1, 0, 0.808495,0.000212479) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.421415,-5.71053e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92127,-0.0043291) , 
0, 0.206244, 1, 0, 0.484522,-0.000199691) , 
1, 2, 1, 0, 0.590497,-2.92436e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559244,0.00161203) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245967,-0.0008398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0157318,0.00110946) , 
0, 2.61722, 1, 0, 0.13573,-0.0001219) , 
0, 1.74235, 1, 0, 0.268901,0.00016536) , 
0, 1.15154, 1, 0, 0.5,-7.97256e-08)    );
  // itree = 432
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97136,-0.00350398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855959,0.000761791) , 
1, 2, 1, 0, 0.897429,-4.29917e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815882,0.000474203) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979743,-0.00855553) , 
1, 2, 1, 0, 0.862789,-0.000196656) , 
0, 0.340805, 1, 0, 0.883685,-8.79884e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00972059,0.00244964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0680276,0.00314441) , 
2, -9.65385, 1, 0, 0.0252398,0.000484543) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0197912,0.00309723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.185074,-0.000753679) , 
1, 1, 1, 0, 0.120488,7.29897e-05) , 
2, -0.69236, 1, 0, 0.0793766,9.63769e-05) , 
3, 2, 1, 0, 0.5,-5.46905e-05)    );
  // itree = 433
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164508,-0.00188768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0593852,0.000734539) , 
0, 2.06196, 1, 0, 0.123601,-0.000467307) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,0.000890359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,0.00121872) , 
0, 2.86859, 1, 0, 0.0137948,0.00013403) , 
3, 3, 1, 0, 0.0726043,8.14804e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,-0.000520021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0237983,0.000919641) , 
1, 3, 1, 0, 0.2523,-7.51096e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898078,0.00333872) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991935,0.00148158) , 
2, 0.853561, 1, 0, 0.979781,0.000296543) , 
2, 0.576923, 1, 0, 0.637494,6.05094e-05) , 
1, 1, 1, 0, 0.5,-5.52552e-05)    );
  // itree = 434
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383423,0.000193659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.026516,-0.00355683) , 
0, 2.22094, 1, 0, 0.253065,-0.000137798) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94821,0.00249704) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996661,0.00120463) , 
2, 0.934916, 1, 0, 0.980632,0.000264225) , 
2, 0.576923, 1, 0, 0.637728,7.47509e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0708832,-0.00113827) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.17971,-0.00124507) , 
0, -1.77547, 1, 0, 0.123163,-0.000494066) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0060995,-0.000287341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0200372,0.00087504) , 
0, -2.88855, 1, 0, 0.0127523,7.16236e-05) , 
3, 3, 1, 0, 0.0720437,-0.000104772) , 
1, 3, 1, 0, 0.5,-5.54552e-05)    );
  // itree = 435
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0255735,0.00112009) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,-0.000431591) , 
1, 1, 1, 0, 0.253065,-7.46582e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94821,0.00200416) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996661,0.00096605) , 
2, 0.934916, 1, 0, 0.980632,0.000211455) , 
2, 0.576923, 1, 0, 0.637728,5.97736e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00681951,-0.00283512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.04606,0.00108299) , 
2, -9.57692, 1, 0, 0.0240404,3.09654e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.093352,-0.00210291) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167229,-0.000291681) , 
0, -1.44282, 1, 0, 0.129941,-0.000447155) , 
0, -2.1804, 1, 0, 0.0720437,-0.00018576) , 
1, 3, 1, 0, 0.5,-5.53838e-05)    );
  // itree = 436
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164508,-0.00197085) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0593852,0.000586857) , 
0, 2.06196, 1, 0, 0.123601,-0.000510402) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,0.000912113) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,0.0014655) , 
0, 2.86859, 1, 0, 0.0137948,0.000147065) , 
3, 3, 1, 0, 0.0726043,8.13884e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0689252,-0.000183946) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.447902,0.000896638) , 
0, -0.532769, 1, 0, 0.152763,0.000316809) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454898,-0.00179653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977914,0.00287705) , 
2, 0.544384, 1, 0, 0.867893,-5.32899e-05) , 
2, 0.153846, 1, 0, 0.637494,6.59476e-05) , 
1, 1, 1, 0, 0.5,-5.47485e-05)    );
  // itree = 437
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,-3.69943e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.000523925) , 
0, 0.0166736, 1, 0, 0.532911,0.000277373) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99369,0.00152743) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956412,-0.00260083) , 
3, 1, 1, 0, 0.980415,0.000153898) , 
2, 0.576923, 1, 0, 0.883685,-0.000108293) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0295869,0.000335512) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0207634,0.00455985) , 
0, 1.15154, 1, 0, 0.0252398,0.000396506) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115173,0.000412937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137195,-0.00216298) , 
2, 0.192377, 1, 0, 0.120488,-9.21135e-05) , 
2, -0.69236, 1, 0, 0.0793766,0.000118785) , 
3, 2, 1, 0, 0.5,-5.47058e-05)    );
  // itree = 438
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164508,-0.00148202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0593852,0.000462335) , 
0, 2.06196, 1, 0, 0.123601,-0.000380454) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,0.000142632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,0.000250397) , 
0, 2.86859, 1, 0, 0.0137948,2.41929e-05) , 
3, 3, 1, 0, 0.0726043,8.21267e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.965883,0.00132729) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.000496041) , 
3, 2, 1, 0, 0.905792,-5.94866e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.123163,-0.000780813) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0127523,0.000622931) , 
3, 3, 1, 0, 0.0720437,-0.000103994) , 
1, 3, 1, 0, 0.637494,-3.51609e-05) , 
1, 1, 1, 0, 0.5,-5.47826e-05)    );
  // itree = 439
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,-0.000164072) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.000289732) , 
0, 0.0166736, 1, 0, 0.532911,7.22661e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983915,-0.000228152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96275,-0.00369545) , 
0, 1.0662, 1, 0, 0.980415,-0.000173374) , 
2, 0.576923, 1, 0, 0.883685,-0.000120278) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0862887,0.00226073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.149755,-0.000215136) , 
0, -0.694025, 1, 0, 0.123678,0.000351409) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00971231,0.00467539) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0693031,-0.00165165) , 
2, -9.58006, 1, 0, 0.0355686,-8.52177e-05) , 
3, 3, 1, 0, 0.0793766,-2.67718e-05) , 
3, 2, 1, 0, 0.5,-5.4903e-05)    );
  // itree = 440
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206953,0.000566961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971439,-0.00157194) , 
2, 0.576923, 1, 0, 0.575265,8.37822e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.00127455) , 
0, 2.09682, 1, 0, 0.546317,4.0274e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00321908) , 
0, 2.68762, 1, 0, 0.5,-4.84587e-08)    );
  // itree = 441
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0900628,-0.00116349) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.725376,9.27577e-05) , 
0, -1.99334, 1, 0, 0.591469,-3.05512e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.411231,0.00219803) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.00102084) , 
0, 2.09682, 1, 0, 0.294856,0.000381876) , 
0, 1.50602, 1, 0, 0.546317,3.22305e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00259206) , 
0, 2.68762, 1, 0, 0.5,-4.97015e-08)    );
  // itree = 442
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.000103158) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,-0.000948812) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,0.00110485) , 
0, 1.47527, 1, 0, 0.91048,-0.000111844) , 
0, -1.27985, 1, 0, 0.883685,-8.59425e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.248368,-0.000535353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.015964,0.00193166) , 
1, 3, 1, 0, 0.104825,-8.32891e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0109299,0.000890905) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.029787,0.00351037) , 
2, -9.57721, 1, 0, 0.019735,0.000455274) , 
0, 1.91958, 1, 0, 0.0793766,9.40785e-05) , 
3, 2, 1, 0, 0.5,-5.58055e-05)    );
  // itree = 443
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206953,0.00046101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971439,-0.00124345) , 
2, 0.576923, 1, 0, 0.575265,7.04936e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.00121257) , 
0, 2.09682, 1, 0, 0.546317,2.97161e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00239893) , 
0, 2.68762, 1, 0, 0.5,-1.00374e-07)    );
  // itree = 444
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0255735,0.000898939) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,-0.000521021) , 
1, 1, 1, 0, 0.253065,-7.72005e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94821,0.00249472) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996661,0.00140606) , 
2, 0.934916, 1, 0, 0.980632,0.000267546) , 
2, 0.576923, 1, 0, 0.637728,4.7714e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0197767,0.000818036) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0813731,-0.00360055) , 
0, -2.30831, 1, 0, 0.0383556,-0.000278529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.155644,0.000388248) , 
0, -1.66905, 1, 0, 0.0720437,-0.000148615) , 
1, 3, 1, 0, 0.5,-5.63399e-05)    );
  // itree = 445
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0115086,-0.00257196) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.225793,0.00144436) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670016,-0.000719746) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.554974,0.000146328) , 
0, -0.495857, 1, 0, 0.585836,-4.73112e-05) , 
0, -1.80246, 1, 0, 0.546963,2.68297e-05) , 
0, -2.68866, 1, 0, 0.5,-6.86592e-08)    );
  // itree = 446
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153243,0.00042609) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0839303,-0.00320442) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0204405,0.000327969) , 
0, 2.30629, 1, 0, 0.0396723,-0.000300386) , 
0, 1.66686, 1, 0, 0.0726043,-0.000157279) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64822,-0.000643791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.164245,0.000139384) , 
1, 2, 1, 0, 0.2523,-7.56728e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898078,0.00250407) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991935,0.00109299) , 
2, 0.853561, 1, 0, 0.979781,0.00021966) , 
2, 0.576923, 1, 0, 0.637494,5.05031e-05) , 
1, 1, 1, 0, 0.5,-5.59152e-05)    );
  // itree = 447
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,-0.000113509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.000214268) , 
0, 0.0166736, 1, 0, 0.532911,5.7845e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99369,0.00159309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956412,-0.00177831) , 
3, 1, 1, 0, 0.980415,0.00015537) , 
2, 0.576923, 1, 0, 0.883685,-8.70585e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0990438,0.000320484) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.125324,-0.00109346) , 
0, 0.590268, 1, 0, 0.104825,-3.64508e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0109299,0.00095439) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.029787,0.00302649) , 
2, -9.57721, 1, 0, 0.019735,0.00040415) , 
0, 1.91958, 1, 0, 0.0793766,9.53237e-05) , 
3, 2, 1, 0, 0.5,-5.59478e-05)    );
  // itree = 448
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206953,0.00048468) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971439,-0.00136287) , 
2, 0.576923, 1, 0, 0.575265,7.03578e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.00119126) , 
0, 2.09682, 1, 0, 0.546317,3.01971e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00243201) , 
0, 2.68762, 1, 0, 0.5,-5.28688e-08)    );
  // itree = 449
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0329514,-0.00270557) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0220932,0.00117408) , 
0, 1.15154, 1, 0, 0.0276082,-0.000157353) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0755577,-0.00557441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.281863,-1.98848e-05) , 
0, -2.0037, 1, 0, 0.254716,-0.00032087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872201,0.00392479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989623,0.00133188) , 
2, 0.866914, 1, 0, 0.97363,0.000384181) , 
2, 0.653881, 1, 0, 0.623926,4.12202e-05) , 
2, -0.692308, 1, 0, 0.5,-4.70595e-08)    );
  // itree = 450
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0161649,-0.00246898) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226611,0.00236479) , 
2, -0.692308, 1, 0, 0.102678,0.000221664) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303844,0.000716369) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0320168,-0.00356593) , 
0, 2.0673, 1, 0, 0.211346,0.000140433) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95924,-0.00636954) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975422,-0.000450781) , 
0, -1.01969, 1, 0, 0.972941,-0.000242343) , 
2, 0.576923, 1, 0, 0.582353,-4.6034e-05) , 
0, -1.92062, 1, 0, 0.5,-7.43775e-08)    );
  // itree = 451
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.17247,-0.00115964) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0129061,0.000526745) , 
3, 3, 1, 0, 0.0767167,-1.72159e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408737,0.00185051) , 
0, -2.06834, 1, 0, 0.179235,0.000170221) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.768904,-0.000115426) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.481261,-0.00184262) , 
0, 1.30267, 1, 0, 0.724846,-0.00018174) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.205259,0.00326616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0180567,-0.00136106) , 
0, 2.55816, 1, 0, 0.0919358,0.000450355) , 
0, 1.97869, 1, 0, 0.591743,-4.88082e-05) , 
0, -1.5366, 1, 0, 0.5,-9.5487e-08)    );
  // itree = 452
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0161649,-0.00200231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226611,0.00195312) , 
2, -0.692308, 1, 0, 0.102678,0.000187226) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.131939,-0.000490177) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425922,0.00152509) , 
2, 0.170076, 1, 0, 0.211346,0.000112839) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95924,-0.00521152) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975422,-0.000364931) , 
0, -1.01969, 1, 0, 0.972941,-0.000198727) , 
2, 0.576923, 1, 0, 0.582353,-3.89389e-05) , 
0, -1.92062, 1, 0, 0.5,-1.09917e-07)    );
  // itree = 453
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97136,-0.00310216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855959,0.000671383) , 
1, 2, 1, 0, 0.897429,-4.21066e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815882,0.00032851) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979743,-0.00754654) , 
1, 2, 1, 0, 0.862789,-0.000209914) , 
0, 0.340805, 1, 0, 0.883685,-9.19057e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00972059,0.00258566) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0680276,0.00270942) , 
2, -9.65385, 1, 0, 0.0252398,0.000449898) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115173,0.000259853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137195,-0.00214093) , 
2, 0.192377, 1, 0, 0.120488,-0.000164646) , 
2, -0.69236, 1, 0, 0.0793766,0.000100605) , 
3, 2, 1, 0, 0.5,-5.45566e-05)    );
  // itree = 454
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.97136,-0.00247115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.855959,0.000537283) , 
1, 2, 1, 0, 0.897429,-4.21569e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815882,0.000262838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979743,-0.0059659) , 
1, 2, 1, 0, 0.862789,-0.000179383) , 
0, 0.340805, 1, 0, 0.883685,-7.33424e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0145157,0.000162411) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0354728,0.00346091) , 
1, 1, 1, 0, 0.0252398,-0.000260933) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153348,0.000311787) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0575126,-0.00217665) , 
0, 1.0677, 1, 0, 0.120488,-0.000131748) , 
2, -0.69236, 1, 0, 0.0793766,8.03926e-05) , 
3, 2, 1, 0, 0.5,-5.51519e-05)    );
  // itree = 455
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910454,0.00196523) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724975,-0.00015005) , 
0, 0.0863094, 1, 0, 0.808495,0.00028454) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.173417,-0.0017323) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.761001,0.000191735) , 
0, -1.44799, 1, 0, 0.484522,-0.000223692) , 
1, 2, 1, 0, 0.590497,-2.96321e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559244,0.00166218) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245967,-0.000868225) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0157318,0.000636044) , 
0, 2.61722, 1, 0, 0.13573,-0.000160326) , 
0, 1.74235, 1, 0, 0.268901,0.000146731) , 
0, 1.15154, 1, 0, 0.5,1.12902e-08)    );
  // itree = 456
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910454,0.00157446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724975,-0.000120036) , 
0, 0.0863094, 1, 0, 0.808495,0.000227674) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.36989,-8.52574e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888704,-0.0018448) , 
0, -0.266394, 1, 0, 0.484522,-0.000178984) , 
1, 2, 1, 0, 0.590497,-2.9515e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559244,0.00132955) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245967,-0.000694969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0157318,0.000508196) , 
0, 2.61722, 1, 0, 0.13573,-0.000128276) , 
0, 1.74235, 1, 0, 0.268901,0.000117371) , 
0, 1.15154, 1, 0, 0.5,2.64675e-10)    );
  // itree = 457
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87537,0.000133451) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.696892,0.00167177) , 
0, 0.49362, 1, 0, 0.815275,0.000308901) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.456353,-0.00259893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0843839,0.000876241) , 
0, 1.99301, 1, 0, 0.236608,-0.000399937) , 
0, 1.09337, 1, 0, 0.500022,-7.72681e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0718151,-0.00139432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.726835,0.000333795) , 
2, 0.153846, 1, 0, 0.411036,-0.00020926) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922593,0.0042086) , 
0, 0.103085, 1, 0, 0.499978,7.72445e-05) , 
1, 2, 1, 0, 0.5,-5.55274e-05)    );
  // itree = 458
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.155024,-0.000650698) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573678,0.00259446) , 
0, -1.64796, 1, 0, 0.255713,0.0001572) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.78001,-0.00130499) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.80551,0.000211) , 
0, -0.211847, 1, 0, 0.794747,-0.00018857) , 
0, -1.21167, 1, 0, 0.590497,-5.75515e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559244,0.00144404) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0181064,-0.00165432) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.264886,0.000133691) , 
2, -0.692308, 1, 0, 0.13573,-0.000110553) , 
0, 1.74235, 1, 0, 0.268901,0.000147055) , 
0, 1.15154, 1, 0, 0.5,2.48645e-08)    );
  // itree = 459
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.17247,-0.000960966) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0129061,0.000399195) , 
3, 3, 1, 0, 0.0767167,-1.72392e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408737,0.00171464) , 
0, -2.06834, 1, 0, 0.179235,0.000166749) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694833,-0.000976276) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760052,0.00044038) , 
1, 2, 1, 0, 0.724846,-4.08721e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.205259,0.00272027) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0180567,-0.00157657) , 
0, 2.55816, 1, 0, 0.0919358,0.000333492) , 
0, 1.97869, 1, 0, 0.591743,-4.76758e-05) , 
0, -1.5366, 1, 0, 0.5,1.29953e-08)    );
  // itree = 460
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0161649,-0.00200577) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226611,0.00196022) , 
2, -0.692308, 1, 0, 0.102678,0.000187876) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.472717,-0.00106943) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.491723,-0.000369597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.780759,0.000673745) , 
1, 2, 1, 0, 0.59297,1.40369e-05) , 
0, -1.38886, 1, 0, 0.582353,-3.89551e-05) , 
0, -1.92062, 1, 0, 0.5,-1.17618e-08)    );
  // itree = 461
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92875,-0.000535479) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749345,0.000963642) , 
0, -0.21804, 1, 0, 0.808495,0.000246447) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.36989,-6.43254e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888704,-0.00216605) , 
0, -0.266394, 1, 0, 0.484522,-0.000198835) , 
1, 2, 1, 0, 0.590497,-2.9261e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559244,0.00137413) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245967,-0.000743277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0157318,0.000928695) , 
0, 2.61722, 1, 0, 0.13573,-0.000111305) , 
0, 1.74235, 1, 0, 0.268901,0.000135709) , 
0, 1.15154, 1, 0, 0.5,-2.5141e-08)    );
  // itree = 462
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.874498,-0.00054332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96286,0.002536) , 
0, -0.182819, 1, 0, 0.897429,-1.02243e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.815882,0.000151209) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.979743,-0.00557267) , 
1, 2, 1, 0, 0.862789,-0.000176912) , 
0, 0.340805, 1, 0, 0.883685,-7.88304e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00496318,-0.000554075) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0285063,0.00359143) , 
0, -2.98409, 1, 0, 0.0189004,0.000489488) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.174402,-0.000684284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0215632,0.00284543) , 
0, 1.80144, 1, 0, 0.1054,-8.70559e-05) , 
0, -1.92062, 1, 0, 0.0793766,8.63961e-05) , 
3, 2, 1, 0, 0.5,-5.464e-05)    );
  // itree = 463
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0207984,-0.00266767) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0116215,0.00029597) , 
0, 2.69256, 1, 0, 0.016365,-0.000266962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220806,0.000252985) , 
2, 0.153846, 1, 0, 0.0726043,-0.000149777) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.64822,-0.000668579) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.164245,8.93932e-05) , 
1, 2, 1, 0, 0.2523,-7.45842e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898078,0.0025159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991935,0.00149185) , 
2, 0.853561, 1, 0, 0.979781,0.000242243) , 
2, 0.576923, 1, 0, 0.637494,4.81364e-05) , 
1, 1, 1, 0, 0.5,-5.45117e-05)    );
  // itree = 464
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892551,0.000296006) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952927,-0.00177748) , 
0, 0.191198, 1, 0, 0.910179,-5.0094e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904751,-0.00226962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67473,0.000504423) , 
0, 1.48774, 1, 0, 0.785316,-0.000215349) , 
0, 0.989067, 1, 0, 0.883685,-8.51578e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0145157,-7.29841e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0354728,0.00319126) , 
1, 1, 1, 0, 0.0252398,-0.000258008) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115173,0.000361673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137195,-0.00186192) , 
2, 0.192377, 1, 0, 0.120488,-7.61641e-05) , 
2, -0.69236, 1, 0, 0.0793766,9.32957e-05) , 
3, 2, 1, 0, 0.5,-5.45324e-05)    );
  // itree = 465
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383423,0.000189604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.026516,-0.00338491) , 
0, 2.22094, 1, 0, 0.253065,-0.000127541) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94821,0.00199464) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996661,0.00134619) , 
2, 0.934916, 1, 0, 0.980632,0.00021766) , 
2, 0.576923, 1, 0, 0.637728,5.49661e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0197767,0.000696628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0813731,-0.00352104) , 
0, -2.30831, 1, 0, 0.0383556,-0.000283331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.155644,0.000240701) , 
0, -1.66905, 1, 0, 0.0720437,-0.000170949) , 
1, 3, 1, 0, 0.5,-5.52661e-05)    );
  // itree = 466
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.433447,0.000668216) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985481,2.61764e-05) , 
2, 0.576923, 1, 0, 0.808495,0.000245151) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.173417,-0.00159022) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.761001,0.000198049) , 
0, -1.44799, 1, 0, 0.484522,-0.000199907) , 
1, 2, 1, 0, 0.590497,-2.94859e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559244,0.00129949) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.272926,-0.000725572) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0220662,0.000652283) , 
0, 2.49225, 1, 0, 0.13573,-9.0395e-05) , 
0, 1.74235, 1, 0, 0.268901,0.000138443) , 
0, 1.15154, 1, 0, 0.5,-7.86316e-08)    );
  // itree = 467
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.013403,-6.48055e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171323,-0.00100656) , 
0, -2.63075, 1, 0, 0.0767167,-0.000177931) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408737,0.00183496) , 
0, -2.06834, 1, 0, 0.179235,0.000154146) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628165,-0.00134729) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.480043,-0.000377279) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.822589,0.000965231) , 
1, 2, 1, 0, 0.587539,-2.62446e-06) , 
0, -1.03438, 1, 0, 0.591743,-4.41873e-05) , 
0, -1.5366, 1, 0, 0.5,-7.74102e-08)    );
  // itree = 468
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.433447,0.000611664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985481,9.71135e-05) , 
2, 0.576923, 1, 0, 0.808495,0.000229096) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.36989,-0.000105562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888704,-0.00188653) , 
0, -0.266394, 1, 0, 0.484522,-0.000188631) , 
1, 2, 1, 0, 0.590497,-2.93745e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.558271,0.00201202) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150402,-0.00231102) , 
0, 2.13112, 1, 0, 0.428874,0.000369735) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0322748,-0.00200149) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00743765,0.00091758) , 
0, 2.92409, 1, 0, 0.019658,-0.000237038) , 
3, 3, 1, 0, 0.268901,0.000167708) , 
0, 1.15154, 1, 0, 0.5,-6.37414e-08)    );
  // itree = 469
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989147,-0.00253461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39784,0.000161204) , 
3, 1, 1, 0, 0.587071,-3.03692e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313126,-0.00119236) , 
0, 1.74234, 1, 0, 0.565771,-3.96315e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702364,0.00236092) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00741413,-0.00346507) , 
0, 2.924, 1, 0, 0.039065,0.00027724) , 
0, 2.3036, 1, 0, 0.5,-6.31456e-08)    );
  // itree = 470
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0366659,0.003222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.251314,-0.000227277) , 
1, 1, 1, 0, 0.201423,-6.37898e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87961,-0.00287437) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991895,0.0021137) , 
2, 0.886103, 1, 0, 0.96986,-0.000178751) , 
2, 0.576923, 1, 0, 0.565771,-3.16886e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702364,0.00188246) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00741413,-0.00279266) , 
0, 2.924, 1, 0, 0.039065,0.000221588) , 
0, 2.3036, 1, 0, 0.5,-6.14662e-08)    );
  // itree = 471
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.16717,-0.000394865) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0921192,-0.00206852) , 
0, 1.4406, 1, 0, 0.12923,-0.000467046) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0409732,0.000933132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00652051,-0.00173807) , 
0, 2.93588, 1, 0, 0.0251357,9.20389e-05) , 
0, 2.17838, 1, 0, 0.0726043,-0.000162911) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,-0.000452913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0237983,0.00101927) , 
1, 3, 1, 0, 0.2523,-7.4976e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898078,0.00259417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991935,0.00120544) , 
2, 0.853561, 1, 0, 0.979781,0.000231257) , 
2, 0.576923, 1, 0, 0.637494,5.23045e-05) , 
1, 1, 1, 0, 0.5,-5.49983e-05)    );
  // itree = 472
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,0.000260327) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,-0.000909606) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,0.000942322) , 
0, 1.47527, 1, 0, 0.91048,-0.000118085) , 
0, -1.27985, 1, 0, 0.883685,-7.71244e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.248368,-0.000487142) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.015964,0.00155797) , 
1, 3, 1, 0, 0.104825,-8.2821e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0274564,0.00275182) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00543478,0.00179131) , 
0, 3.1012, 1, 0, 0.019735,0.000452637) , 
0, 1.91958, 1, 0, 0.0793766,8.44183e-05) , 
3, 2, 1, 0, 0.5,-5.52209e-05)    );
  // itree = 473
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164508,-0.00145834) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0593852,0.000393798) , 
0, 2.06196, 1, 0, 0.123601,-0.000383698) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,4.68108e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,0.00165284) , 
0, 2.86859, 1, 0, 0.0137948,7.95014e-05) , 
3, 3, 1, 0, 0.0726043,8.31172e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115226,0.00063595) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.703951,-0.000474496) , 
0, -1.8523, 1, 0, 0.474491,-6.28248e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994706,-0.00187338) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.796812,0.000602269) , 
3, 1, 1, 0, 0.893169,0.000185159) , 
0, -0.189692, 1, 0, 0.637494,5.4118e-05) , 
1, 1, 1, 0, 0.5,-5.55631e-05)    );
  // itree = 474
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0329514,-0.00286061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0220932,0.00091236) , 
0, 1.15154, 1, 0, 0.0276082,-0.000194404) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.474405,-0.00181526) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112844,0.000608677) , 
3, 2, 1, 0, 0.206586,-0.000393239) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961334,0.000557568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873457,0.00452512) , 
0, 1.28756, 1, 0, 0.950128,0.000314338) , 
2, 0.423135, 1, 0, 0.623926,5.09063e-05) , 
2, -0.692308, 1, 0, 0.5,-7.37532e-08)    );
  // itree = 475
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164508,-0.00132555) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0593852,3.65269e-05) , 
0, 2.06196, 1, 0, 0.123601,-0.000388976) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,-0.000116023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,0.00113286) , 
0, 2.86859, 1, 0, 0.0137948,4.16165e-05) , 
3, 3, 1, 0, 0.0726043,8.36127e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919011,0.000224112) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937969,0.00193359) , 
0, 1.10319, 1, 0, 0.921754,0.000169157) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.1099,0.000320805) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.19551,-0.00192438) , 
2, 0.15379, 1, 0, 0.126813,-0.000134057) , 
3, 2, 1, 0, 0.637494,-7.08101e-05) , 
1, 1, 1, 0, 0.5,-5.50447e-05)    );
  // itree = 476
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206953,0.000530683) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971439,-0.0013989) , 
2, 0.576923, 1, 0, 0.575265,8.38943e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.00168794) , 
0, 2.09682, 1, 0, 0.546317,2.8138e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00226992) , 
0, 2.68762, 1, 0, 0.5,-4.20606e-08)    );
  // itree = 477
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0329514,-0.00245911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0220932,0.00101117) , 
0, 1.15154, 1, 0, 0.0276082,-0.000147449) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.144409,-0.00156933) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.172626,-0.000545327) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.828086,0.00106586) , 
2, 0.186473, 1, 0, 0.657075,0.000127293) , 
2, 0.0385581, 1, 0, 0.623926,3.86313e-05) , 
2, -0.692308, 1, 0, 0.5,-3.96886e-08)    );
  // itree = 478
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.443557,0.000927723) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.98601,0.000932113) , 
2, 0.576923, 1, 0, 0.815275,0.00039577) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0523789,-0.000240562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.827883,-0.00252869) , 
1, 1, 1, 0, 0.236608,-0.000234214) , 
0, 1.09337, 1, 0, 0.500022,-8.38891e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.339664,-0.000107157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.816304,-0.00196179) , 
0, -0.484905, 1, 0, 0.411036,-0.000166788) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922593,0.00372966) , 
0, 0.103085, 1, 0, 0.499978,8.37455e-05) , 
1, 2, 1, 0, 0.5,-5.46712e-05)    );
  // itree = 479
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153243,0.000362942) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0839303,-0.00261806) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0204405,5.60673e-05) , 
0, 2.30629, 1, 0, 0.0396723,-0.000268921) , 
0, 1.66686, 1, 0, 0.0726043,-0.000143188) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.178171,0.000162288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.614713,-0.000617434) , 
0, 0.153386, 1, 0, 0.2523,-0.000100782) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898078,0.00198988) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991935,0.000919227) , 
2, 0.853561, 1, 0, 0.979781,0.000176562) , 
2, 0.576923, 1, 0, 0.637494,4.6069e-05) , 
1, 1, 1, 0, 0.5,-5.46464e-05)    );
  // itree = 480
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.887225,-0.00048404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903233,0.00225791) , 
0, -0.496587, 1, 0, 0.89352,0.000216156) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851772,-0.00239219) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414512,0.000286152) , 
0, 0.515828, 1, 0, 0.480655,-5.73272e-05) , 
0, 0.142832, 1, 0, 0.637728,4.67185e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00681951,-0.00273709) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.04606,0.00110283) , 
2, -9.57692, 1, 0, 0.0240404,3.73377e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.093352,-0.00131375) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167229,-0.00055735) , 
0, -1.44282, 1, 0, 0.129941,-0.000365251) , 
0, -2.1804, 1, 0, 0.0720437,-0.00014515) , 
1, 3, 1, 0, 0.5,-5.4684e-05)    );
  // itree = 481
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206953,0.000499597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971439,-0.00151716) , 
2, 0.576923, 1, 0, 0.575265,6.47729e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.00121091) , 
0, 2.09682, 1, 0, 0.546317,2.45207e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00197851) , 
0, 2.68762, 1, 0, 0.5,1.2027e-08)    );
  // itree = 482
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.013403,0.000357669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171323,-0.0010827) , 
0, -2.63075, 1, 0, 0.0767167,-0.000160852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.408737,0.00153557) , 
0, -2.06834, 1, 0, 0.179235,0.000120909) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694833,-0.000875737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.760052,0.000408986) , 
1, 2, 1, 0, 0.724846,-1.85073e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.205259,0.00259653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0180567,-0.00140966) , 
0, 2.55816, 1, 0, 0.0919358,0.000326959) , 
0, 1.97869, 1, 0, 0.591743,-3.45666e-05) , 
0, -1.5366, 1, 0, 0.5,1.15784e-08)    );
  // itree = 483
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0255735,0.000859992) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,-0.000395484) , 
1, 1, 1, 0, 0.253065,-5.24955e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94821,0.00177159) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996661,0.00101162) , 
2, 0.934916, 1, 0, 0.980632,0.000189017) , 
2, 0.576923, 1, 0, 0.637728,4.09736e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00681951,-0.00236415) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.04606,0.000999812) , 
2, -9.57692, 1, 0, 0.0240404,3.89398e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.093352,-0.00119441) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167229,-0.00048802) , 
0, -1.44282, 1, 0, 0.129941,-0.000327936) , 
0, -2.1804, 1, 0, 0.0720437,-0.00012736) , 
1, 3, 1, 0, 0.5,-5.4271e-05)    );
  // itree = 484
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164508,-0.00117781) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0593852,7.5729e-05) , 
0, 2.06196, 1, 0, 0.123601,-0.000340254) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,0.000167871) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,0.00165025) , 
0, 2.86859, 1, 0, 0.0137948,9.00884e-05) , 
3, 3, 1, 0, 0.0726043,8.37099e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509043,0.000572975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0151935,-0.00118581) , 
1, 3, 1, 0, 0.152763,-0.00010804) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454898,-0.00152315) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977914,0.00251305) , 
2, 0.544384, 1, 0, 0.867893,-3.91404e-05) , 
2, 0.153846, 1, 0, 0.637494,4.51513e-05) , 
1, 1, 1, 0, 0.5,-5.37453e-05)    );
  // itree = 485
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,0.000123048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.000564192) , 
0, 0.0166736, 1, 0, 0.532911,0.000390625) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91502,-0.00203296) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.992175,-0.000452591) , 
2, 0.869832, 1, 0, 0.980415,-0.000192475) , 
2, 0.576923, 1, 0, 0.883685,-6.64355e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00496318,0.000406546) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0285063,0.00311491) , 
0, -2.98409, 1, 0, 0.0189004,0.000443848) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.174402,-0.000635853) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0215632,0.00256558) , 
0, 1.80144, 1, 0, 0.1054,-8.67496e-05) , 
0, -1.92062, 1, 0, 0.0793766,7.28796e-05) , 
3, 2, 1, 0, 0.5,-5.349e-05)    );
  // itree = 486
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206953,0.000537998) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971439,-0.00147293) , 
2, 0.576923, 1, 0, 0.575265,8.12437e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.00167246) , 
0, 2.09682, 1, 0, 0.546317,2.60789e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00210492) , 
0, 2.68762, 1, 0, 0.5,-2.96726e-08)    );
  // itree = 487
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206953,0.000430348) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971439,-0.00117629) , 
2, 0.576923, 1, 0, 0.575265,6.50092e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.00134005) , 
0, 2.09682, 1, 0, 0.546317,2.08695e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00169111) , 
0, 2.68762, 1, 0, 0.5,-2.69168e-08)    );
  // itree = 488
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92875,-0.000455055) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749345,0.000925788) , 
0, -0.21804, 1, 0, 0.808495,0.000243342) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.421415,-0.000173445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92127,-0.00279704) , 
0, 0.206244, 1, 0, 0.484522,-0.000177979) , 
1, 2, 1, 0, 0.590497,-2.90116e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.558271,0.00187817) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150402,-0.00230798) , 
0, 2.13112, 1, 0, 0.428874,0.000323731) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0322748,-0.00227859) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00743765,0.00184037) , 
0, 2.92409, 1, 0, 0.019658,-0.000242263) , 
3, 3, 1, 0, 0.268901,0.000159776) , 
0, 1.15154, 1, 0, 0.5,-2.36021e-08)    );
  // itree = 489
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989147,-0.00190643) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39784,0.000143093) , 
3, 1, 1, 0, 0.587071,-2.99143e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313126,-0.00113108) , 
0, 1.74234, 1, 0, 0.565771,-3.06555e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702364,0.00178562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00741413,-0.00254279) , 
0, 2.924, 1, 0, 0.039065,0.000214586) , 
0, 2.3036, 1, 0, 0.5,-3.17156e-08)    );
  // itree = 490
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.706679,-0.000184469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.439952,0.00174366) , 
0, 1.4935, 1, 0, 0.674989,3.91424e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0124059,0.00308301) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0912118,-0.00211795) , 
0, -2.46711, 1, 0, 0.0478378,-0.000326395) , 
3, 3, 1, 0, 0.565771,-3.30237e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702364,0.0014249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00741413,-0.00204533) , 
0, 2.924, 1, 0, 0.039065,0.000171555) , 
0, 2.3036, 1, 0, 0.5,-3.2021e-08)    );
  // itree = 491
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0115086,-0.00198726) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.225793,0.00104585) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.670016,-0.000508073) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.554974,0.000104974) , 
0, -0.495857, 1, 0, 0.585836,-3.299e-05) , 
0, -1.80246, 1, 0, 0.546963,2.06238e-05) , 
0, -2.68866, 1, 0, 0.5,-6.70016e-08)    );
  // itree = 492
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.498511,0.00111795) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.988266,0.000327994) , 
2, 0.576923, 1, 0, 0.84674,0.00041415) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0587392,0.000307751) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849072,-0.00208389) , 
1, 1, 1, 0, 0.289621,2.25645e-05) , 
0, 0.793495, 1, 0, 0.500022,-6.09175e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0718151,-0.00121494) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.726835,0.000368964) , 
2, 0.153846, 1, 0, 0.411036,-0.000166669) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922593,0.00334621) , 
0, 0.103085, 1, 0, 0.499978,6.07544e-05) , 
1, 2, 1, 0, 0.5,-5.39954e-05)    );
  // itree = 493
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.164508,-0.00124646) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0593852,0.000383747) , 
0, 2.06196, 1, 0, 0.123601,-0.00032261) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.019729,0.000265295) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00871929,0.00185431) , 
0, 2.86859, 1, 0, 0.0137948,0.00010782) , 
3, 3, 1, 0, 0.0726043,8.4385e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,-0.000392886) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0237983,0.000830069) , 
1, 3, 1, 0, 0.2523,-7.39637e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898078,0.00207602) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991935,0.00116981) , 
2, 0.853561, 1, 0, 0.979781,0.000195663) , 
2, 0.576923, 1, 0, 0.637494,3.94396e-05) , 
1, 1, 1, 0, 0.5,-5.37158e-05)    );
  // itree = 494
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383423,0.000144284) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.026516,-0.00277193) , 
0, 2.22094, 1, 0, 0.253065,-0.000111675) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94821,0.00172256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996661,0.00117186) , 
2, 0.934916, 1, 0, 0.980632,0.000187385) , 
2, 0.576923, 1, 0, 0.637728,4.64375e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0197767,0.00039899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0813731,-0.00306963) , 
0, -2.30831, 1, 0, 0.0383556,-0.000269101) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.155644,0.000368309) , 
0, -1.66905, 1, 0, 0.0720437,-0.000144374) , 
1, 3, 1, 0, 0.5,-5.38948e-05)    );
  // itree = 495
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.027622,-0.00325937) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.273039,0.000517125) , 
0, -2.18648, 1, 0, 0.201423,0.000115489) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.87961,-0.00281793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991895,0.00169455) , 
2, 0.886103, 1, 0, 0.96986,-0.000194621) , 
2, 0.576923, 1, 0, 0.565771,-3.15467e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702364,0.00158318) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00741413,-0.00144846) , 
0, 2.924, 1, 0, 0.039065,0.000220699) , 
0, 2.3036, 1, 0, 0.5,-4.82952e-08)    );
  // itree = 496
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.149645,-0.00127004) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46508,0.00273353) , 
0, -2.14797, 1, 0, 0.322351,0.000550469) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00470855,0.00022021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0261103,-0.00251286) , 
0, -2.99919, 1, 0, 0.0152849,-0.000292873) , 
3, 3, 1, 0, 0.179235,-1.94565e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.774444,-1.46143e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510038,-0.00155796) , 
0, 1.16747, 1, 0, 0.724846,-0.00014689) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172017,-0.000791747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.21098,0.00235313) , 
2, -0.692308, 1, 0, 0.0919358,0.000337176) , 
0, 1.97869, 1, 0, 0.591743,-4.50889e-05) , 
0, -1.5366, 1, 0, 0.5,-5.26529e-08)    );
  // itree = 497
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00456521,-0.00220283) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0694124,0.00152267) , 
0, -3.02838, 1, 0, 0.0401222,0.00022317) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922542,0.000485903) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.126947,-0.000306058) , 
3, 2, 1, 0, 0.637839,-1.60296e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.081076,-0.00317573) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.153829,0.000218966) , 
0, -1.69551, 1, 0, 0.123952,-0.000380093) , 
1, 3, 1, 0, 0.56617,1.24298e-05) , 
0, -2.30464, 1, 0, 0.5,-7.58137e-08)    );
  // itree = 498
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.783369,0.000538763) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.951061,-0.000529206) , 
0, -1.01809, 1, 0, 0.910791,-2.96439e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.000722586) , 
0, 1.3132, 1, 0, 0.883685,-8.94825e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0295869,0.000489379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0207634,0.00458778) , 
0, 1.15154, 1, 0, 0.0252398,0.000411312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0197912,0.00264849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.185074,-0.000593469) , 
1, 1, 1, 0, 0.120488,7.60326e-05) , 
2, -0.69236, 1, 0, 0.0793766,9.79217e-05) , 
3, 2, 1, 0, 0.5,-5.27578e-05)    );
  // itree = 499
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153243,0.00033174) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0726294,-0.00229935) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0141238,0.000423079) , 
0, 2.56205, 1, 0, 0.0396723,-0.000305677) , 
0, 1.66686, 1, 0, 0.0726043,-0.000173224) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,-0.000334665) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0237983,0.00102473) , 
1, 3, 1, 0, 0.2523,-7.33099e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898078,0.00205768) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991935,0.000723247) , 
2, 0.853561, 1, 0, 0.979781,0.000169956) , 
2, 0.576923, 1, 0, 0.637494,5.55309e-05) , 
1, 1, 1, 0, 0.5,-5.28696e-05)    );
  // itree = 500
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,-0.00016547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.000366675) , 
0, 0.0166736, 1, 0, 0.532911,0.000115407) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983915,0.000116933) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96275,-0.00356831) , 
0, 1.0662, 1, 0, 0.980415,-0.00013293) , 
2, 0.576923, 1, 0, 0.883685,-7.92506e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00718963,0.00116344) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0295168,0.00283424) , 
0, -2.86593, 1, 0, 0.0189004,0.000398725) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.174402,-0.000509256) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0215632,0.00231623) , 
0, 1.80144, 1, 0, 0.1054,-4.76968e-05) , 
0, -1.92062, 1, 0, 0.0793766,8.66083e-05) , 
3, 2, 1, 0, 0.5,-5.30906e-05)    );
  // itree = 501
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206953,0.000445398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971439,-0.00118911) , 
2, 0.576923, 1, 0, 0.575265,6.93877e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.00130729) , 
0, 2.09682, 1, 0, 0.546317,2.58594e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00209534) , 
0, 2.68762, 1, 0, 0.5,-1.3088e-07)    );
  // itree = 502
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.910454,0.00124896) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.724975,-5.53043e-05) , 
0, 0.0863094, 1, 0, 0.808495,0.000190915) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.173417,-0.00152608) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.761001,0.000318302) , 
0, -1.44799, 1, 0, 0.484522,-0.000161376) , 
1, 2, 1, 0, 0.590497,-2.89323e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559244,0.00120449) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.191788,-0.000570215) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00673761,0.00318978) , 
0, 2.99215, 1, 0, 0.13573,-9.95383e-05) , 
0, 1.74235, 1, 0, 0.268901,0.00011743) , 
0, 1.15154, 1, 0, 0.5,-1.09718e-07)    );
  // itree = 503
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705921,-0.000498217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0475838,0.00212347) , 
3, 3, 1, 0, 0.582852,-3.25559e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.69965,0.00287234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.356883,-0.000234149) , 
0, 1.25607, 1, 0, 0.441336,0.000241704) , 
0, 0.915219, 1, 0, 0.546317,2.23732e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00181641) , 
0, 2.68762, 1, 0, 0.5,-1.04288e-07)    );
  // itree = 504
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.149645,-0.00106755) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46508,0.00259072) , 
0, -2.14797, 1, 0, 0.322351,0.000546771) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00470855,-0.000165844) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0261103,-0.00289152) , 
0, -2.99919, 1, 0, 0.0152849,-0.000348192) , 
3, 3, 1, 0, 0.179235,-1.95216e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.77875,-6.97392e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.637485,-0.0020324) , 
0, 1.01289, 1, 0, 0.759393,-0.000157936) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.340692,0.00162828) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0167829,-0.0025401) , 
3, 3, 1, 0, 0.193222,7.06636e-05) , 
0, 1.47651, 1, 0, 0.591743,-3.72128e-05) , 
0, -1.5366, 1, 0, 0.5,-1.01501e-07)    );
  // itree = 505
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0161649,-0.00209214) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226611,0.00179775) , 
2, -0.692308, 1, 0, 0.102678,0.000150635) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303844,0.000575222) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0320168,-0.00306349) , 
0, 2.0673, 1, 0, 0.211346,9.71577e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.95924,-0.00464427) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.975422,-0.000235692) , 
0, -1.01969, 1, 0, 0.972941,-0.000166696) , 
2, 0.576923, 1, 0, 0.582353,-3.13772e-05) , 
0, -1.92062, 1, 0, 0.5,-1.28542e-07)    );
  // itree = 506
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.155024,-0.000696848) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.573678,0.00239703) , 
0, -1.64796, 1, 0, 0.255713,0.000123248) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.28041,-0.000633734) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937492,-5.95074e-05) , 
2, 0.153846, 1, 0, 0.794747,-0.000174957) , 
0, -1.21167, 1, 0, 0.590497,-6.19614e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0925861,-0.00114458) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0134659,0.00308587) , 
3, 3, 1, 0, 0.0511643,0.000104521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850983,0.000896531) , 
1, 1, 1, 0, 0.268901,0.000144618) , 
0, 1.15154, 1, 0, 0.5,-1.37663e-07)    );
  // itree = 507
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92875,-0.000727675) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749345,0.000685914) , 
0, -0.21804, 1, 0, 0.808495,0.00013687) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.421415,-5.05355e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92127,-0.00292425) , 
0, 0.206244, 1, 0, 0.484522,-0.00014021) , 
1, 2, 1, 0, 0.590497,-2.87691e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0925861,-0.00091686) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873418,0.00193687) , 
1, 1, 1, 0, 0.428874,0.000115655) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0322748,-0.00181026) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00743765,0.00237043) , 
0, 2.92409, 1, 0, 0.019658,-0.000159212) , 
3, 3, 1, 0, 0.268901,0.000134876) , 
0, 1.15154, 1, 0, 0.5,-1.42788e-07)    );
  // itree = 508
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919697,0.00194021) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.566603,-0.000924648) , 
0, -0.0542179, 1, 0, 0.653572,-0.000171283) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.406254,-0.000406682) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.920259,0.00334121) , 
0, 0.0552119, 1, 0, 0.499913,7.61748e-05) , 
1, 2, 1, 0, 0.565771,-3.26653e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702364,0.00163478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00741413,-0.00201007) , 
0, 2.924, 1, 0, 0.039065,0.000208564) , 
0, 2.3036, 1, 0, 0.5,-1.09457e-07)    );
  // itree = 509
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00456521,-0.00171552) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0694124,0.00145643) , 
0, -3.02838, 1, 0, 0.0401222,0.000221935) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705931,3.79994e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.504582,-0.00173876) , 
0, 1.2572, 1, 0, 0.679515,-9.62412e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0174578,-0.000791925) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226752,0.00158892) , 
2, -0.692308, 1, 0, 0.104586,0.000229562) , 
0, 1.90482, 1, 0, 0.56617,-3.20107e-05) , 
0, -2.30464, 1, 0, 0.5,-6.75318e-08)    );
  // itree = 510
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.527443,-0.000561397) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0238023,0.000817511) , 
1, 3, 1, 0, 0.213897,-5.66784e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.954254,0.00270969) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.985329,-0.0017592) , 
0, -0.650666, 1, 0, 0.974801,8.2523e-05) , 
2, 0.576923, 1, 0, 0.590497,-5.56877e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559244,0.00113012) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245967,-0.000576693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0157318,0.00130765) , 
0, 2.61722, 1, 0, 0.13573,-4.6572e-05) , 
0, 1.74235, 1, 0, 0.268901,0.000141959) , 
0, 1.15154, 1, 0, 0.5,-6.97697e-08)    );
  // itree = 511
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92875,-0.000885917) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749345,0.000828179) , 
0, -0.21804, 1, 0, 0.808495,0.000164588) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.421415,-7.15057e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92127,-0.00289032) , 
0, 0.206244, 1, 0, 0.484522,-0.000146175) , 
1, 2, 1, 0, 0.590497,-2.86798e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559244,0.000904002) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245967,-0.000461528) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0157318,0.00104343) , 
0, 2.61722, 1, 0, 0.13573,-3.72823e-05) , 
0, 1.74235, 1, 0, 0.268901,0.000113549) , 
0, 1.15154, 1, 0, 0.5,-3.97227e-08)    );
  // itree = 512
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0255735,0.000646363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,-0.000431739) , 
1, 1, 1, 0, 0.253065,-3.15511e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94821,0.0021706) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996661,0.0011879) , 
2, 0.934916, 1, 0, 0.980632,0.000230421) , 
2, 0.576923, 1, 0, 0.637728,3.75556e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00706884,0.00321362) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0435441,-0.000516475) , 
0, -2.82941, 1, 0, 0.0240404,4.75808e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.093352,-0.00101334) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.167229,-0.000573313) , 
0, -1.44282, 1, 0, 0.129941,-0.000315017) , 
0, -2.1804, 1, 0, 0.0720437,-0.00011678) , 
1, 3, 1, 0, 0.5,-5.25195e-05)    );
  // itree = 513
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892551,0.000292161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952927,-0.00146479) , 
0, 0.191198, 1, 0, 0.910179,-2.99746e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904751,-0.00222178) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67473,0.000480505) , 
0, 1.48774, 1, 0, 0.785316,-0.000216099) , 
0, 0.989067, 1, 0, 0.883685,-6.94665e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0145157,0.000108335) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0354728,0.00330827) , 
1, 1, 1, 0, 0.0252398,-0.000251873) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153348,0.000311282) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0575126,-0.00212567) , 
0, 1.0677, 1, 0, 0.120488,-0.000124615) , 
2, -0.69236, 1, 0, 0.0793766,7.61344e-05) , 
3, 2, 1, 0, 0.5,-5.32183e-05)    );
  // itree = 514
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0255735,0.000626584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,-0.000336608) , 
1, 1, 1, 0, 0.253065,-3.58126e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94821,0.00182045) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996661,0.00104787) , 
2, 0.934916, 1, 0, 0.980632,0.000193899) , 
2, 0.576923, 1, 0, 0.637728,4.52473e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00915216,-0.00390958) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0722577,0.000811739) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.162871,-0.00104507) , 
0, -1.52151, 1, 0, 0.106842,-1.66774e-05) , 
0, -2.69174, 1, 0, 0.0720437,-0.000140746) , 
1, 3, 1, 0, 0.5,-5.39708e-05)    );
  // itree = 515
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.816307,-0.000427278) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95213,0.000159277) , 
0, -0.806157, 1, 0, 0.910791,-3.47262e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.000502205) , 
0, 1.3132, 1, 0, 0.883685,-7.42327e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0295869,-2.82765e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0207634,0.00366241) , 
0, 1.15154, 1, 0, 0.0252398,0.000292932) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0467129,-0.00279914) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150464,0.000348147) , 
0, -1.35616, 1, 0, 0.120488,-7.94371e-05) , 
2, -0.69236, 1, 0, 0.0793766,8.12856e-05) , 
3, 2, 1, 0, 0.5,-5.31075e-05)    );
  // itree = 516
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206953,0.000429493) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971439,-0.00118315) , 
2, 0.576923, 1, 0, 0.575265,6.43723e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.00106144) , 
0, 2.09682, 1, 0, 0.546317,2.85847e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.0023074) , 
0, 2.68762, 1, 0, 0.5,-9.35774e-08)    );
  // itree = 517
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0126052,0.0013372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00681923,-0.00198666) , 
1, 3, 1, 0, 0.00975338,-0.000351028) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.075697,-0.00148289) , 
2, -9.65385, 1, 0, 0.0276082,-0.000157284) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.187539,6.98989e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.606453,-0.00262465) , 
2, 0.326984, 1, 0, 0.254716,-0.000297502) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872201,0.00371401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989623,0.00126563) , 
2, 0.866914, 1, 0, 0.97363,0.00036193) , 
2, 0.653881, 1, 0, 0.623926,4.116e-05) , 
2, -0.692308, 1, 0, 0.5,-8.0471e-08)    );
  // itree = 518
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705921,-0.000447899) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0475838,0.00197682) , 
3, 3, 1, 0, 0.582852,-3.24682e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.69965,0.00258032) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.356883,-0.000196683) , 
0, 1.25607, 1, 0, 0.441336,0.000222085) , 
0, 0.915219, 1, 0, 0.546317,2.4116e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00194884) , 
0, 2.68762, 1, 0, 0.5,-3.2749e-08)    );
  // itree = 519
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.885005,-0.000313726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.744404,0.0026801) , 
0, 0.378245, 1, 0, 0.84674,0.000253736) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0587392,0.000462804) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.849072,-0.00183589) , 
1, 1, 1, 0, 0.289621,6.72928e-06) , 
0, 0.793495, 1, 0, 0.500022,-7.30093e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.564558,0.000165194) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0281433,-0.00272873) , 
3, 3, 1, 0, 0.411036,-3.20357e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.922593,0.00279203) , 
0, 0.103085, 1, 0, 0.499978,7.28767e-05) , 
1, 2, 1, 0, 0.5,-5.31879e-05)    );
  // itree = 520
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.91869,0.00199981) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397102,-0.00020127) , 
1, 2, 1, 0, 0.496741,-2.50695e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.414734,-0.00069169) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984579,-0.000918541) , 
2, 0.576923, 1, 0, 0.798486,-0.000314435) , 
0, -0.0300674, 1, 0, 0.590497,-4.90914e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0925861,-0.000976511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0134659,0.00201604) , 
3, 3, 1, 0, 0.0511643,0.000114299) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.850983,0.000875494) , 
1, 1, 1, 0, 0.268901,0.000140662) , 
0, 1.15154, 1, 0, 0.5,-3.6904e-08)    );
  // itree = 521
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.010247,-0.00306445) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0524688,0.00272655) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461594,-6.14916e-05) , 
2, 0.153846, 1, 0, 0.280347,0.000425205) , 
0, -2.73299, 1, 0, 0.179235,0.000153057) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694833,-0.000935231) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0863777,0.00108378) , 
0, 1.97871, 1, 0, 0.494723,-0.000188354) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645375,0.00138884) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887813,-0.000901047) , 
0, -0.368778, 1, 0, 0.760666,0.000207839) , 
1, 2, 1, 0, 0.591743,2.52943e-05) , 
0, -1.5366, 1, 0, 0.5,-3.18727e-08)    );
  // itree = 522
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.705921,-0.000455584) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0475838,0.00191152) , 
3, 3, 1, 0, 0.582852,-3.22103e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.69965,0.00241885) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.356883,-6.95735e-05) , 
0, 1.25607, 1, 0, 0.441336,0.00024826) , 
0, 0.915219, 1, 0, 0.546317,2.61498e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00211135) , 
0, 2.68762, 1, 0, 0.5,-5.82642e-08)    );
  // itree = 523
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0329514,-0.0020094) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.186127,-0.00107064) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807783,0.000765263) , 
2, 0.115473, 1, 0, 0.686494,1.28163e-05) , 
2, -0.692308, 1, 0, 0.590497,-4.39057e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.558271,0.00173568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150402,-0.00193831) , 
0, 2.13112, 1, 0, 0.428874,0.000326312) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0322748,-0.00198155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00743765,0.00127692) , 
0, 2.92409, 1, 0, 0.019658,-0.000222189) , 
3, 3, 1, 0, 0.268901,0.000147659) , 
0, 1.15154, 1, 0, 0.5,-6.50353e-08)    );
  // itree = 524
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00456521,-0.000893956) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0694124,0.00123557) , 
0, -3.02838, 1, 0, 0.0401222,0.000200172) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.126653,-0.000409753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.393191,0.00130304) , 
2, 0.170076, 1, 0, 0.201776,0.000112942) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.865155,-0.00247819) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.990288,0.000607707) , 
2, 0.869832, 1, 0, 0.970028,-0.000186086) , 
2, 0.576923, 1, 0, 0.56617,-2.88921e-05) , 
0, -2.30464, 1, 0, 0.5,-7.87451e-08)    );
  // itree = 525
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,-0.000222975) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.000342543) , 
0, 0.0166736, 1, 0, 0.532911,6.90575e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983915,0.000145797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96275,-0.00317237) , 
0, 1.0662, 1, 0, 0.980415,-0.000114029) , 
2, 0.576923, 1, 0, 0.883685,-7.44539e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0145157,-0.000126612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0354728,0.00337594) , 
1, 1, 1, 0, 0.0252398,-0.000244168) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.120692,0.000805728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.120368,-0.000847992) , 
2, 0.0770111, 1, 0, 0.120488,-0.000107488) , 
2, -0.69236, 1, 0, 0.0793766,8.1517e-05) , 
3, 2, 1, 0, 0.5,-5.16084e-05)    );
  // itree = 526
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0329514,-0.00231184) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.186127,-0.000829421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.807783,0.000632733) , 
2, 0.115473, 1, 0, 0.686494,2.04568e-05) , 
2, -0.692308, 1, 0, 0.590497,-4.57956e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.558271,0.00149673) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150402,-0.00153896) , 
0, 2.13112, 1, 0, 0.428874,0.000300236) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0322748,-0.0015504) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00743765,0.00110508) , 
0, 2.92409, 1, 0, 0.019658,-0.000169124) , 
3, 3, 1, 0, 0.268901,0.000119657) , 
0, 1.15154, 1, 0, 0.5,-5.49418e-08)    );
  // itree = 527
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751882,0.000176929) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939031,-0.00190306) , 
0, -1.18013, 1, 0, 0.837705,-0.000184358) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57844,0.000503794) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983838,-0.00161688) , 
2, 0.576923, 1, 0, 0.904416,-4.54416e-05) , 
0, -0.631589, 1, 0, 0.883685,-8.86103e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00496318,0.00179016) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0285063,0.00252824) , 
0, -2.98409, 1, 0, 0.0189004,0.000390143) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.174402,-0.000519181) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0215632,0.00260671) , 
0, 1.80144, 1, 0, 0.1054,-2.91402e-05) , 
0, -1.92062, 1, 0, 0.0793766,9.70003e-05) , 
3, 2, 1, 0, 0.5,-5.18403e-05)    );
  // itree = 528
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0329514,-0.00215938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0220932,0.000633212) , 
0, 1.15154, 1, 0, 0.0276082,-0.000150624) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.685648,0.000266069) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.483861,-0.00222796) , 
0, 1.26614, 1, 0, 0.657337,-4.77336e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.200604,0.00249942) , 
0, 2.0234, 1, 0, 0.623926,3.94033e-05) , 
2, -0.692308, 1, 0, 0.5,-8.78545e-08)    );
  // itree = 529
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751882,9.78872e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939031,-0.00157164) , 
0, -1.18013, 1, 0, 0.837705,-0.000167491) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57844,0.000395289) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983838,-0.00128967) , 
2, 0.576923, 1, 0, 0.904416,-3.796e-05) , 
0, -0.631589, 1, 0, 0.883685,-7.82123e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00496318,0.0018653) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0285063,0.00222678) , 
0, -2.98409, 1, 0, 0.0189004,0.000349887) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.174402,-0.00040233) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0215632,0.0019399) , 
0, 1.80144, 1, 0, 0.1054,-2.82115e-05) , 
0, -1.92062, 1, 0, 0.0793766,8.55387e-05) , 
3, 2, 1, 0, 0.5,-5.17529e-05)    );
  // itree = 530
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.114133,-0.000141894) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470822,-0.00190804) , 
0, -1.85701, 1, 0, 0.198738,-0.000256511) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595929,-0.00029909) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772513,0.00118133) , 
1, 2, 1, 0, 0.666956,5.26021e-05) , 
0, -1.44798, 1, 0, 0.546317,2.92982e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00236264) , 
0, 2.68762, 1, 0, 0.5,-1.00214e-07)    );
  // itree = 531
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00874797,0.00356482) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.284612,-0.0009628) , 
0, -2.81138, 1, 0, 0.198738,-0.000205217) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.595929,-0.000239273) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.772513,0.000945423) , 
1, 2, 1, 0, 0.666956,3.8573e-05) , 
0, -1.44798, 1, 0, 0.546317,2.34416e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00189917) , 
0, 2.68762, 1, 0, 0.5,-8.88107e-08)    );
  // itree = 532
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.383423,7.67088e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.026516,-0.00281187) , 
0, 2.22094, 1, 0, 0.253065,-0.000162436) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.94821,0.00211469) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.996661,0.00120001) , 
2, 0.934916, 1, 0, 0.980632,0.000225086) , 
2, 0.576923, 1, 0, 0.637728,4.24459e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0120443,0.00110398) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0212933,-0.00414409) , 
0, -2.02606, 1, 0, 0.0151935,-0.000214551) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.219901,0.000132588) , 
2, 0.153846, 1, 0, 0.0720437,-0.00013227) , 
1, 3, 1, 0, 0.5,-5.29504e-05)    );
  // itree = 533
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.92875,-0.000576058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.749345,0.000799397) , 
0, -0.21804, 1, 0, 0.808495,0.000189845) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.421415,-0.000142913) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.92127,-0.00288309) , 
0, 0.206244, 1, 0, 0.484522,-0.000170668) , 
1, 2, 1, 0, 0.590497,-2.88735e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559244,0.00095461) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245967,-0.000407598) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0157318,0.00113942) , 
0, 2.61722, 1, 0, 0.13573,-1.82542e-05) , 
0, 1.74235, 1, 0, 0.268901,0.000134228) , 
0, 1.15154, 1, 0, 0.5,-1.27241e-07)    );
  // itree = 534
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.730064,6.95956e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.945708,-0.000956753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.678349,0.00127545) , 
0, 1.47527, 1, 0, 0.91048,-9.89258e-05) , 
0, -1.27985, 1, 0, 0.883685,-7.79865e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0295869,-0.000151341) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0207634,0.00363008) , 
0, 1.15154, 1, 0, 0.0252398,0.000279023) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115173,0.000397737) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137195,-0.0018854) , 
2, 0.192377, 1, 0, 0.120488,-6.18105e-05) , 
2, -0.69236, 1, 0, 0.0793766,8.53009e-05) , 
3, 2, 1, 0, 0.5,-5.31603e-05)    );
  // itree = 535
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0278121,-0.00231157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0274055,0.000478397) , 
1, 2, 1, 0, 0.0276082,-0.000255637) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0755577,-0.00502637) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.281863,2.32846e-05) , 
0, -2.0037, 1, 0, 0.254716,-0.000259719) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.872201,0.00352517) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.989623,0.00106248) , 
2, 0.866914, 1, 0, 0.97363,0.000333893) , 
2, 0.653881, 1, 0, 0.623926,4.51404e-05) , 
2, -0.692308, 1, 0, 0.5,-1.08475e-07)    );
  // itree = 536
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530785,1.68695e-07) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535054,0.000245469) , 
1, 2, 1, 0, 0.532911,-0.000101909) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99369,0.001488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956412,-0.00188574) , 
3, 1, 1, 0, 0.980415,0.00014536) , 
2, 0.576923, 1, 0, 0.883685,-8.08956e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00718963,0.000670063) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0295168,0.00229466) , 
0, -2.86593, 1, 0, 0.0189004,0.000315315) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.174402,-0.000395868) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0215632,0.00213831) , 
0, 1.80144, 1, 0, 0.1054,-9.18676e-06) , 
0, -1.92062, 1, 0, 0.0793766,8.84388e-05) , 
3, 2, 1, 0, 0.5,-5.32357e-05)    );
  // itree = 537
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0329514,-0.00242404) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0220932,0.000465769) , 
0, 1.15154, 1, 0, 0.0276082,-0.000190833) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.190155,7.54752e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.693518,-0.00156119) , 
2, 0.341779, 1, 0, 0.293544,-0.000196137) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994726,-0.000234212) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.959841,0.00447551) , 
3, 1, 1, 0, 0.983547,0.000224402) , 
2, 0.807712, 1, 0, 0.623926,4.99258e-05) , 
2, -0.692308, 1, 0, 0.5,-1.08295e-07)    );
  // itree = 538
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.149645,-0.000762728) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.46508,0.00248538) , 
0, -2.14797, 1, 0, 0.322351,0.000572347) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00470855,0.000328382) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0261103,-0.00276947) , 
0, -2.99919, 1, 0, 0.0152849,-0.000321943) , 
3, 3, 1, 0, 0.179235,-1.94096e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694833,-0.000754753) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0863777,0.000730327) , 
0, 1.97871, 1, 0, 0.494723,-0.000164712) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.691598,-0.000236784) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924038,0.00244249) , 
0, 0.131697, 1, 0, 0.760666,0.000164707) , 
1, 2, 1, 0, 0.591743,2.05727e-05) , 
0, -1.5366, 1, 0, 0.5,-3.77648e-08)    );
  // itree = 539
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,0.000120221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.000155354) , 
0, 0.0166736, 1, 0, 0.532911,0.000155936) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99369,0.0012699) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956412,-0.00190144) , 
3, 1, 1, 0, 0.980415,0.000146264) , 
2, 0.576923, 1, 0, 0.883685,-8.44033e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.253215,-0.000404659) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0205892,0.00186115) , 
0, 1.87459, 1, 0, 0.127787,-4.50861e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0119226,-2.84356e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0212358,0.00321499) , 
0, -2.27328, 1, 0, 0.015964,0.000272596) , 
1, 3, 1, 0, 0.0793766,-0.000108091) , 
3, 2, 1, 0, 0.5,-5.28908e-05)    );
  // itree = 540
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206953,0.000482401) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971439,-0.00135851) , 
2, 0.576923, 1, 0, 0.575265,7.03161e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.0011993) , 
0, 2.09682, 1, 0, 0.546317,2.99602e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00241076) , 
0, 2.68762, 1, 0, 0.5,-6.08896e-08)    );
  // itree = 541
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801847,0.00111187) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486597,-0.000283366) , 
1, 2, 1, 0, 0.591626,-2.92052e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.494682,-0.00141797) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.174867,0.00110529) , 
0, 2.00593, 1, 0, 0.367675,-0.000221397) , 
0, 1.21062, 1, 0, 0.546317,2.39758e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00193804) , 
0, 2.68762, 1, 0, 0.5,-5.3564e-08)    );
  // itree = 542
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.185173,-0.000249693) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.492339,0.00226961) , 
0, -2.0257, 1, 0, 0.322351,0.000473816) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00470855,0.000231017) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0261103,-0.00233394) , 
0, -2.99919, 1, 0, 0.0152849,-0.000271377) , 
3, 3, 1, 0, 0.179235,-1.94283e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.931378,-0.00240126) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.427177,-9.69253e-05) , 
0, -0.281064, 1, 0, 0.494723,-0.000139751) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.645375,0.00119372) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.887813,-0.000968502) , 
0, -0.368778, 1, 0, 0.760666,0.000143968) , 
1, 2, 1, 0, 0.591743,2.41808e-05) , 
0, -1.5366, 1, 0, 0.5,-5.09501e-08)    );
  // itree = 543
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00456521,-0.00186351) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0694124,0.00138675) , 
0, -3.02838, 1, 0, 0.0401222,0.000206808) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.890555,-0.000600109) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.57519,0.000300777) , 
0, -0.620763, 1, 0, 0.637839,3.20279e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.081076,-0.00300989) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.153829,1.10491e-05) , 
0, -1.69551, 1, 0, 0.123952,-0.000411328) , 
1, 3, 1, 0, 0.56617,-4.80219e-06) , 
0, -2.30464, 1, 0, 0.5,-4.17957e-08)    );
  // itree = 544
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0161649,-0.00198911) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226611,0.00187413) , 
2, -0.692308, 1, 0, 0.102678,0.000172906) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303844,0.000610671) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0320168,-0.00330991) , 
0, 2.0673, 1, 0, 0.211346,9.76898e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.979682,-0.00346906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.958129,0.00163869) , 
0, 0.601772, 1, 0, 0.972941,-0.000176547) , 
2, 0.576923, 1, 0, 0.582353,-3.59029e-05) , 
0, -1.92062, 1, 0, 0.5,-5.37836e-08)    );
  // itree = 545
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989147,-0.00207916) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39784,0.000161895) , 
3, 1, 1, 0, 0.587071,-2.93534e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313126,-0.00109293) , 
0, 1.74234, 1, 0, 0.565771,-2.60983e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702364,0.00157014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00741413,-0.00241808) , 
0, 2.924, 1, 0, 0.039065,0.000182451) , 
0, 2.3036, 1, 0, 0.5,-5.63969e-08)    );
  // itree = 546
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00456521,-0.00113587) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0694124,0.00110873) , 
0, -3.02838, 1, 0, 0.0401222,0.000172983) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922542,0.000473597) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.126947,-0.000310857) , 
3, 2, 1, 0, 0.637839,-2.99045e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.081076,-0.00255061) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.153829,0.000171209) , 
0, -1.69551, 1, 0, 0.123952,-0.00030541) , 
1, 3, 1, 0, 0.56617,6.11485e-06) , 
0, -2.30464, 1, 0, 0.5,-4.75007e-08)    );
  // itree = 547
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892551,0.000318547) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952927,-0.00161347) , 
0, 0.191198, 1, 0, 0.910179,-3.38186e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904751,-0.002448) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67473,0.000612133) , 
0, 1.48774, 1, 0, 0.785316,-0.000208883) , 
0, 0.989067, 1, 0, 0.883685,-7.09638e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0145157,5.0115e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0354728,0.00329327) , 
1, 1, 1, 0, 0.0252398,-0.000245547) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115173,0.000218207) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137195,-0.00164548) , 
2, 0.192377, 1, 0, 0.120488,-0.000117552) , 
2, -0.69236, 1, 0, 0.0793766,7.76893e-05) , 
3, 2, 1, 0, 0.5,-5.18742e-05)    );
  // itree = 548
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0409402,0.0044503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248382,-0.000295352) , 
1, 1, 1, 0, 0.210975,-6.37534e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0634537,-0.00281417) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0125387,0.00130865) , 
0, 2.74673, 1, 0, 0.0372889,-0.000470973) , 
0, 1.91958, 1, 0, 0.164125,-5.96783e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923542,0.00158568) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99639,0.00589001) , 
2, 0.967459, 1, 0, 0.954788,0.000395603) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986906,-0.00640356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967513,0.00149155) , 
0, 0.15216, 1, 0, 0.97451,-4.75245e-05) , 
0, -0.631314, 1, 0, 0.968695,8.31446e-05) , 
2, 0.576923, 1, 0, 0.5,-5.5561e-08)    );
  // itree = 549
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0207984,-0.00354622) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0116215,0.00105506) , 
0, 2.69256, 1, 0, 0.016365,-0.00032213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220806,0.000568546) , 
2, 0.153846, 1, 0, 0.0726043,-0.000134947) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,-0.000327883) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0237983,0.000687717) , 
1, 3, 1, 0, 0.2523,-7.3113e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.898078,0.00234791) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.991935,0.000628641) , 
2, 0.853561, 1, 0, 0.979781,0.000183324) , 
2, 0.576923, 1, 0, 0.637494,4.33142e-05) , 
1, 1, 1, 0, 0.5,-5.25476e-05)    );
  // itree = 550
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751882,8.36685e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939031,-0.00160473) , 
0, -1.18013, 1, 0, 0.837705,-0.000176163) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57844,0.000422861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983838,-0.00136739) , 
2, 0.576923, 1, 0, 0.904416,-3.9453e-05) , 
0, -0.631589, 1, 0, 0.883685,-8.1936e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0514957,0.00080287) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.196181,-0.000532024) , 
0, -0.739029, 1, 0, 0.104825,-1.93266e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0274564,0.00213217) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00543478,0.00100527) , 
0, 3.1012, 1, 0, 0.019735,0.000344964) , 
0, 1.91958, 1, 0, 0.0793766,8.96252e-05) , 
3, 2, 1, 0, 0.5,-5.26946e-05)    );
  // itree = 551
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.199735,-0.00164531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.590143,0.00182277) , 
0, -1.97481, 1, 0, 0.429785,0.000242956) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00571653,0.00253445) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0317158,-0.00576293) , 
0, -2.92519, 1, 0, 0.018519,-0.000722567) , 
3, 3, 1, 0, 0.26959,-1.98131e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.923888,-0.00344155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.420209,-2.9471e-05) , 
0, -0.207253, 1, 0, 0.484774,-0.000159556) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.43231,0.00133544) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.984928,7.06639e-05) , 
2, 0.576923, 1, 0, 0.8083,0.000488316) , 
1, 2, 1, 0, 0.590506,-8.77248e-06) , 
0, -1.15258, 1, 0, 0.5,-8.40835e-08)    );
  // itree = 552
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.751882,-5.2858e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.939031,-0.00133585) , 
0, -1.18013, 1, 0, 0.837705,-0.000170137) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.57844,0.000307025) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983838,-0.00106422) , 
2, 0.576923, 1, 0, 0.904416,-3.5817e-05) , 
0, -0.631589, 1, 0, 0.883685,-7.75575e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00718963,0.000877726) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0295168,0.00248856) , 
0, -2.86593, 1, 0, 0.0189004,0.000346103) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.174402,-0.000408548) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0215632,0.00198554) , 
0, 1.80144, 1, 0, 0.1054,-2.77129e-05) , 
0, -1.92062, 1, 0, 0.0793766,8.47486e-05) , 
3, 2, 1, 0, 0.5,-5.33876e-05)    );
  // itree = 553
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0278121,-0.00224249) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0274055,0.000496094) , 
1, 2, 1, 0, 0.0276082,-0.000257854) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.474405,-0.00207732) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112844,0.000680467) , 
3, 2, 1, 0, 0.206586,-0.000369645) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961334,0.000657005) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873457,0.00469409) , 
0, 1.28756, 1, 0, 0.950128,0.000337286) , 
2, 0.423135, 1, 0, 0.623926,4.30399e-05) , 
2, -0.692308, 1, 0, 0.5,-1.32788e-07)    );
  // itree = 554
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0207984,-0.00288336) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0116215,0.000538766) , 
0, 2.69256, 1, 0, 0.016365,-0.000277277) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.220806,0.000277342) , 
2, 0.153846, 1, 0, 0.0726043,-0.000152853) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509043,0.000659531) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0151935,-0.00149551) , 
1, 3, 1, 0, 0.152763,-0.000108152) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454898,-0.00148525) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977914,0.00241191) , 
2, 0.544384, 1, 0, 0.867893,-4.23724e-05) , 
2, 0.153846, 1, 0, 0.637494,4.90548e-05) , 
1, 1, 1, 0, 0.5,-5.37009e-05)    );
  // itree = 555
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.16717,8.04601e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0921192,-0.00166516) , 
0, 1.4406, 1, 0, 0.12923,-0.000300092) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0409732,0.000661383) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00652051,-0.00249447) , 
0, 2.93588, 1, 0, 0.0251357,2.65482e-05) , 
0, 2.17838, 1, 0, 0.0726043,-0.000122404) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509043,0.000527632) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0151935,-0.00120019) , 
1, 3, 1, 0, 0.152763,-0.00010776) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454898,-0.00118759) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977914,0.00193578) , 
2, 0.544384, 1, 0, 0.867893,-3.38173e-05) , 
2, 0.153846, 1, 0, 0.637494,3.92841e-05) , 
1, 1, 1, 0, 0.5,-5.33782e-05)    );
  // itree = 556
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.114133,0.00026353) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.470822,-0.00197789) , 
0, -1.85701, 1, 0, 0.198738,-0.000178498) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.743193,0.000895676) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.634697,-0.000102828) , 
0, -0.33455, 1, 0, 0.666956,8.77199e-05) , 
0, -1.44798, 1, 0, 0.546317,1.91274e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00155272) , 
0, 2.68762, 1, 0, 0.5,-4.88066e-08)    );
  // itree = 557
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.135112,-0.000571985) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0307298,0.00139891) , 
0, 1.53556, 1, 0, 0.0996068,-0.000129619) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.598394,0.00182234) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.109577,-0.00130817) , 
3, 2, 1, 0, 0.358013,-0.000801291) , 
2, 0.170076, 1, 0, 0.164125,5.20861e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892759,-0.00372331) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.914467,0.000361337) , 
0, -0.206935, 1, 0, 0.904941,-0.000661756) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996467,-0.00595631) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.986812,0.0121708) , 
3, 1, 1, 0, 0.994234,0.000175678) , 
2, 0.918645, 1, 0, 0.968695,-7.279e-05) , 
2, 0.576923, 1, 0, 0.5,-4.46334e-08)    );
  // itree = 558
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.530785,0.000295363) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.535054,0.000139874) , 
1, 2, 1, 0, 0.532911,-0.000100955) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.99369,0.00166869) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.956412,-0.00218411) , 
3, 1, 1, 0, 0.980415,0.000141045) , 
2, 0.576923, 1, 0, 0.883685,-7.55749e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0145157,-4.21258e-06) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0354728,0.00293268) , 
1, 1, 1, 0, 0.0252398,-0.000251279) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.153348,0.000344612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0575126,-0.00189772) , 
0, 1.0677, 1, 0, 0.120488,-7.76187e-05) , 
2, -0.69236, 1, 0, 0.0793766,8.32542e-05) , 
3, 2, 1, 0, 0.5,-5.30493e-05)    );
  // itree = 559
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0329514,-0.00227257) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0220932,0.000751928) , 
0, 1.15154, 1, 0, 0.0276082,-0.000151729) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.144409,-0.00133174) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.692929,4.03765e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.210365,0.00285925) , 
0, 2.0234, 1, 0, 0.657075,0.000115618) , 
2, 0.0385581, 1, 0, 0.623926,3.9992e-05) , 
2, -0.692308, 1, 0, 0.5,1.48788e-07)    );
  // itree = 560
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892551,0.000418259) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952927,-0.00143149) , 
0, 0.191198, 1, 0, 0.910179,2.4853e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904751,-0.00222766) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67473,3.22306e-06) , 
0, 1.48774, 1, 0, 0.785316,-0.000385627) , 
0, 0.989067, 1, 0, 0.883685,-7.98646e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0145157,-0.000137144) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0354728,0.00271759) , 
1, 1, 1, 0, 0.0252398,-0.000252005) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0467129,-0.00227183) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.150464,0.000314766) , 
0, -1.35616, 1, 0, 0.120488,-4.64536e-05) , 
2, -0.69236, 1, 0, 0.0793766,8.77399e-05) , 
3, 2, 1, 0, 0.5,-5.31937e-05)    );
  // itree = 561
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0329514,-0.0023176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0220932,0.000538158) , 
0, 1.15154, 1, 0, 0.0276082,-0.000174111) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.197331,-0.000845176) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0589259,0.00319396) , 
0, 1.52106, 1, 0, 0.167435,-0.000322469) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.239796,0.00267604) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903269,6.44769e-05) , 
2, 0.285578, 1, 0, 0.833731,0.000214973) , 
2, 0.192389, 1, 0, 0.623926,4.57417e-05) , 
2, -0.692308, 1, 0, 0.5,5.20927e-08)    );
  // itree = 562
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.14099,0.000334117) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0562838,-0.00253463) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0109198,0.000855973) , 
0, 2.74896, 1, 0, 0.0327249,-0.000337485) , 
0, 1.92262, 1, 0, 0.0726043,-0.000159799) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509043,0.000598661) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0151935,-0.000850678) , 
1, 3, 1, 0, 0.152763,-0.000107641) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454898,-0.00127616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977914,0.00189432) , 
2, 0.544384, 1, 0, 0.867893,-5.45161e-05) , 
2, 0.153846, 1, 0, 0.637494,5.14123e-05) , 
1, 1, 1, 0, 0.5,-5.32799e-05)    );
  // itree = 563
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.538977,0.000132288) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.526767,0.0002646) , 
0, 0.0166736, 1, 0, 0.532911,0.000225001) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.983915,-0.000203376) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.96275,-0.00371395) , 
0, 1.0662, 1, 0, 0.980415,-0.000170103) , 
2, 0.576923, 1, 0, 0.883685,-8.46993e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00496318,0.000581332) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0285063,0.00242387) , 
0, -2.98409, 1, 0, 0.0189004,0.000351908) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.125711,-0.000271435) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0235998,0.00272219) , 
1, 3, 1, 0, 0.1054,-7.48152e-05) , 
0, -1.92062, 1, 0, 0.0793766,9.28629e-05) , 
3, 2, 1, 0, 0.5,-5.30991e-05)    );
  // itree = 564
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0329514,-0.00208938) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0220932,0.000514702) , 
0, 1.15154, 1, 0, 0.0276082,-0.000154242) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.156113,-0.0010461) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.195977,0.00131186) , 
2, 0.125826, 1, 0, 0.167435,-0.000300197) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.239796,0.00234245) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.903269,9.59212e-05) , 
2, 0.285578, 1, 0, 0.833731,0.000197009) , 
2, 0.192389, 1, 0, 0.623926,4.0448e-05) , 
2, -0.692308, 1, 0, 0.5,-1.21947e-08)    );
  // itree = 565
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.816307,-0.000530588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95213,0.000166406) , 
0, -0.806157, 1, 0, 0.910791,-4.80691e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.72,-0.000574465) , 
0, 1.3132, 1, 0, 0.883685,-9.20485e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00496318,0.000885062) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0285063,0.00212775) , 
0, -2.98409, 1, 0, 0.0189004,0.000316873) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.184522,-0.00048356) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0701213,0.000503984) , 
0, 0.206289, 1, 0, 0.1054,7.89376e-06) , 
0, -1.92062, 1, 0, 0.0793766,0.000100849) , 
3, 2, 1, 0, 0.5,-5.27536e-05)    );
  // itree = 566
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206953,0.000487023) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971439,-0.00144387) , 
2, 0.576923, 1, 0, 0.575265,6.59652e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.00121202) , 
0, 2.09682, 1, 0, 0.546317,2.56376e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00206986) , 
0, 2.68762, 1, 0, 0.5,-3.9346e-08)    );
  // itree = 567
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0329514,-0.00201664) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0220932,0.000635137) , 
0, 1.15154, 1, 0, 0.0276082,-0.000137297) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.474405,-0.00180906) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.112844,0.000689109) , 
3, 2, 1, 0, 0.206586,-0.000366227) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.961334,0.000248607) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.873457,0.00430379) , 
0, 1.28756, 1, 0, 0.950128,0.000256851) , 
2, 0.423135, 1, 0, 0.623926,3.59781e-05) , 
2, -0.692308, 1, 0, 0.5,-3.17245e-08)    );
  // itree = 568
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.801847,0.00129123) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.486597,-0.000323257) , 
1, 2, 1, 0, 0.591626,-2.90977e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.494682,-0.00151024) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.174867,0.000850129) , 
0, 2.00593, 1, 0, 0.367675,-0.000292713) , 
0, 1.21062, 1, 0, 0.546317,2.20919e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00178645) , 
0, 2.68762, 1, 0, 0.5,-1.34352e-08)    );
  // itree = 569
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.010247,-0.00305776) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0524688,0.00276337) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.461594,-0.000119988) , 
2, 0.153846, 1, 0, 0.280347,0.000414105) , 
0, -2.73299, 1, 0, 0.179235,0.000146333) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.628165,-0.00105682) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.70891,-0.000228807) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0491032,0.00160886) , 
3, 3, 1, 0, 0.587539,3.10566e-05) , 
0, -1.03438, 1, 0, 0.591743,-4.18727e-05) , 
0, -1.5366, 1, 0, 0.5,-1.51647e-08)    );
  // itree = 570
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.14099,0.00028777) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0562838,-0.0021155) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0109198,0.000904) , 
0, 2.74896, 1, 0, 0.0327249,-0.000270539) , 
0, 1.92262, 1, 0, 0.0726043,-0.000124854) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.509043,0.000497736) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0151935,-0.000809209) , 
1, 3, 1, 0, 0.152763,-0.000105961) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.454898,-0.00118368) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.977914,0.00182521) , 
2, 0.544384, 1, 0, 0.867893,-4.41202e-05) , 
2, 0.153846, 1, 0, 0.637494,4.0094e-05) , 
1, 1, 1, 0, 0.5,-5.1836e-05)    );
  // itree = 571
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206953,0.000480648) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971439,-0.00155181) , 
2, 0.576923, 1, 0, 0.575265,5.62622e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.00103997) , 
0, 2.09682, 1, 0, 0.546317,2.17512e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.0017612) , 
0, 2.68762, 1, 0, 0.5,-3.7811e-08)    );
  // itree = 572
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.010247,-0.00243244) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667195,0.00141393) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0406649,-0.000197345) , 
3, 2, 1, 0, 0.280347,7.82407e-05) , 
0, -2.73299, 1, 0, 0.179235,0.000120737) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.761865,-4.08476e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.449961,-0.00155121) , 
0, 1.43787, 1, 0, 0.724846,-0.000105386) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0172017,-0.00136783) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.21098,0.00207529) , 
2, -0.692308, 1, 0, 0.0919358,0.000231371) , 
0, 1.97869, 1, 0, 0.591743,-3.45646e-05) , 
0, -1.5366, 1, 0, 0.5,-2.51182e-08)    );
  // itree = 573
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.68428,-0.000396852) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0425157,0.00306005) , 
3, 3, 1, 0, 0.550645,-2.70939e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.993106,0.00499488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.595829,-0.00121124) , 
3, 1, 1, 0, 0.768281,-0.000238144) , 
0, 0.442572, 1, 0, 0.590497,-3.96497e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559244,0.00126212) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245967,-0.000856379) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0157318,0.000951231) , 
0, 2.61722, 1, 0, 0.13573,-0.000135583) , 
0, 1.74235, 1, 0, 0.268901,0.000101097) , 
0, 1.15154, 1, 0, 0.5,-4.35441e-08)    );
  // itree = 574
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.707551,-0.000182793) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.50239,0.00116521) , 
0, 0.979149, 1, 0, 0.656301,8.48127e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0112509,0.00730171) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0773662,-0.00251584) , 
0, -2.62958, 1, 0, 0.0461226,-0.000293706) , 
3, 3, 1, 0, 0.546317,-3.49309e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00135033) , 
0, 2.68762, 1, 0, 0.5,-5.51976e-08)    );
  // itree = 575
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851064,-0.00102228) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.909588,0.00119175) , 
0, -1.136, 1, 0, 0.89352,0.000188265) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.851772,-0.00193543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.414512,0.000176353) , 
0, 0.515828, 1, 0, 0.480655,-6.46659e-05) , 
0, 0.142832, 1, 0, 0.637728,3.15608e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00915216,-0.00353549) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0722577,0.000851588) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.162871,-0.000832271) , 
0, -1.52151, 1, 0, 0.106842,2.86522e-05) , 
0, -2.69174, 1, 0, 0.0720437,-9.8691e-05) , 
1, 3, 1, 0, 0.5,-5.34036e-05)    );
  // itree = 576
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975594,-0.00282962) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994462,0.00259008) , 
0, -0.960511, 1, 0, 0.989849,1.32081e-07) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.976525,-0.0032499) , 
0, 0.865652, 1, 0, 0.986971,-8.85253e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.199295,0.00152612) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0152849,-0.00176983) , 
3, 3, 1, 0, 0.105339,-9.18903e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.438704,6.51966e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0903879,-0.00188596) , 
1, 3, 1, 0, 0.401921,-5.13539e-05) , 
0, -1.5366, 1, 0, 0.319382,3.26539e-05) , 
3, 1, 1, 0, 0.5,-5.26195e-05)    );
  // itree = 577
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.21416,0.000254132) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.973371,-0.000820822) , 
2, 0.576923, 1, 0, 0.587071,3.13186e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313126,-0.00127255) , 
0, 1.74234, 1, 0, 0.565771,-1.76398e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702364,0.00114488) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00741413,-0.00204986) , 
0, 2.924, 1, 0, 0.039065,0.000122782) , 
0, 2.3036, 1, 0, 0.5,-1.0508e-07)    );
  // itree = 578
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206953,0.000367849) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971439,-0.00108143) , 
2, 0.576923, 1, 0, 0.575265,5.03684e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.00113626) , 
0, 2.09682, 1, 0, 0.546317,1.34159e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00109895) , 
0, 2.68762, 1, 0, 0.5,-8.97609e-08)    );
  // itree = 579
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.989147,-0.00160396) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.39784,0.000132591) , 
3, 1, 1, 0, 0.587071,-2.94782e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.313126,-0.000935664) , 
0, 1.74234, 1, 0, 0.565771,-2.07695e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702364,0.00114081) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00741413,-0.00143053) , 
0, 2.924, 1, 0, 0.039065,0.000144992) , 
0, 2.3036, 1, 0, 0.5,-7.05736e-08)    );
  // itree = 580
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920415,0.00149385) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.737525,-5.20497e-06) , 
0, -0.065865, 1, 0, 0.808495,0.000202698) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.173417,-0.0013744) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.761001,0.000259288) , 
0, -1.44799, 1, 0, 0.484522,-0.00015139) , 
1, 2, 1, 0, 0.590497,-2.86756e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559244,0.000807439) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245967,-0.000536431) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0157318,0.00112767) , 
0, 2.61722, 1, 0, 0.13573,-4.90249e-05) , 
0, 1.74235, 1, 0, 0.268901,9.06176e-05) , 
0, 1.15154, 1, 0, 0.5,-5.63162e-08)    );
  // itree = 581
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.010247,-0.00256442) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667195,0.00135961) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0406649,-0.000159296) , 
3, 2, 1, 0, 0.280347,6.3131e-05) , 
0, -2.73299, 1, 0, 0.179235,0.000111655) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.774444,2.33792e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.510038,-0.00127895) , 
0, 1.16747, 1, 0, 0.724846,-0.000107773) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.205259,0.0020529) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0180567,-0.00117441) , 
0, 2.55816, 1, 0, 0.0919358,0.000252514) , 
0, 1.97869, 1, 0, 0.591743,-3.20031e-05) , 
0, -1.5366, 1, 0, 0.5,-5.31918e-08)    );
  // itree = 582
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.920415,0.00118478) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.737525,-8.83975e-06) , 
0, -0.065865, 1, 0, 0.808495,0.000159204) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.36989,2.04414e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.888704,-0.00167247) , 
0, -0.266394, 1, 0, 0.484522,-0.000132095) , 
1, 2, 1, 0, 0.590497,-2.84175e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.559244,0.000894697) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.245967,-0.000603115) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0157318,0.00113711) , 
0, 2.61722, 1, 0, 0.13573,-6.40093e-05) , 
0, 1.74235, 1, 0, 0.268901,9.37641e-05) , 
0, 1.15154, 1, 0, 0.5,-6.50649e-08)    );
  // itree = 583
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00855624,0.00464907) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0828122,-0.000482946) , 
0, -2.8216, 1, 0, 0.0401222,0.000134024) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.300484,0.000193616) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.974749,-0.00219056) , 
2, 0.576923, 1, 0, 0.692908,-9.88768e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.577414,0.000753074) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0279333,-0.00261702) , 
3, 3, 1, 0, 0.416962,0.000165369) , 
0, 0.501668, 1, 0, 0.56617,-1.93377e-05) , 
0, -2.30464, 1, 0, 0.5,-4.6693e-08)    );
  // itree = 584
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0409402,0.00381628) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.248382,-0.000253601) , 
1, 1, 1, 0, 0.210975,-6.37594e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0723393,-0.00305521) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0147395,0.00103232) , 
3, 3, 1, 0, 0.0372889,-7.84874e-05) , 
0, 1.91958, 1, 0, 0.164125,-5.92677e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.932068,0.000673503) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.980359,0.00433053) , 
0, -1.12099, 1, 0, 0.954788,0.000344131) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.986906,-0.00496833) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.967513,0.00126968) , 
0, 0.15216, 1, 0, 0.97451,-2.68422e-05) , 
0, -0.631314, 1, 0, 0.968695,8.255e-05) , 
2, 0.576923, 1, 0, 0.5,-6.45653e-08)    );
  // itree = 585
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.169263,-0.00121795) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0848954,-0.000559429) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0132393,0.00163261) , 
3, 3, 1, 0, 0.0457305,1.44586e-05) , 
0, 1.4111, 1, 0, 0.0726043,-0.000111326) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.919011,0.000245543) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.937969,0.00151893) , 
0, 1.10319, 1, 0, 0.921754,0.000149429) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.484334,-0.000684838) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.015964,0.00162091) , 
1, 3, 1, 0, 0.126813,-9.57672e-05) , 
3, 2, 1, 0, 0.637494,-6.85305e-05) , 
1, 1, 1, 0, 0.5,-5.25497e-05)    );
  // itree = 586
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00843268,0.00133326) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0629498,-0.00241971) , 
2, -9.5932, 1, 0, 0.036949,-0.000442286) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.131939,-0.00037594) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.425922,0.00122958) , 
2, 0.170076, 1, 0, 0.211346,0.000100352) , 
0, -1.92062, 1, 0, 0.164125,-4.65781e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982395,0.00478402) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899467,-0.00148958) , 
3, 1, 1, 0, 0.92969,0.000170554) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994764,-0.00466509) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.99885,0.0424341) , 
2, 0.998123, 1, 0, 0.996402,0.000204812) , 
2, 0.951187, 1, 0, 0.968695,6.47905e-05) , 
2, 0.576923, 1, 0, 0.5,-8.62592e-08)    );
  // itree = 587
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.010247,-0.0028927) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.667195,0.00131125) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0406649,9.05234e-05) , 
3, 2, 1, 0, 0.280347,7.66224e-05) , 
0, -2.73299, 1, 0, 0.179235,0.000120352) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.694833,-0.000809359) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0863777,0.000922194) , 
0, 1.97871, 1, 0, 0.494723,-0.000165051) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.691598,-0.000158012) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.924038,0.00247745) , 
0, 0.131697, 1, 0, 0.760666,0.000195228) , 
1, 2, 1, 0, 0.591743,1.86627e-05) , 
0, -1.5366, 1, 0, 0.5,6.26877e-07)    );
  // itree = 588
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996033,-0.0101857) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.982904,0.00259281) , 
1, 2, 1, 0, 0.988017,-2.08185e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994222,-0.00143895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97521,-0.00418643) , 
0, 0.919408, 1, 0, 0.985676,-0.000284296) , 
0, 0.167417, 1, 0, 0.986971,-0.000105322) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.199295,0.0013895) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0152849,-0.00113774) , 
3, 3, 1, 0, 0.105339,-9.18051e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.44421,-0.00110011) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.397157,4.99777e-05) , 
0, -1.03438, 1, 0, 0.401921,-5.0549e-05) , 
0, -1.5366, 1, 0, 0.319382,3.97483e-05) , 
3, 1, 1, 0, 0.5,-5.25408e-05)    );
  // itree = 589
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.975591,-0.00292138) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.994602,0.00536926) , 
0, -0.960549, 1, 0, 0.988017,3.16241e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.994222,-0.00114814) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.97521,-0.00333205) , 
0, 0.919408, 1, 0, 0.985676,-0.000227316) , 
0, 0.167417, 1, 0, 0.986971,-8.40475e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0102125,-0.00214078) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.171441,0.00105683) , 
0, -2.73299, 1, 0, 0.105339,0.000219087) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.438704,5.26113e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0903879,-0.00142207) , 
1, 3, 1, 0, 0.401921,-4.04022e-05) , 
0, -1.5366, 1, 0, 0.319382,3.17869e-05) , 
3, 1, 1, 0, 0.5,-5.23227e-05)    );
  // itree = 590
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00855624,0.00450192) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0828122,-0.000401462) , 
0, -2.8216, 1, 0, 0.0401222,0.00014028) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.289424,0.000380339) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.468357,-0.00188381) , 
0, -1.85132, 1, 0, 0.377629,-0.000374994) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.493388,-0.000298213) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.770467,0.000669149) , 
1, 2, 1, 0, 0.592544,6.95781e-06) , 
0, -1.46274, 1, 0, 0.56617,-1.97499e-05) , 
0, -2.30464, 1, 0, 0.5,3.79863e-07)    );
  // itree = 591
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00843268,0.00143667) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0629498,-0.00235498) , 
2, -9.5932, 1, 0, 0.036949,-0.00042463) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.303844,0.000518516) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0320168,-0.00264886) , 
0, 2.0673, 1, 0, 0.211346,9.72678e-05) , 
0, -1.92062, 1, 0, 0.164125,-4.40464e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.982395,0.00429014) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.899467,-0.00124538) , 
3, 1, 1, 0, 0.92969,0.000146425) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996708,-0.00328861) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.995332,0.0223247) , 
0, 0.795061, 1, 0, 0.996402,0.000174042) , 
2, 0.951187, 1, 0, 0.968695,6.21394e-05) , 
2, 0.576923, 1, 0, 0.5,2.81895e-07)    );
  // itree = 592
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.805477,0.000547161) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.485617,-0.000239915) , 
1, 2, 1, 0, 0.59121,-2.90961e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.151737,0.000497221) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.938691,-0.00427955) , 
2, 0.576923, 1, 0, 0.444451,-0.000234654) , 
0, 1.18108, 1, 0, 0.565771,-2.81703e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0702364,0.00134309) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00741413,-0.000838306) , 
0, 2.924, 1, 0, 0.039065,0.000200993) , 
0, 2.3036, 1, 0, 0.5,4.45811e-07)    );
  // itree = 593
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0255735,0.00028562) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.649519,-0.000456166) , 
1, 1, 1, 0, 0.253065,-3.35563e-06) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0157275,-0.00185157) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0376692,0.00361672) , 
0, -2.02606, 1, 0, 0.0237983,0.000244079) , 
1, 3, 1, 0, 0.164125,-9.12106e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.89148,0.000630028) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996145,-0.00641381) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983698,0.00569759) , 
3, 1, 1, 0, 0.993011,0.000227871) , 
2, 0.902374, 1, 0, 0.968695,7.95362e-05) , 
2, 0.576923, 1, 0, 0.5,3.73391e-07)    );
  // itree = 594
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.00456521,-0.00162413) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0694124,0.00145585) , 
0, -3.02838, 1, 0, 0.0401222,0.000223336) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.922542,0.000498747) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.126947,-0.000343748) , 
3, 2, 1, 0, 0.637839,-1.34847e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.081076,-0.00282446) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.153829,0.000187463) , 
0, -1.69551, 1, 0, 0.123952,-0.000338057) , 
1, 3, 1, 0, 0.56617,1.4098e-05) , 
0, -2.30464, 1, 0, 0.5,3.41668e-07)    );
  // itree = 595
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0161649,-0.00148048) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.226611,0.0016708) , 
2, -0.692308, 1, 0, 0.102678,0.000179183) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0384503,0.00105573) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.184577,-0.000920923) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.872312,0.000840005) , 
2, 0.192389, 1, 0, 0.662786,-7.51041e-05) , 
2, -0.692308, 1, 0, 0.582353,-3.68308e-05) , 
0, -1.92062, 1, 0, 0.5,2.55335e-07)    );
  // itree = 596
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.892551,0.000275371) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.952927,-0.00138395) , 
0, 0.191198, 1, 0, 0.910179,-2.8632e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904751,-0.00240947) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67473,0.000315858) , 
0, 1.48774, 1, 0, 0.785316,-0.000307481) , 
0, 0.989067, 1, 0, 0.883685,-8.77984e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0145157,0.000725839) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0354728,0.00334285) , 
1, 1, 1, 0, 0.0252398,-0.000246442) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.115173,0.000257774) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.137195,-0.00181765) , 
2, 0.192377, 1, 0, 0.120488,-0.000122333) , 
2, -0.69236, 1, 0, 0.0793766,9.66552e-05) , 
3, 2, 1, 0, 0.5,-5.20187e-05)    );
  // itree = 597
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.873217,-0.000546419) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.95683,0.000908745) , 
0, -0.207732, 1, 0, 0.910179,-2.2892e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.904751,-0.00192421) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.67473,0.000252686) , 
0, 1.48774, 1, 0, 0.785316,-0.00024592) , 
0, 0.989067, 1, 0, 0.883685,-7.02142e-05) , 
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0295869,0.000212196) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0207634,0.00359937) , 
0, 1.15154, 1, 0, 0.0252398,0.000307891) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.120692,0.000728511) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.120368,-0.000767367) , 
2, 0.0770111, 1, 0, 0.120488,-9.78899e-05) , 
2, -0.69236, 1, 0, 0.0793766,7.72542e-05) , 
3, 2, 1, 0, 0.5,-5.27716e-05)    );
  // itree = 598
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.206953,0.000313893) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.971439,-0.000749236) , 
2, 0.576923, 1, 0, 0.575265,5.52346e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.152539,-0.00104005) , 
0, 2.09682, 1, 0, 0.546317,2.08498e-05) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.0136917,-0.00167971) , 
0, 2.68762, 1, 0, 0.5,7.67349e-08)    );
  // itree = 599
  fBoostWeights.push_back(1);
  fForest.push_back( 
NN(
NN(
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.027622,-0.00219058) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.273039,0.000316087) , 
0, -2.18648, 1, 0, 0.201423,5.95066e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.0390957,-0.00358761) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.00630898,0.00411116) , 
0, 3.02744, 1, 0, 0.0238308,-0.000489114) , 
0, 2.3036, 1, 0, 0.164125,-5.57163e-05) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.89148,0.000603888) , 
NN(
NN(
0, 
0, 
-1, 0, 1, -99, 0.996145,-0.00503492) , 
NN(
0, 
0, 
-1, 0, 1, -99, 0.983698,0.00469281) , 
3, 1, 1, 0, 0.993011,0.000228408) , 
2, 0.902374, 1, 0, 0.968695,7.78836e-05) , 
2, 0.576923, 1, 0, 0.5,5.62094e-08)    );
   return;
};
 
// Clean up
inline void ReadBDTG::Clear() 
{
   for (unsigned int itree=0; itree<fForest.size(); itree++) { 
      delete fForest[itree]; 
   }
}
   inline double ReadBDTG::GetMvaValue( const std::vector<double>& inputValues ) const
   {
      // classifier response value
      double retval = 0;

      // classifier response, sanity check first
      if (!IsStatusClean()) {
         std::cout << "Problem in class \"" << fClassName << "\": cannot return classifier response"
                   << " because status is dirty" << std::endl;
         retval = 0;
      }
      else {
         if (IsNormalised()) {
            // normalise variables
            std::vector<double> iV;
            iV.reserve(inputValues.size());
            int ivar = 0;
            for (std::vector<double>::const_iterator varIt = inputValues.begin();
                 varIt != inputValues.end(); varIt++, ivar++) {
               iV.push_back(NormVariable( *varIt, fVmin[ivar], fVmax[ivar] ));
            }
            retval = GetMvaValue__( iV );
         }
         else {
            retval = GetMvaValue__( inputValues );
         }
      }

      return retval;
   }
