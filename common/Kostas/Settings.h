#ifndef _Settings_h
#define _Settings_h
//---- signal masses ----------------
const int H_MASS[10] = {115,120,125,130,135,140,145,150,155,160};
//---- cross sections in pb ---------
const float XSEC_T      = 71.29;
const float XSEC_TBAR   = 43.56;
const float XSEC_TTJETS = 225.197;
const float XSEC_ZJETS  = 650;
const float XSEC_WJETS  = 1205;
const float XSEC_HT100  = 1.036e+7;
const float XSEC_HT250  = 2.760e+5;
const float XSEC_HT500  = 8.426e+3;
const float XSEC_HT1000 = 204.;
const float XSEC_SIGNAL[10] = {1.215,1.069,0.911,0.746,0.585,0.438,0.309,0.201,0.115,0.041};
const float XSEC_GLUGLU[10] = {16.14,13.69,11.26,8.93,6.78,4.92,3.38,2.14,1.18,0.413};
//---- number of MC events ----------
const int N_T      = 3748227;
const int N_TBAR   = 1935072;
const int N_TTJETS = 6923750;
const int N_ZJETS  = 8130192;
const int N_WJETS  = 4655107;
const int N_HT100  = 50023348;
const int N_HT250  = 26981684;
const int N_HT500  = 30522164;
const int N_HT1000 = 13808234;
//const int N_SIGNAL[5] = {199754,199718,991754,199792,199788};
const int N_SIGNAL[10] = {199754,4756782,4783005,998890,2475319,4783005,4783005,4783005,4783005,4783005};
const int N_GLUGLU[10] = {999908,999908,999908,999908,999908,999908,999908,999908,999908,999908};
//---- luminosity in 1/pb -----------
const float LUMI = 19012.;
//---- pt boundaries for QGLnew -----
TString PT_CAT[7]  = {"30to50","50to80","80to120","120to170","170to300","300to470","470to600"};
const float PT_QGL[8] = {0,50,80,120,170,300,470,1000};
//---- eta boundaries for QGLnew ----
TString ETA_CAT[3] = {"central","transition","forward"};
const float ETA_QGL[4] = {0,2,3,5};
//---- index finder -----------------
int FindIndex(int N, const float BND[], float x)
{
  int index(-1);
  for(int i=0;i<N-1;i++) {
    if ((x > BND[i]) && (x < BND[i+1])) {
      index = i;
      return index;
    }
  }
  return index;
}
// new 53X coeff (2011 42X coeff are commented)
// Corrections  axis1,    axis2 ,     pull ,    mult,       R,       ptD       
float cor_rho[7][3][6] = {
  {
    {0.000696, 0.000642, 0.000060, -0.012049, -0.002013 , -0.002029}, 
    {0.001469, 0.001128, 0.000099, 0.230114, -0.003204, -0.003301},
    {0.000960, 0.000958, 0.000063, 0.228834, -0.003283, -0.003322}
  },  
  {
    {0.000446, 0.000406, 0.000033, -0.002534, -0.001154 , -0.001312},
    {0.001347, 0.000964, 0.000100, 0.196515, -0.002769, -0.002907}, 
    {0.000845, 0.000784, 0.000059, 0.211113, -0.003340, -0.003351}
  },
  { 
    {0.000291, 0.000264, 0.000018, 0.003283, -0.000713 , -0.000919}, 
    {0.001045, 0.000736, 0.000076, 0.182445, -0.002352, -0.002531}, 
    {0.000630, 0.000590, 0.000043, 0.201430, -0.003097, -0.003090} 
  },
  {
    {0.000208, 0.000184, 0.000011, 0.005118, -0.000486 , -0.000667}, 
    {0.000754, 0.000540, 0.000049, 0.170863, -0.001904, -0.002085}, 
    {0.000470, 0.000451, 0.000030, 0.196330, -0.002770, -0.002766} 
  },
  {
    {0.000146, 0.000127, 0.000007, 0.004974, -0.000337 , -0.000476}, 
    {0.000541, 0.000395, 0.000030, 0.168255, -0.001517, -0.001685}, 
    {0.000384, 0.000361, 0.000020, 0.188181, -0.002517, -0.002458} 
  },
  {
    {0.000091, 0.000070, 0.000004, 0.004071, -0.000231 , -0.000275}, 
    {0.000310, 0.000243, 0.000014, 0.170718, -0.001004, -0.001141},
    {0.000410, 0.000226, -0.000097, 0.135866, -0.003550, -0.003048} 
  },
  {
    {0.000062, 0.000043, 0.000003, 0.003028, -0.000189 , -0.000139}, 
    {0.000211, 0.000163, 0.000009, 0.182038, -0.000792, -0.000895}, 
    {-0.002664, -0.001128, -0.000142, 0.114548, 0.005115, 0.000035} 
  }
};
#endif
